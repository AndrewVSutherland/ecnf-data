print "Field 2.2.421.1";
Qx<x> := PolynomialRing(RationalField());
K<w> := NumberField(x^2 - x - 105);
OK := Integers(K);
Plist := [];
Append(~Plist,(4*w + 39)*OK);
Append(~Plist,(-4*w + 43)*OK);
Append(~Plist,(2)*OK);
Append(~Plist,(w + 10)*OK);
Append(~Plist,(-w + 11)*OK);
Append(~Plist,(54*w - 581)*OK);
Append(~Plist,(-54*w - 527)*OK);
Append(~Plist,(-25*w + 269)*OK);
Append(~Plist,(25*w + 244)*OK);
Append(~Plist,(3*w + 29)*OK);
Append(~Plist,(3*w - 32)*OK);
Append(~Plist,(-9*w + 97)*OK);
Append(~Plist,(-9*w - 88)*OK);
Append(~Plist,(-37*w - 361)*OK);
Append(~Plist,(-37*w + 398)*OK);
Append(~Plist,(11*w - 118)*OK);
Append(~Plist,(11*w + 107)*OK);
Append(~Plist,(-2*w + 19)*OK);
Append(~Plist,(2*w + 17)*OK);
Append(~Plist,(-357*w + 3841)*OK);
Append(~Plist,(-299*w + 3217)*OK);
Append(~Plist,(w + 1)*OK);
Append(~Plist,(w - 2)*OK);
Append(~Plist,(14*w + 137)*OK);
Append(~Plist,(-14*w + 151)*OK);
Append(~Plist,(-3*w + 34)*OK);
Append(~Plist,(-3*w - 31)*OK);
Append(~Plist,(141*w + 1376)*OK);
Append(~Plist,(-141*w + 1517)*OK);
Append(~Plist,(195*w - 2098)*OK);
Append(~Plist,(-195*w - 1903)*OK);
Append(~Plist,(30*w - 323)*OK);
Append(~Plist,(30*w + 293)*OK);
Append(~Plist,(-45*w - 439)*OK);
Append(~Plist,(-45*w + 484)*OK);
Append(~Plist,(-4*w - 37)*OK);
Append(~Plist,(4*w - 41)*OK);
Append(~Plist,(w + 16)*OK);
Append(~Plist,(w - 17)*OK);
Append(~Plist,(13)*OK);
Append(~Plist,(-5*w + 52)*OK);
Append(~Plist,(5*w + 47)*OK);
Append(~Plist,(-3*w + 29)*OK);
Append(~Plist,(3*w + 26)*OK);
Append(~Plist,(-49*w - 478)*OK);
Append(~Plist,(-49*w + 527)*OK);
Append(~Plist,(386*w + 3767)*OK);
Append(~Plist,(-386*w + 4153)*OK);
Append(~Plist,(120*w - 1291)*OK);
Append(~Plist,(-120*w - 1171)*OK);
Append(~Plist,(96*w - 1033)*OK);
Append(~Plist,(-96*w - 937)*OK);
Append(~Plist,(-212*w - 2069)*OK);
Append(~Plist,(212*w - 2281)*OK);
Append(~Plist,(-2*w + 13)*OK);
Append(~Plist,(2*w + 11)*OK);
Append(~Plist,(16*w - 173)*OK);
Append(~Plist,(-16*w - 157)*OK);
Append(~Plist,(199*w + 1942)*OK);
Append(~Plist,(-199*w + 2141)*OK);
Append(~Plist,(-6*w + 67)*OK);
Append(~Plist,(-6*w - 61)*OK);
Append(~Plist,(-3*w + 37)*OK);
Append(~Plist,(3*w + 34)*OK);
Append(~Plist,(-57*w - 556)*OK);
Append(~Plist,(-57*w + 613)*OK);
Append(~Plist,(523*w - 5627)*OK);
Append(~Plist,(523*w + 5104)*OK);
Append(~Plist,(-3*w + 26)*OK);
Append(~Plist,(3*w + 23)*OK);
Append(~Plist,(88*w + 859)*OK);
Append(~Plist,(-88*w + 947)*OK);
Append(~Plist,(19)*OK);
Append(~Plist,(361*w - 3884)*OK);
Append(~Plist,(-361*w - 3523)*OK);
Append(~Plist,(-17*w - 167)*OK);
Append(~Plist,(17*w - 184)*OK);
Append(~Plist,(w + 22)*OK);
Append(~Plist,(w - 23)*OK);
Append(~Plist,(35*w - 376)*OK);
Append(~Plist,(35*w + 341)*OK);
Append(~Plist,(-2*w + 1)*OK);
Append(~Plist,(-117*w - 1142)*OK);
Append(~Plist,(-117*w + 1259)*OK);
Append(~Plist,(5*w - 58)*OK);
Append(~Plist,(-5*w - 53)*OK);
Append(~Plist,(21*w - 227)*OK);
Append(~Plist,(-21*w - 206)*OK);
Append(~Plist,(153*w + 1493)*OK);
Append(~Plist,(153*w - 1646)*OK);
Append(~Plist,(-2*w + 31)*OK);
Append(~Plist,(2*w + 29)*OK);
Append(~Plist,(-15*w + 163)*OK);
Append(~Plist,(15*w + 148)*OK);
Append(~Plist,(113*w - 1216)*OK);
Append(~Plist,(113*w + 1103)*OK);
Append(~Plist,(40*w + 391)*OK);
Append(~Plist,(-40*w + 431)*OK);
Append(~Plist,(23)*OK);
Append(~Plist,(262*w - 2819)*OK);
effort := 400;
ECSearch := procedure(class_label, N, aplist);
print "Isogeny class ", class_label;
goodP := [P: P in Plist | Valuation(N,P) eq 0];
goodP := [goodP[i]: i in [1..#(aplist)]];
curves := EllipticCurveSearch(N,effort : Primes:=goodP, Traces:=aplist);
curves := [E: E in curves | &and[TraceOfFrobenius(E,goodP[i]) eq aplist[i] : i in [1..#(aplist)]]];
if #curves eq 0 then print "No curve found"; end if;
for E in curves do;
 a1,a2,a3,a4,a6:=Explode(aInvariants(E));
 printf "Curve [%o,%o,%o,%o,%o]\n",a1,a2,a3,a4,a6;
 end for;
end procedure;
SetColumns(0);

ECSearch("4.1-a",(2)*OK,[-2, 2, 4, 0, 5, -3, 2, -2, 3, -5, 9, 9, 6, 10, 5, -3, -7, 1, -14, 18, -1, 7, 2, -10, -4, 16, 6, -18, 14]);
ECSearch("4.1-b",(2)*OK,[2, 2, 0, 0, 1, 1, 6, 6, 3, 3, 5, 5, 14, 14, 1, 1, 1, 1, -18, -18, -13, -13, -18, -18, -16, -16, 6, 6, 6]);
ECSearch("4.1-c",(2)*OK,[2, -2, 0, 4, -3, 5, -2, 2, -5, 3, 9, 9, 10, 6, -3, 5, 1, -7, 18, -14, 7, -1, -10, 2, 16, -4, -18, 6, -10]);
ECSearch("5.1-a",(w + 10)*OK,[0, 1, 1, 3, 3, -4, 0, -3, 4, -2, 10, -10, -8, -1, 7, -5, -14, -9, 6, -12, -12, -1, 14, 17, -7, 9, -16, -6, 9]);
ECSearch("5.2-a",(-w + 11)*OK,[1, 0, 1, 3, -4, 3, -3, 0, -2, 4, -10, 10, -1, -8, -5, 7, -9, -14, -12, 6, -1, -12, 17, 14, 9, -7, -6, -16, -17]);
