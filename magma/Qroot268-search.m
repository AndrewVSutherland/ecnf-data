print "Field 2.2.268.1";
Qx<x> := PolynomialRing(RationalField());
K<w> := NumberField(x^2 - 67);
OK := Integers(K);
Plist := [];
Append(~Plist,(-27*w + 221)*OK);
Append(~Plist,(w - 8)*OK);
Append(~Plist,(w + 8)*OK);
Append(~Plist,(-11*w + 90)*OK);
Append(~Plist,(-11*w - 90)*OK);
Append(~Plist,(6*w - 49)*OK);
Append(~Plist,(-6*w - 49)*OK);
Append(~Plist,(4*w + 33)*OK);
Append(~Plist,(-4*w + 33)*OK);
Append(~Plist,(5)*OK);
Append(~Plist,(-70*w + 573)*OK);
Append(~Plist,(-70*w - 573)*OK);
Append(~Plist,(w + 6)*OK);
Append(~Plist,(w - 6)*OK);
Append(~Plist,(21*w + 172)*OK);
Append(~Plist,(21*w - 172)*OK);
Append(~Plist,(2*w - 15)*OK);
Append(~Plist,(-2*w - 15)*OK);
Append(~Plist,(w)*OK);
Append(~Plist,(-3*w - 26)*OK);
Append(~Plist,(-3*w + 26)*OK);
Append(~Plist,(92*w - 753)*OK);
Append(~Plist,(92*w + 753)*OK);
Append(~Plist,(-5*w - 42)*OK);
Append(~Plist,(5*w - 42)*OK);
Append(~Plist,(10*w + 81)*OK);
Append(~Plist,(-10*w + 81)*OK);
Append(~Plist,(-19*w + 156)*OK);
Append(~Plist,(19*w + 156)*OK);
Append(~Plist,(102*w - 835)*OK);
Append(~Plist,(-102*w - 835)*OK);
Append(~Plist,(13)*OK);
Append(~Plist,(-2*w + 21)*OK);
Append(~Plist,(2*w + 21)*OK);
Append(~Plist,(-87*w + 712)*OK);
Append(~Plist,(87*w + 712)*OK);
Append(~Plist,(-3*w + 28)*OK);
Append(~Plist,(3*w + 28)*OK);
Append(~Plist,(15*w - 122)*OK);
Append(~Plist,(15*w + 122)*OK);
Append(~Plist,(-36*w - 295)*OK);
Append(~Plist,(36*w - 295)*OK);
Append(~Plist,(12*w + 97)*OK);
Append(~Plist,(-12*w + 97)*OK);
Append(~Plist,(183*w - 1498)*OK);
Append(~Plist,(-183*w - 1498)*OK);
Append(~Plist,(-45*w - 368)*OK);
Append(~Plist,(45*w - 368)*OK);
Append(~Plist,(w + 18)*OK);
Append(~Plist,(w - 18)*OK);
Append(~Plist,(-41*w - 336)*OK);
Append(~Plist,(41*w - 336)*OK);
Append(~Plist,(-40*w + 327)*OK);
Append(~Plist,(40*w + 327)*OK);
Append(~Plist,(237*w + 1940)*OK);
Append(~Plist,(-237*w + 1940)*OK);
Append(~Plist,(107*w + 876)*OK);
Append(~Plist,(107*w - 876)*OK);
Append(~Plist,(-141*w - 1154)*OK);
Append(~Plist,(141*w - 1154)*OK);
Append(~Plist,(7*w - 60)*OK);
Append(~Plist,(7*w + 60)*OK);
Append(~Plist,(254*w - 2079)*OK);
Append(~Plist,(254*w + 2079)*OK);
Append(~Plist,(-3*w - 16)*OK);
Append(~Plist,(3*w - 16)*OK);
Append(~Plist,(-9*w - 76)*OK);
Append(~Plist,(-9*w + 76)*OK);
Append(~Plist,(19)*OK);
Append(~Plist,(7*w + 54)*OK);
Append(~Plist,(7*w - 54)*OK);
Append(~Plist,(-5*w - 36)*OK);
Append(~Plist,(5*w - 36)*OK);
Append(~Plist,(-168*w + 1375)*OK);
Append(~Plist,(168*w + 1375)*OK);
Append(~Plist,(-34*w + 279)*OK);
Append(~Plist,(34*w + 279)*OK);
Append(~Plist,(-6*w - 53)*OK);
Append(~Plist,(-6*w + 53)*OK);
Append(~Plist,(-3*w - 32)*OK);
Append(~Plist,(3*w - 32)*OK);
Append(~Plist,(-27*w - 220)*OK);
Append(~Plist,(-27*w + 220)*OK);
Append(~Plist,(-4*w - 39)*OK);
Append(~Plist,(4*w - 39)*OK);
Append(~Plist,(-51*w - 418)*OK);
Append(~Plist,(51*w - 418)*OK);
Append(~Plist,(-2*w + 27)*OK);
Append(~Plist,(2*w + 27)*OK);
Append(~Plist,(-136*w - 1113)*OK);
Append(~Plist,(-136*w + 1113)*OK);
Append(~Plist,(-32*w - 261)*OK);
Append(~Plist,(32*w - 261)*OK);
Append(~Plist,(-62*w - 507)*OK);
Append(~Plist,(62*w - 507)*OK);
Append(~Plist,(-3*w - 10)*OK);
Append(~Plist,(3*w - 10)*OK);
Append(~Plist,(w + 24)*OK);
Append(~Plist,(w - 24)*OK);
Append(~Plist,(23)*OK);
effort := 400;
ECSearch := procedure(class_label, N, aplist);
print "Isogeny class ", class_label;
goodP := [P: P in Plist | Valuation(N,P) eq 0];
goodP := [goodP[i]: i in [1..#(aplist)]];
curves := EllipticCurveSearch(N,effort : Primes:=goodP, Traces:=aplist);
curves := [E: E in curves | &and[TraceOfFrobenius(E,goodP[i]) eq aplist[i] : i in [1..#(aplist)]]];
if #curves eq 0 then print "No curve found"; end if;
for E in curves do;
 a1,a2,a3,a4,a6:=Explode(aInvariants(E));
 printf "Curve [%o,%o,%o,%o,%o]\n",a1,a2,a3,a4,a6;
 end for;
end procedure;
SetColumns(0);

ECSearch("3.1-a",(w - 8)*OK,[0, 2, -2, 4, 0, 6, -3, 3, 2, 3, 9, 4, -2, 5, -7, 4, -8, -14, 11, 11, 10, 10, -15, -9, 10, -2, -15, 15, -1]);
ECSearch("3.1-b",(w - 8)*OK,[0, -2, 2, -4, 0, -6, -3, 3, 2, 3, 9, -4, 2, 5, -7, -4, 8, 14, 11, 11, -10, -10, -15, -9, -10, 2, -15, 15, -1]);
ECSearch("3.2-a",(w + 8)*OK,[0, 2, 4, -2, 6, 0, 3, -3, 2, 9, 3, -2, 4, -7, 5, -8, 4, -14, 11, 11, 10, 10, -9, -15, -2, 10, 15, -15, -13]);
ECSearch("3.2-b",(w + 8)*OK,[0, -2, -4, 2, -6, 0, 3, -3, 2, 9, 3, 2, -4, -7, 5, 8, -4, 14, 11, 11, -10, -10, -9, -15, 2, -10, 15, -15, -13]);
ECSearch("6.1-a",(5*w + 41)*OK,[1, -2, -3, 5, 1, 0, -2, -6, 6, -3, -7, 10, -2, 3, -2, -2, 5, 2, 2, -6, 3, -14, -4, 16, -12, -6, -11, -4]);
ECSearch("6.1-b",(5*w + 41)*OK,[1, -2, 3, 5, -5, -6, -2, 6, -6, 9, 5, -8, -8, 3, -8, -8, 11, -16, 2, 0, 3, 10, -4, -14, 6, 6, -17, -4]);
ECSearch("6.1-c",(5*w + 41)*OK,[-1, -2, 1, 3, -3, -6, 6, 2, -6, -3, 7, 4, -4, -1, -8, 4, 13, 8, -10, -8, 1, 6, 0, 10, -14, -18, -21, 8]);
ECSearch("6.1-d",(5*w + 41)*OK,[1, 0, 1, 1, -1, -2, -4, 4, 6, -1, -9, 2, -4, -7, -2, -12, -1, -8, 2, 10, 13, -6, 8, 0, -12, 18, -7, 8]);
ECSearch("6.1-e",(5*w + 41)*OK,[-1, 0, -1, -1, 1, -2, -4, 4, 6, -1, 9, -2, -4, -7, 2, 12, 1, -8, 2, -10, -13, -6, 8, 0, 12, 18, -7, 8]);
ECSearch("6.1-f",(5*w + 41)*OK,[1, 2, -1, -3, 3, -6, 6, 2, -6, -3, -7, -4, -4, -1, 8, -4, -13, 8, -10, 8, -1, 6, 0, -10, 14, -18, -21, 8]);
ECSearch("6.1-g",(5*w + 41)*OK,[-1, 2, -3, -5, 5, -6, -2, 6, -6, 9, -5, 8, -8, 3, 8, 8, -11, -16, 2, 0, -3, 10, -4, 14, -6, 6, -17, -4]);
ECSearch("6.1-h",(5*w + 41)*OK,[-1, 2, 3, -5, -1, 0, -2, -6, 6, -3, 7, -10, -2, 3, 2, 2, -5, 2, 2, 6, -3, -14, -4, -16, 12, -6, -11, -4]);
ECSearch("6.2-a",(5*w - 41)*OK,[1, -3, -2, 1, 5, -2, 0, -6, -3, 6, 10, -7, 3, -2, -2, -2, 5, 2, 2, 3, -6, -4, -14, -12, 16, -11, -6, -14]);
ECSearch("6.2-b",(5*w - 41)*OK,[1, 3, -2, -5, 5, -2, -6, 6, 9, -6, -8, 5, 3, -8, -8, -8, 11, 2, -16, 3, 0, -4, 10, 6, -14, -17, 6, -14]);
ECSearch("6.2-c",(5*w - 41)*OK,[-1, 1, -2, -3, 3, 6, -6, 2, -3, -6, 4, 7, -1, -4, 4, -8, 13, -10, 8, 1, -8, 0, 6, -14, 10, -21, -18, 2]);
ECSearch("6.2-d",(5*w - 41)*OK,[1, 1, 0, -1, 1, -4, -2, 4, -1, 6, 2, -9, -7, -4, -12, -2, -1, 2, -8, 13, 10, 8, -6, -12, 0, -7, 18, -6]);
ECSearch("6.2-e",(5*w - 41)*OK,[-1, -1, 0, 1, -1, -4, -2, 4, -1, 6, -2, 9, -7, -4, 12, 2, 1, 2, -8, -13, -10, 8, -6, 12, 0, -7, 18, -6]);
ECSearch("6.2-f",(5*w - 41)*OK,[1, -1, 2, 3, -3, 6, -6, 2, -3, -6, -4, -7, -1, -4, -4, 8, -13, -10, 8, -1, 8, 0, 6, 14, -10, -21, -18, 2]);
ECSearch("6.2-g",(5*w - 41)*OK,[-1, -3, 2, 5, -5, -2, -6, 6, 9, -6, 8, -5, 3, -8, 8, 8, -11, 2, -16, -3, 0, -4, 10, -6, 14, -17, 6, -14]);
ECSearch("6.2-h",(5*w - 41)*OK,[-1, 3, 2, -1, -5, -2, 0, -6, -3, 6, -10, 7, 3, -2, 2, 2, -5, 2, 2, -3, 6, -4, -14, 12, -16, -11, -6, -14]);
ECSearch("9.2-a",(16*w + 131)*OK,[0, 0, 0, 0, 0, 0, 2, -8, 8, -4, 10, 0, 0, 12, -12, 0, 0, 0, -6, 6, 0, 0, 10, -16, 0, 0, 14, -20, 22]);
ECSearch("9.2-b",(16*w + 131)*OK,[0, 0, 0, 0, 0, 0, -1, 1, -10, -7, 7, 0, 0, 9, 9, 0, 0, 0, 15, 15, 0, 0, -17, 17, 0, 0, 23, -23, -5]);
ECSearch("9.3-a",(-16*w + 131)*OK,[0, 0, 0, 0, 0, 0, -8, 2, 8, 10, -4, 0, 0, -12, 12, 0, 0, 0, 6, -6, 0, 0, -16, 10, 0, 0, -20, 14, 22]);
ECSearch("9.3-b",(-16*w + 131)*OK,[0, 0, 0, 0, 0, 0, 1, -1, -10, 7, -7, 0, 0, 9, 9, 0, 0, 0, 15, 15, 0, 0, 17, -17, 0, 0, -23, 23, -5]);
ECSearch("12.1-a",(2*w - 16)*OK,[2, 2, 0, 4, 2, -3, -5, -6, -9, -3, 4, -10, 1, -3, 8, -4, 10, -13, 11, 6, 6, 1, -1, 2, 6, -3, -5, -13]);
ECSearch("12.1-b",(2*w - 16)*OK,[-2, -2, 0, -4, -2, -3, -5, -6, -9, -3, -4, 10, 1, -3, -8, 4, -10, -13, 11, -6, -6, 1, -1, -2, -6, -3, -5, -13]);
ECSearch("12.2-a",(2*w + 16)*OK,[2, 0, 2, 2, 4, -5, -3, -6, -3, -9, -10, 4, -3, 1, -4, 8, 10, 11, -13, 6, 6, -1, 1, 6, 2, -5, -3, 7]);
ECSearch("12.2-b",(2*w + 16)*OK,[-2, 0, -2, -2, -4, -5, -3, -6, -3, -9, 10, -4, -3, 1, 4, -8, -10, 11, -13, -6, -6, -1, 1, -6, -2, -5, -3, 7]);
ECSearch("14.1-a",(-w + 9)*OK,[0, 1, 3, -4, 1, 2, 1, -8, 9, 2, 7, -2, 0, -4, 1, -9, 8, 1, -4, -12, -4, 14, -15, 5, -16, 6, 5, 4]);
ECSearch("14.1-b",(-w + 9)*OK,[-2, 1, 5, 0, -3, 6, 3, 2, 3, -6, -1, -10, 2, 8, 11, -7, 14, 11, -10, -10, 8, -6, 15, 11, -22, -6, 9, 8]);
ECSearch("14.1-c",(-w + 9)*OK,[2, -1, -5, 0, 3, 6, 3, 2, 3, -6, 1, 10, 2, 8, -11, 7, -14, 11, -10, 10, -8, -6, 15, -11, 22, -6, 9, 8]);
ECSearch("14.1-d",(-w + 9)*OK,[0, -1, -3, 4, -1, 2, 1, -8, 9, 2, -7, 2, 0, -4, -1, 9, -8, 1, -4, 12, 4, 14, -15, -5, 16, 6, 5, 4]);
ECSearch("14.2-a",(-w - 9)*OK,[1, 0, 3, 1, -4, 1, 2, -8, 2, 9, -2, 7, -4, 0, -9, 1, 8, -4, 1, -4, -12, -15, 14, -16, 5, 5, 6, 11]);
ECSearch("14.2-b",(-w - 9)*OK,[1, -2, 5, -3, 0, 3, 6, 2, -6, 3, -10, -1, 8, 2, -7, 11, 14, -10, 11, 8, -10, 15, -6, -22, 11, 9, -6, -1]);
ECSearch("14.2-c",(-w - 9)*OK,[-1, 2, -5, 3, 0, 3, 6, 2, -6, 3, 10, 1, 8, 2, 7, -11, -14, -10, 11, -8, 10, 15, -6, 22, -11, 9, -6, -1]);
ECSearch("14.2-d",(-w - 9)*OK,[-1, 0, -3, -1, 4, 1, 2, -8, 2, 9, 2, -7, -4, 0, 9, -1, -8, -4, 1, 4, 12, -15, 14, 16, -5, 5, 6, 11]);
ECSearch("16.1-a",(4)*OK,[3, 0, 3, 0, 3, 3, 2, 2, -8, 1, 10, 6, 3, 3, -6, -6, 12, -9, 0, 0, -3, 0, -14, 4, 18, -12, -19, -10, -14]);
ECSearch("16.1-b",(4)*OK,[0, 3, 0, 3, 3, 3, 2, 2, -8, 10, 1, 3, 6, -6, 3, 12, -6, -9, 0, 0, 0, -3, 4, -14, -12, 18, -10, -19, -14]);
ECSearch("16.1-c",(4)*OK,[0, 0, 0, 0, 0, 0, -1, -1, 10, 7, 7, 0, 0, -9, -9, 0, 0, 0, 15, 15, 0, 0, -17, -17, 0, 0, 23, 23, -5]);
ECSearch("16.1-d",(4)*OK,[0, -3, 0, -3, -3, -3, 2, 2, -8, 10, 1, -3, -6, -6, 3, -12, 6, 9, 0, 0, 0, 3, 4, -14, 12, -18, -10, -19, -14]);
ECSearch("16.1-e",(4)*OK,[-3, 0, -3, 0, -3, -3, 2, 2, -8, 1, 10, -6, -3, 3, -6, 6, -12, 9, 0, 0, 3, 0, -14, 4, -18, 12, -19, -10, -14]);
ECSearch("18.1-a",(-81*w + 663)*OK,[3, -4, 2, -5, 7, 0, -3, 0, 0, 5, -2, 6, -8, -4, -4, -11, 2, 2, 0, 0, 14, -14, -9, -16, 1, -6, -20]);
ECSearch("18.1-b",(-81*w + 663)*OK,[4, -3, 5, -2, 0, 7, -3, 0, 0, 2, -5, -8, 6, 4, 4, 11, 2, 2, 0, 0, -14, 14, 16, 9, -6, 1, -13]);
ECSearch("18.1-c",(-81*w + 663)*OK,[0, -4, -4, 4, -2, 6, -6, 6, -6, -4, -8, 6, -2, 8, 8, 4, 2, 2, 0, -12, 14, -2, 0, 8, -2, 18, -2]);
ECSearch("18.1-d",(-81*w + 663)*OK,[-1, -3, -2, 2, -4, 4, 7, 2, -6, 1, 3, -1, 11, -9, -7, -8, 5, 13, -16, 8, -10, 6, 9, 15, 14, -18, -3]);
ECSearch("18.1-e",(-81*w + 663)*OK,[4, 0, -4, 4, 6, -2, -6, -6, 6, 8, 4, -2, 6, -8, -8, -4, 2, 2, 12, 0, -2, 14, -8, 0, 18, -2, 14]);
ECSearch("18.1-f",(-81*w + 663)*OK,[3, 1, -2, 2, 4, -4, 7, -6, 2, -3, -1, 11, -1, 7, 9, 8, 13, 5, -8, 16, 6, -10, -15, -9, -18, 14, -7]);
ECSearch("18.1-g",(-81*w + 663)*OK,[-3, -1, 2, -2, 4, -4, 7, -6, 2, 3, 1, 11, -1, -7, -9, -8, 13, 5, 8, -16, 6, -10, 15, 9, -18, 14, -7]);
ECSearch("18.1-h",(-81*w + 663)*OK,[-4, 0, 4, -4, 6, -2, -6, -6, 6, -8, -4, -2, 6, 8, 8, 4, 2, 2, -12, 0, -2, 14, 8, 0, 18, -2, 14]);
ECSearch("18.1-i",(-81*w + 663)*OK,[1, 3, 2, -2, -4, 4, 7, 2, -6, -1, -3, -1, 11, 9, 7, 8, 5, 13, 16, -8, -10, 6, -9, -15, 14, -18, -3]);
ECSearch("18.1-j",(-81*w + 663)*OK,[0, 4, 4, -4, -2, 6, -6, 6, -6, 4, 8, 6, -2, -8, -8, -4, 2, 2, 0, 12, 14, -2, 0, -8, -2, 18, -2]);
ECSearch("18.1-k",(-81*w + 663)*OK,[-4, 3, -5, 2, 0, 7, -3, 0, 0, -2, 5, -8, 6, -4, -4, -11, 2, 2, 0, 0, -14, 14, -16, -9, -6, 1, -13]);
ECSearch("18.1-l",(-81*w + 663)*OK,[-3, 4, -2, 5, 7, 0, -3, 0, 0, -5, 2, 6, -8, 4, 4, 11, 2, 2, 0, 0, 14, -14, 9, 16, 1, -6, -20]);
ECSearch("18.2-a",(w + 7)*OK,[-3, 0, -3, -3, 3, -2, 2, 8, 10, -1, 3, 6, 6, -3, 12, -6, -9, 0, 0, 0, -3, -4, -14, 12, -18, 10, -19, -14]);
ECSearch("18.2-b",(w + 7)*OK,[-1, -2, -5, 3, 3, 0, 0, 2, -6, 9, -5, -2, -4, 11, 4, -8, -5, 2, -16, -8, 1, 0, 6, -8, -2, 18, 21, -10]);
ECSearch("18.2-c",(w + 7)*OK,[1, 4, -1, -3, 5, -8, 0, 4, 10, -1, 7, -4, 6, -3, 0, 2, 13, -10, 6, 16, -7, 6, 12, -14, -14, -18, 19, -4]);
ECSearch("18.2-d",(w + 7)*OK,[-2, -1, -4, 0, -3, 3, 6, -1, -6, -6, -1, 2, 2, -4, -4, 2, 5, -4, 14, -10, 8, 6, 6, 5, -16, 3, -6, -4]);
ECSearch("18.2-e",(w + 7)*OK,[0, -3, 0, -3, 3, -2, 2, 8, 1, -10, 6, 3, -3, 6, -6, 12, -9, 0, 0, -3, 0, 14, 4, -18, 12, 19, -10, -14]);
ECSearch("18.2-f",(w + 7)*OK,[0, 3, 0, -6, -3, 7, -4, -1, 4, 2, 3, 6, -6, 0, 6, 6, 9, 0, -12, 12, 0, -10, -14, 9, -12, -5, -10, -14]);
ECSearch("18.2-g",(w + 7)*OK,[1, -4, -1, -3, -3, 0, 0, -4, -6, -9, -1, -4, -10, 5, 8, 2, 5, 14, 14, 8, 17, -18, -12, 2, -22, -18, 3, 20]);
ECSearch("18.2-h",(w + 7)*OK,[-1, 4, 1, 3, 3, 0, 0, -4, -6, -9, 1, 4, -10, 5, -8, -2, -5, 14, 14, -8, -17, -18, -12, -2, 22, -18, 3, 20]);
ECSearch("18.2-i",(w + 7)*OK,[0, -3, 0, 6, 3, 7, -4, -1, 4, 2, -3, -6, -6, 0, -6, -6, -9, 0, -12, -12, 0, -10, -14, -9, 12, -5, -10, -14]);
ECSearch("18.2-j",(w + 7)*OK,[0, 3, 0, 3, -3, -2, 2, 8, 1, -10, -6, -3, -3, 6, 6, -12, 9, 0, 0, 3, 0, 14, 4, 18, -12, 19, -10, -14]);
ECSearch("18.2-k",(w + 7)*OK,[2, 1, 4, 0, 3, 3, 6, -1, -6, -6, 1, -2, 2, -4, 4, -2, -5, -4, 14, 10, -8, 6, 6, -5, 16, 3, -6, -4]);
ECSearch("18.2-l",(w + 7)*OK,[-1, -4, 1, 3, -5, -8, 0, 4, 10, -1, -7, 4, 6, -3, 0, -2, -13, -10, 6, -16, 7, 6, 12, 14, 14, -18, 19, -4]);
ECSearch("18.2-m",(w + 7)*OK,[1, 2, 5, -3, -3, 0, 0, 2, -6, 9, 5, 2, -4, 11, -4, 8, 5, 2, -16, 8, -1, 0, 6, 8, 2, 18, 21, -10]);
ECSearch("18.2-n",(w + 7)*OK,[3, 0, 3, 3, -3, -2, 2, 8, 10, -1, -3, -6, 6, -3, -12, 6, 9, 0, 0, 0, 3, -4, -14, -12, 18, 10, -19, -14]);
ECSearch("18.3-a",(-w + 7)*OK,[-3, -3, 0, 3, -3, 2, -2, 8, -1, 10, 6, 3, -3, 6, -6, 12, -9, 0, 0, -3, 0, -14, -4, -18, 12, -19, 10, -14]);
ECSearch("18.3-b",(-w + 7)*OK,[-1, -5, -2, 3, 3, 0, 0, 2, 9, -6, -2, -5, 11, -4, -8, 4, -5, -16, 2, 1, -8, 6, 0, -2, -8, 21, 18, -22]);
ECSearch("18.3-c",(-w + 7)*OK,[1, -1, 4, 5, -3, 0, -8, 4, -1, 10, -4, 7, -3, 6, 2, 0, 13, 6, -10, -7, 16, 12, 6, -14, -14, 19, -18, 22]);
ECSearch("18.3-d",(-w + 7)*OK,[-2, -4, -1, -3, 0, 6, 3, -1, -6, -6, 2, -1, -4, 2, 2, -4, 5, 14, -4, 8, -10, 6, 6, -16, 5, -6, 3, 17]);
ECSearch("18.3-e",(-w + 7)*OK,[0, 0, -3, 3, -3, 2, -2, 8, -10, 1, 3, 6, 6, -3, 12, -6, -9, 0, 0, 0, -3, 4, 14, 12, -18, -10, 19, -14]);
ECSearch("18.3-f",(-w + 7)*OK,[0, 0, 3, -3, -6, -4, 7, -1, 2, 4, 6, 3, 0, -6, 6, 6, 9, -12, 0, 0, 12, -14, -10, -12, 9, -10, -5, -23]);
ECSearch("18.3-g",(-w + 7)*OK,[1, -1, -4, -3, -3, 0, 0, -4, -9, -6, -4, -1, 5, -10, 2, 8, 5, 14, 14, 17, 8, -12, -18, -22, 2, 3, -18, -10]);
ECSearch("18.3-h",(-w + 7)*OK,[-1, 1, 4, 3, 3, 0, 0, -4, -9, -6, 4, 1, 5, -10, -2, -8, -5, 14, 14, -17, -8, -12, -18, 22, -2, 3, -18, -10]);
ECSearch("18.3-i",(-w + 7)*OK,[0, 0, -3, 3, 6, -4, 7, -1, 2, 4, -6, -3, 0, -6, -6, -6, -9, -12, 0, 0, -12, -14, -10, 12, -9, -10, -5, -23]);
ECSearch("18.3-j",(-w + 7)*OK,[0, 0, 3, -3, 3, 2, -2, 8, -10, 1, -3, -6, 6, -3, -12, 6, 9, 0, 0, 0, 3, 4, 14, -12, 18, -10, 19, -14]);
ECSearch("18.3-k",(-w + 7)*OK,[2, 4, 1, 3, 0, 6, 3, -1, -6, -6, -2, 1, -4, 2, -2, 4, -5, 14, -4, -8, 10, 6, 6, 16, -5, -6, 3, 17]);
ECSearch("18.3-l",(-w + 7)*OK,[-1, 1, -4, -5, 3, 0, -8, 4, -1, 10, 4, -7, -3, 6, -2, 0, -13, 6, -10, 7, -16, 12, 6, 14, 14, 19, -18, 22]);
ECSearch("18.3-m",(-w + 7)*OK,[1, 5, 2, -3, -3, 0, 0, 2, 9, -6, 2, 5, 11, -4, 8, -4, 5, -16, 2, -1, 8, 6, 0, 2, 8, 21, 18, -22]);
ECSearch("18.3-n",(-w + 7)*OK,[3, 3, 0, -3, 3, 2, -2, 8, -1, 10, -6, -3, -3, 6, 6, -12, 9, 0, 0, 3, 0, -14, -4, 18, -12, -19, 10, -14]);
