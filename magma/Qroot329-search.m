print "Field 2.2.329.1";
Qx<x> := PolynomialRing(RationalField());
K<w> := NumberField(x^2 - x - 82);
OK := Integers(K);
Plist := [];
Append(~Plist,(7*w + 60)*OK);
Append(~Plist,(-7*w + 67)*OK);
Append(~Plist,(-2*w - 17)*OK);
Append(~Plist,(2*w - 19)*OK);
Append(~Plist,(318*w + 2725)*OK);
Append(~Plist,(3)*OK);
Append(~Plist,(58*w - 555)*OK);
Append(~Plist,(58*w + 497)*OK);
Append(~Plist,(188*w + 1611)*OK);
Append(~Plist,(188*w - 1799)*OK);
Append(~Plist,(16*w - 153)*OK);
Append(~Plist,(16*w + 137)*OK);
Append(~Plist,(-12*w + 115)*OK);
Append(~Plist,(-12*w - 103)*OK);
Append(~Plist,(30*w - 287)*OK);
Append(~Plist,(30*w + 257)*OK);
Append(~Plist,(-824*w + 7885)*OK);
Append(~Plist,(-4*w - 35)*OK);
Append(~Plist,(4*w - 39)*OK);
Append(~Plist,(-2*w + 21)*OK);
Append(~Plist,(-2*w - 19)*OK);
Append(~Plist,(-2*w + 17)*OK);
Append(~Plist,(2*w + 15)*OK);
Append(~Plist,(86*w + 737)*OK);
Append(~Plist,(86*w - 823)*OK);
Append(~Plist,(11)*OK);
Append(~Plist,(-20*w + 191)*OK);
Append(~Plist,(20*w + 171)*OK);
Append(~Plist,(100*w + 857)*OK);
Append(~Plist,(100*w - 957)*OK);
Append(~Plist,(-304*w + 2909)*OK);
Append(~Plist,(304*w + 2605)*OK);
Append(~Plist,(-1330*w - 11397)*OK);
Append(~Plist,(1330*w - 12727)*OK);
Append(~Plist,(-22*w - 189)*OK);
Append(~Plist,(22*w - 211)*OK);
Append(~Plist,(-332*w + 3177)*OK);
Append(~Plist,(-332*w - 2845)*OK);
Append(~Plist,(-160*w - 1371)*OK);
Append(~Plist,(160*w - 1531)*OK);
Append(~Plist,(8*w + 67)*OK);
Append(~Plist,(-8*w + 75)*OK);
Append(~Plist,(4*w - 35)*OK);
Append(~Plist,(4*w + 31)*OK);
Append(~Plist,(-2*w + 11)*OK);
Append(~Plist,(2*w + 9)*OK);
Append(~Plist,(-10*w + 97)*OK);
Append(~Plist,(10*w + 87)*OK);
Append(~Plist,(-6*w - 49)*OK);
Append(~Plist,(6*w - 55)*OK);
Append(~Plist,(-14*w - 121)*OK);
Append(~Plist,(14*w - 135)*OK);
Append(~Plist,(708*w + 6067)*OK);
Append(~Plist,(708*w - 6775)*OK);
Append(~Plist,(17)*OK);
Append(~Plist,(-2*w + 7)*OK);
Append(~Plist,(2*w + 5)*OK);
Append(~Plist,(-1200*w + 11483)*OK);
Append(~Plist,(1200*w + 10283)*OK);
Append(~Plist,(-2*w + 5)*OK);
Append(~Plist,(-2*w - 3)*OK);
Append(~Plist,(-462*w + 4421)*OK);
Append(~Plist,(-462*w - 3959)*OK);
Append(~Plist,(128*w + 1097)*OK);
Append(~Plist,(128*w - 1225)*OK);
Append(~Plist,(-2*w + 27)*OK);
Append(~Plist,(2*w + 25)*OK);
Append(~Plist,(-118*w - 1011)*OK);
Append(~Plist,(118*w - 1129)*OK);
Append(~Plist,(-104*w + 995)*OK);
Append(~Plist,(104*w + 891)*OK);
Append(~Plist,(-1214*w + 11617)*OK);
Append(~Plist,(1214*w + 10403)*OK);
Append(~Plist,(1720*w + 14739)*OK);
Append(~Plist,(-1720*w + 16459)*OK);
Append(~Plist,(-1070*w + 10239)*OK);
Append(~Plist,(-1070*w - 9169)*OK);
Append(~Plist,(420*w - 4019)*OK);
Append(~Plist,(420*w + 3599)*OK);
Append(~Plist,(838*w + 7181)*OK);
Append(~Plist,(838*w - 8019)*OK);
Append(~Plist,(-38*w + 363)*OK);
Append(~Plist,(38*w + 325)*OK);
Append(~Plist,(-32*w - 275)*OK);
Append(~Plist,(32*w - 307)*OK);
Append(~Plist,(6*w - 53)*OK);
Append(~Plist,(6*w + 47)*OK);
Append(~Plist,(276*w + 2365)*OK);
Append(~Plist,(276*w - 2641)*OK);
Append(~Plist,(-82*w + 785)*OK);
Append(~Plist,(-82*w - 703)*OK);
Append(~Plist,(50*w - 479)*OK);
Append(~Plist,(-50*w - 429)*OK);
Append(~Plist,(-8*w - 65)*OK);
Append(~Plist,(8*w - 73)*OK);
Append(~Plist,(810*w + 6941)*OK);
Append(~Plist,(810*w - 7751)*OK);
Append(~Plist,(23)*OK);
Append(~Plist,(-28*w + 269)*OK);
Append(~Plist,(28*w + 241)*OK);
effort := 400;
ECSearch := procedure(class_label, N, aplist);
print "Isogeny class ", class_label;
goodP := [P: P in Plist | Valuation(N,P) eq 0];
goodP := [goodP[i]: i in [1..#(aplist)]];
curves := EllipticCurveSearch(N,effort : Primes:=goodP, Traces:=aplist);
curves := [E: E in curves | &and[TraceOfFrobenius(E,goodP[i]) eq aplist[i] : i in [1..#(aplist)]]];
if #curves eq 0 then print "No curve found"; end if;
for E in curves do;
 a1,a2,a3,a4,a6:=Explode(aInvariants(E));
 printf "Curve [%o,%o,%o,%o,%o]\n",a1,a2,a3,a4,a6;
 end for;
end procedure;
SetColumns(0);

ECSearch("7.1-a",(318*w + 2725)*OK,[1, -1, -2, 0, -2, 4, 2, -2, 6, -10, -6, 6, -2, -2, 12, 0, 10, -6, 4, -8, 14, 4, 12, -16, -10, -8, 4, -14, -6]);
ECSearch("7.1-b",(318*w + 2725)*OK,[-1, 1, 0, 2, -2, -2, -4, -6, 2, 6, 10, -2, 6, -12, 2, 0, -6, 10, -8, 4, -4, -14, -16, 12, -10, -4, 8, -6, -14]);
ECSearch("7.1-c",(318*w + 2725)*OK,[1, -1, 2, 0, -2, -4, -2, 2, -6, 10, 6, 6, -2, 2, -12, 0, 10, -6, 4, -8, -14, -4, 12, -16, -10, 8, -4, -14, -6]);
ECSearch("7.1-d",(318*w + 2725)*OK,[-1, 1, 0, -2, -2, 2, 4, 6, -2, -6, -10, -2, 6, 12, -2, 0, -6, 10, -8, 4, 4, 14, -16, 12, -10, 4, -8, -6, -14]);
ECSearch("9.1-a",(3)*OK,[0, 0, 3, -3, 1, -6, 6, 6, -6, 6, -6, 7, 7, 6, -6, 0, -6, -6, -12, -12, 0, 0, 1, 1, 13, -12, 12, -18, -18]);
ECSearch("9.1-b",(3)*OK,[0, 0, -3, 3, 1, 6, -6, -6, 6, -6, 6, 7, 7, -6, 6, 0, -6, -6, -12, -12, 0, 0, 1, 1, 13, 12, -12, -18, -18]);
ECSearch("10.2-a",(253*w - 2421)*OK,[0, 0, 1, 4, 3, 6, 0, 3, 0, -6, 7, -2, 3, -6, 3, 3, -6, 0, -3, -6, 3, 10, 10, 4, 15, -12, 18, -21]);
ECSearch("10.2-b",(253*w - 2421)*OK,[0, 0, -1, -2, 5, 2, 2, -7, -10, 2, -7, 2, 3, 6, -9, -9, 12, 12, 15, -10, -1, -4, -4, -10, -13, 14, -18, -3]);
ECSearch("10.2-c",(253*w - 2421)*OK,[0, 0, 1, 4, -3, -6, 0, -3, 0, 6, 7, -2, -3, 6, -3, 3, -6, 0, -3, 6, -3, 10, 10, 4, -15, 12, 18, -21]);
ECSearch("10.2-d",(253*w - 2421)*OK,[0, 0, -1, -2, -5, -2, -2, 7, 10, -2, -7, 2, -3, -6, 9, -9, 12, 12, 15, 10, 1, -4, -4, -10, 13, -14, -18, -3]);
ECSearch("10.3-a",(-253*w - 2168)*OK,[0, 0, 1, 4, 6, 3, 3, 0, -6, 0, -2, 7, -6, 3, 3, -6, 3, -3, 0, 3, -6, 10, 10, 4, -12, 15, -21, 18]);
ECSearch("10.3-b",(-253*w - 2168)*OK,[0, 0, -1, -2, 2, 5, -7, 2, 2, -10, 2, -7, 6, 3, -9, 12, -9, 15, 12, -1, -10, -4, -4, -10, 14, -13, -3, -18]);
ECSearch("10.3-c",(-253*w - 2168)*OK,[0, 0, 1, 4, -6, -3, -3, 0, 6, 0, -2, 7, 6, -3, -3, -6, 3, -3, 0, -3, 6, 10, 10, 4, 12, -15, -21, 18]);
ECSearch("10.3-d",(-253*w - 2168)*OK,[0, 0, -1, -2, -2, -5, 7, -2, -2, 10, 2, -7, -6, -3, 9, 12, -9, 15, 12, 1, 10, -4, -4, -10, -14, 13, -3, -18]);
ECSearch("14.1-a",(5*w + 43)*OK,[0, 3, -3, 4, -2, 1, 7, -2, -8, -5, -4, 2, 0, 9, -12, -6, -9, -9, 6, 16, 10, -10, 5, -1, -5, -14, -18, 21]);
ECSearch("14.1-b",(5*w + 43)*OK,[0, -3, 3, 4, 2, -1, -7, 2, 8, 5, -4, 2, 0, -9, 12, -6, -9, -9, 6, -16, -10, -10, 5, -1, 5, 14, -18, 21]);
ECSearch("14.2-a",(-5*w + 48)*OK,[0, -3, 3, 4, 1, -2, -2, 7, -5, -8, 2, -4, 9, 0, -12, -9, -6, 6, -9, 10, 16, 5, -10, -1, -14, -5, 21, -18]);
ECSearch("14.2-b",(-5*w + 48)*OK,[0, 3, -3, 4, -1, 2, 2, -7, 5, 8, 2, -4, -9, 0, 12, -9, -6, 6, -9, -10, -16, 5, -10, -1, 14, 5, 21, -18]);
ECSearch("16.4-a",(-3*w + 29)*OK,[1, -3, -3, 0, 3, 6, 6, -6, 6, 6, -6, -3, -3, 3, 3, 0, 1, 1, -2, 2, -9, -9, -10, 10, -21, -12, 12, -23, -23]);
ECSearch("16.4-b",(-3*w + 29)*OK,[1, -3, 3, -2, 1, 2, -2, -4, -6, 4, 2, 9, 11, -3, -11, -2, 5, -9, 12, 14, -3, -11, -10, 0, -19, 20, 0, 3, -19]);
ECSearch("16.4-c",(-3*w + 29)*OK,[1, -1, 3, 4, -1, 2, 2, 2, -6, -2, -2, -3, -7, -3, 5, -12, 1, -3, 2, -6, -7, -7, -10, 6, 7, -4, 12, 21, -7]);
ECSearch("16.4-d",(-3*w + 29)*OK,[1, 0, 0, 0, -6, 0, 0, 0, 0, 0, 0, 6, 6, 0, 0, 0, 10, 10, 16, -16, 0, 0, 8, -8, 6, 0, 0, 22, 22]);
ECSearch("16.4-e",(-3*w + 29)*OK,[1, 1, -3, 4, -1, -2, -2, -2, 6, 2, 2, -3, -7, 3, -5, 12, 1, -3, 2, -6, 7, 7, -10, 6, 7, 4, -12, 21, -7]);
ECSearch("16.4-f",(-3*w + 29)*OK,[1, 3, -3, -2, 1, -2, 2, 4, 6, -4, -2, 9, 11, 3, 11, 2, 5, -9, 12, 14, 3, 11, -10, 0, -19, -20, 0, 3, -19]);
ECSearch("16.4-g",(-3*w + 29)*OK,[1, 3, 3, 0, 3, -6, -6, 6, -6, -6, 6, -3, -3, -3, -3, 0, 1, 1, -2, 2, 9, 9, -10, 10, -21, 12, -12, -23, -23]);
ECSearch("16.5-a",(3*w + 26)*OK,[1, -3, -3, 0, 3, 6, 6, 6, -6, -6, 6, -3, -3, 3, 3, 0, 1, 1, 2, -2, -9, -9, 10, -10, -21, 12, -12, -23, -23]);
ECSearch("16.5-b",(3*w + 26)*OK,[1, 3, -3, -2, 1, -2, 2, -6, -4, 2, 4, 11, 9, -11, -3, -2, -9, 5, 14, 12, -11, -3, 0, -10, -19, 0, 20, -19, 3]);
ECSearch("16.5-c",(3*w + 26)*OK,[1, 3, -1, 4, -1, 2, 2, -6, 2, -2, -2, -7, -3, 5, -3, -12, -3, 1, -6, 2, -7, -7, 6, -10, 7, 12, -4, -7, 21]);
ECSearch("16.5-d",(3*w + 26)*OK,[1, 0, 0, 0, -6, 0, 0, 0, 0, 0, 0, 6, 6, 0, 0, 0, 10, 10, -16, 16, 0, 0, -8, 8, 6, 0, 0, 22, 22]);
ECSearch("16.5-e",(3*w + 26)*OK,[1, -3, 1, 4, -1, -2, -2, 6, -2, 2, 2, -7, -3, -5, 3, 12, -3, 1, -6, 2, 7, 7, 6, -10, 7, -12, 4, -7, 21]);
ECSearch("16.5-f",(3*w + 26)*OK,[1, -3, 3, -2, 1, 2, -2, 6, 4, -2, -4, 11, 9, 11, 3, 2, -9, 5, 14, 12, 11, 3, 0, -10, -19, 0, -20, -19, 3]);
ECSearch("16.5-g",(3*w + 26)*OK,[1, 3, 3, 0, 3, -6, -6, -6, 6, 6, -6, -3, -3, -3, -3, 0, 1, 1, 2, -2, 9, 9, 10, -10, -21, -12, 12, -23, -23]);
ECSearch("18.1-a",(21*w + 180)*OK,[1, 4, 2, 0, 4, -2, -4, -2, -6, 2, -10, -10, -8, 8, -6, 6, -6, -4, 4, -2, -2, -16, 4, 6, 22, 4, 6, 2]);
ECSearch("18.1-b",(21*w + 180)*OK,[1, 2, -2, 0, -4, -4, -2, 2, 6, 10, 2, 2, 2, -2, 0, -6, -6, 8, 16, 8, -16, 8, -8, 6, 14, 2, 6, -10]);
ECSearch("18.1-c",(21*w + 180)*OK,[0, 2, 0, 3, -2, -3, 1, -6, 10, -2, -6, -3, 6, 3, -9, 4, 3, 15, -12, 3, 14, 12, -4, 2, -14, -17, -3, 10]);
ECSearch("18.1-d",(21*w + 180)*OK,[-2, 2, -2, 3, -4, -1, 7, 2, 0, -2, -10, 5, -10, 7, 3, 0, -3, 5, -8, 5, -10, -10, 4, 12, -10, 5, 15, -10]);
ECSearch("18.1-e",(21*w + 180)*OK,[1, -2, 2, 0, 4, 4, 2, -2, -6, -10, 2, 2, -2, 2, 0, -6, -6, 8, 16, -8, 16, 8, -8, 6, -14, -2, 6, -10]);
ECSearch("18.1-f",(21*w + 180)*OK,[0, -2, 0, 3, 2, 3, -1, 6, -10, 2, -6, -3, -6, -3, 9, 4, 3, 15, -12, -3, -14, 12, -4, 2, 14, 17, -3, 10]);
ECSearch("18.1-g",(21*w + 180)*OK,[1, -4, -2, 0, -4, 2, 4, 2, 6, -2, -10, -10, 8, -8, 6, 6, -6, -4, 4, 2, 2, -16, 4, 6, -22, -4, 6, 2]);
ECSearch("18.1-h",(21*w + 180)*OK,[-2, -2, 2, 3, 4, 1, -7, -2, 0, 2, -10, 5, 10, -7, -3, 0, -3, 5, -8, -5, 10, -10, 4, 12, 10, -5, 15, -10]);
ECSearch("18.2-a",(-21*w + 201)*OK,[1, 2, 4, 0, -2, 4, -2, -4, 2, -6, -10, -10, 8, -8, -6, -6, 6, 4, -4, -2, -2, 4, -16, 6, 4, 22, 2, 6]);
ECSearch("18.2-b",(-21*w + 201)*OK,[1, -2, 2, 0, -4, -4, 2, -2, 10, 6, 2, 2, -2, 2, 0, -6, -6, 16, 8, -16, 8, -8, 8, 6, 2, 14, -10, 6]);
ECSearch("18.2-c",(-21*w + 201)*OK,[0, 0, 2, 3, -3, -2, -6, 1, -2, 10, -3, -6, 3, 6, -9, 3, 4, -12, 15, 14, 3, -4, 12, 2, -17, -14, 10, -3]);
ECSearch("18.2-d",(-21*w + 201)*OK,[-2, -2, 2, 3, -1, -4, 2, 7, -2, 0, 5, -10, 7, -10, 3, -3, 0, -8, 5, -10, 5, 4, -10, 12, 5, -10, -10, 15]);
ECSearch("18.2-e",(-21*w + 201)*OK,[1, 2, -2, 0, 4, 4, -2, 2, -10, -6, 2, 2, 2, -2, 0, -6, -6, 16, 8, 16, -8, -8, 8, 6, -2, -14, -10, 6]);
ECSearch("18.2-f",(-21*w + 201)*OK,[0, 0, -2, 3, 3, 2, 6, -1, 2, -10, -3, -6, -3, -6, 9, 3, 4, -12, 15, -14, -3, -4, 12, 2, 17, 14, 10, -3]);
ECSearch("18.2-g",(-21*w + 201)*OK,[1, -2, -4, 0, 2, -4, 2, 4, -2, 6, -10, -10, -8, 8, 6, -6, 6, 4, -4, 2, 2, 4, -16, 6, -4, -22, 2, 6]);
ECSearch("18.2-h",(-21*w + 201)*OK,[-2, 2, -2, 3, 1, 4, -2, -7, 2, 0, 5, -10, -7, 10, -3, -3, 0, -8, 5, 10, -5, 4, -10, 12, -5, 10, -10, 15]);
