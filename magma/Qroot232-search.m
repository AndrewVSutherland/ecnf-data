print "Field 2.2.232.1";
Qx<x> := PolynomialRing(RationalField());
K<w> := NumberField(x^2 - 58);
OK := Integers(K);
Plist := [];
Append(~Plist,(2)*OK+(w)*OK);
Append(~Plist,(3)*OK+(w + 1)*OK);
Append(~Plist,(3)*OK+(w + 2)*OK);
Append(~Plist,(2*w - 15)*OK);
Append(~Plist,(-2*w - 15)*OK);
Append(~Plist,(11)*OK+(w + 5)*OK);
Append(~Plist,(11)*OK+(w + 6)*OK);
Append(~Plist,(19)*OK+(w + 1)*OK);
Append(~Plist,(19)*OK+(w + 18)*OK);
Append(~Plist,(w + 9)*OK);
Append(~Plist,(w - 9)*OK);
Append(~Plist,(5)*OK);
Append(~Plist,(29)*OK+(w)*OK);
Append(~Plist,(37)*OK+(w + 13)*OK);
Append(~Plist,(37)*OK+(w + 24)*OK);
Append(~Plist,(43)*OK+(w + 12)*OK);
Append(~Plist,(43)*OK+(w + 31)*OK);
Append(~Plist,(61)*OK+(w + 27)*OK);
Append(~Plist,(61)*OK+(w + 34)*OK);
Append(~Plist,(-5*w - 39)*OK);
Append(~Plist,(-5*w + 39)*OK);
Append(~Plist,(101)*OK+(w + 19)*OK);
Append(~Plist,(101)*OK+(w + 82)*OK);
Append(~Plist,(3*w - 25)*OK);
Append(~Plist,(3*w + 25)*OK);
Append(~Plist,(131)*OK+(w + 53)*OK);
Append(~Plist,(131)*OK+(w + 78)*OK);
Append(~Plist,(-2*w + 9)*OK);
Append(~Plist,(2*w + 9)*OK);
Append(~Plist,(157)*OK+(w + 23)*OK);
Append(~Plist,(157)*OK+(w + 134)*OK);
Append(~Plist,(163)*OK+(w + 59)*OK);
Append(~Plist,(163)*OK+(w + 104)*OK);
Append(~Plist,(w + 15)*OK);
Append(~Plist,(w - 15)*OK);
Append(~Plist,(13)*OK);
Append(~Plist,(-4*w + 27)*OK);
Append(~Plist,(4*w + 27)*OK);
Append(~Plist,(211)*OK+(w + 67)*OK);
Append(~Plist,(211)*OK+(w + 144)*OK);
Append(~Plist,(-2*w + 3)*OK);
Append(~Plist,(-2*w - 3)*OK);
Append(~Plist,(229)*OK+(w + 79)*OK);
Append(~Plist,(229)*OK+(w + 150)*OK);
Append(~Plist,(-3*w + 17)*OK);
Append(~Plist,(3*w + 17)*OK);
Append(~Plist,(6*w + 43)*OK);
Append(~Plist,(-6*w + 43)*OK);
Append(~Plist,(-7*w + 51)*OK);
Append(~Plist,(-7*w - 51)*OK);
Append(~Plist,(251)*OK+(w + 73)*OK);
Append(~Plist,(251)*OK+(w + 178)*OK);
Append(~Plist,(-8*w - 63)*OK);
Append(~Plist,(-8*w + 63)*OK);
Append(~Plist,(269)*OK+(w + 70)*OK);
Append(~Plist,(269)*OK+(w + 199)*OK);
Append(~Plist,(15*w + 113)*OK);
Append(~Plist,(15*w - 113)*OK);
Append(~Plist,(17)*OK);
Append(~Plist,(293)*OK+(w + 75)*OK);
Append(~Plist,(293)*OK+(w + 218)*OK);
Append(~Plist,(307)*OK+(w + 66)*OK);
Append(~Plist,(307)*OK+(w + 241)*OK);
Append(~Plist,(6*w - 49)*OK);
Append(~Plist,(6*w + 49)*OK);
Append(~Plist,(317)*OK+(w + 117)*OK);
Append(~Plist,(317)*OK+(w + 200)*OK);
Append(~Plist,(331)*OK+(w + 148)*OK);
Append(~Plist,(331)*OK+(w + 183)*OK);
Append(~Plist,(-3*w - 13)*OK);
Append(~Plist,(3*w - 13)*OK);
Append(~Plist,(379)*OK+(w + 171)*OK);
Append(~Plist,(379)*OK+(w + 208)*OK);
Append(~Plist,(w + 21)*OK);
Append(~Plist,(w - 21)*OK);
Append(~Plist,(389)*OK+(w + 35)*OK);
Append(~Plist,(389)*OK+(w + 354)*OK);
Append(~Plist,(-3*w + 11)*OK);
Append(~Plist,(3*w + 11)*OK);
Append(~Plist,(421)*OK+(w + 30)*OK);
Append(~Plist,(421)*OK+(w + 391)*OK);
Append(~Plist,(-12*w - 89)*OK);
Append(~Plist,(-12*w + 89)*OK);
Append(~Plist,(-3*w + 31)*OK);
Append(~Plist,(3*w + 31)*OK);
Append(~Plist,(443)*OK+(w + 175)*OK);
Append(~Plist,(443)*OK+(w + 268)*OK);
Append(~Plist,(-11*w - 81)*OK);
Append(~Plist,(-11*w + 81)*OK);
Append(~Plist,(461)*OK+(w + 141)*OK);
Append(~Plist,(461)*OK+(w + 320)*OK);
Append(~Plist,(8*w + 57)*OK);
Append(~Plist,(-8*w + 57)*OK);
Append(~Plist,(467)*OK+(w + 92)*OK);
Append(~Plist,(467)*OK+(w + 375)*OK);
Append(~Plist,(-4*w - 21)*OK);
Append(~Plist,(4*w - 21)*OK);
Append(~Plist,(491)*OK+(w + 135)*OK);
Append(~Plist,(491)*OK+(w + 356)*OK);
Append(~Plist,(-3*w - 1)*OK);
effort := 400;
ECSearch := procedure(class_label, N, aplist);
print "Isogeny class ", class_label;
goodP := [P: P in Plist | Valuation(N,P) eq 0];
goodP := [goodP[i]: i in [1..#(aplist)]];
curves := EllipticCurveSearch(N,effort : Primes:=goodP, Traces:=aplist);
curves := [E: E in curves | &and[TraceOfFrobenius(E,goodP[i]) eq aplist[i] : i in [1..#(aplist)]]];
if #curves eq 0 then print "No curve found"; end if;
for E in curves do;
 a1,a2,a3,a4,a6:=Explode(aInvariants(E));
 printf "Curve [%o,%o,%o,%o,%o]\n",a1,a2,a3,a4,a6;
 end for;
end procedure;
SetColumns(0);

ECSearch("6.1-a",(-w - 8)*OK,[-2, -1, -4, 0, -3, -4, 8, 0, -3, -1, 0, 8, 5, -4, -1, -1, 8, -6, 12, 0, 6, 5, -4, 15, 6, 2, -16, -4]);
ECSearch("6.1-b",(-w - 8)*OK,[2, -1, -4, 0, 3, 4, -8, 0, -3, -1, 0, -8, -5, 4, 1, 1, -8, -6, 12, 0, -6, 5, -4, -15, -6, 2, -16, 4]);
ECSearch("6.2-a",(w - 8)*OK,[-2, -4, -1, -3, 0, 8, -4, -3, 0, -1, 0, 5, 8, -1, -4, 8, -1, 12, -6, 6, 0, -4, 5, 6, 15, -16, 2, 17]);
ECSearch("6.2-b",(w - 8)*OK,[2, -4, -1, 3, 0, -8, 4, -3, 0, -1, 0, -5, -8, 1, 4, -8, 1, 12, -6, -6, 0, -4, 5, -6, -15, -16, 2, -17]);
ECSearch("9.2-a",(-w + 7)*OK,[0, -1, 2, 2, 3, -3, 4, 4, 0, 0, -7, 0, 4, 4, -11, -11, -8, -8, -6, 6, -18, 18, -10, -10, 12, -12, -16, -16, 10]);
ECSearch("9.2-b",(-w + 7)*OK,[0, 1, 2, 2, -3, 3, -4, -4, 0, 0, -7, 0, -4, -4, 11, 11, 8, 8, -6, 6, 18, -18, -10, -10, -12, 12, -16, -16, -10]);
ECSearch("9.3-a",(-w - 7)*OK,[0, -1, 2, 2, -3, 3, 4, 4, 0, 0, -7, 0, 4, 4, -11, -11, -8, -8, 6, -6, 18, -18, -10, -10, -12, 12, -16, -16, 10]);
ECSearch("9.3-b",(-w - 7)*OK,[0, 1, 2, 2, 3, -3, -4, -4, 0, 0, -7, 0, -4, -4, 11, 11, 8, 8, 6, -6, -18, 18, -10, -10, 12, -12, -16, -16, -10]);
ECSearch("18.1-a",(6)*OK+(3*w)*OK,[-5, 0, -2, 3, 2, 2, 0, -5, -9, -4, -4, 11, 4, -11, -13, 2, -12, -12, 14, 14, -5, -10, -17, 18, 0, -20, -20]);
ECSearch("18.1-b",(6)*OK+(3*w)*OK,[-5, 0, 2, -3, -2, -2, 0, -5, -9, 4, 4, -11, -4, 11, 13, -2, -12, -12, -14, -14, -5, -10, 17, -18, 0, -20, 20]);
ECSearch("18.1-c",(6)*OK+(3*w)*OK,[0, -5, 3, -2, 2, 2, -5, 0, -9, -4, 11, -4, -11, 4, 2, -13, -12, -12, 14, 14, -10, -5, 18, -17, -20, 0, 5]);
ECSearch("18.1-d",(6)*OK+(3*w)*OK,[0, -5, -3, 2, -2, -2, -5, 0, -9, 4, -11, 4, 11, -4, -2, 13, -12, -12, -14, -14, -10, -5, -18, 17, -20, 0, -5]);
ECSearch("18.2-a",(18)*OK+(w + 2)*OK,[-2, 5, 2, -2, 1, -2, -4, 0, -9, 3, -2, -4, 1, 0, 9, -11, -4, -4, -2, 18, 6, 13, -20, -15, 0, 16, 16, 12]);
ECSearch("18.2-b",(18)*OK+(w + 2)*OK,[1, 2, 2, -5, -5, 4, -4, -6, 6, 9, 4, 8, -8, -9, 9, 10, -10, 8, -8, 0, 0, 4, 4, 0, 0, -2, -2, 18]);
ECSearch("18.2-c",(18)*OK+(w + 2)*OK,[-1, 2, 2, 0, 0, 1, 4, 9, 6, -1, 6, 7, -2, 4, 1, 10, 10, -12, -3, 15, -15, -1, -16, 15, -15, 8, -22, 22]);
ECSearch("18.2-d",(18)*OK+(w + 2)*OK,[-1, -4, -4, -4, 2, 5, -2, -3, -6, 3, 2, 7, 8, 0, 3, 14, -8, -10, -5, 3, 9, 7, -8, -3, 21, -20, -14, 12]);
ECSearch("18.2-e",(18)*OK+(w + 2)*OK,[1, 2, 2, 0, 0, -1, -4, 9, 6, -1, -6, -7, 2, -4, -1, -10, -10, -12, -3, -15, 15, -1, -16, -15, 15, 8, -22, -22]);
ECSearch("18.2-f",(18)*OK+(w + 2)*OK,[-1, 2, 2, 5, 5, -4, 4, -6, 6, 9, -4, -8, 8, 9, -9, -10, 10, 8, -8, 0, 0, 4, 4, 0, 0, -2, -2, -18]);
ECSearch("18.2-g",(18)*OK+(w + 2)*OK,[2, 5, 2, 2, -1, 2, 4, 0, -9, 3, 2, 4, -1, 0, -9, 11, 4, -4, -2, -18, -6, 13, -20, 15, 0, 16, 16, -12]);
ECSearch("18.2-h",(18)*OK+(w + 2)*OK,[1, -4, -4, 4, -2, -5, 2, -3, -6, 3, -2, -7, -8, 0, -3, -14, 8, -10, -5, -3, -9, 7, -8, 3, -21, -20, -14, -12]);
ECSearch("18.3-a",(18)*OK+(w + 16)*OK,[-2, 2, 5, 1, -2, -4, -2, -9, 0, 3, -2, 1, -4, 9, 0, -4, -11, -2, -4, 6, 18, -20, 13, 0, -15, 16, 16, 3]);
ECSearch("18.3-b",(18)*OK+(w + 16)*OK,[1, 2, 2, -5, -5, -4, 4, 6, -6, 9, 4, -8, 8, 9, -9, -10, 10, -8, 8, 0, 0, 4, 4, 0, 0, -2, -2, -18]);
ECSearch("18.3-c",(18)*OK+(w + 16)*OK,[-1, 2, 2, 0, 0, 4, 1, 6, 9, -1, 6, -2, 7, 1, 4, 10, 10, -3, -12, -15, 15, -16, -1, -15, 15, -22, 8, -17]);
ECSearch("18.3-d",(18)*OK+(w + 16)*OK,[-1, -4, -4, 2, -4, -2, 5, -6, -3, 3, 2, 8, 7, 3, 0, -8, 14, -5, -10, 9, 3, -8, 7, 21, -3, -14, -20, -3]);
ECSearch("18.3-e",(18)*OK+(w + 16)*OK,[1, 2, 2, 0, 0, -4, -1, 6, 9, -1, -6, 2, -7, -1, -4, -10, -10, -3, -12, 15, -15, -16, -1, 15, -15, -22, 8, 17]);
ECSearch("18.3-f",(18)*OK+(w + 16)*OK,[-1, 2, 2, 5, 5, 4, -4, 6, -6, 9, -4, 8, -8, -9, 9, 10, -10, -8, 8, 0, 0, 4, 4, 0, 0, -2, -2, 18]);
ECSearch("18.3-g",(18)*OK+(w + 16)*OK,[2, 2, 5, -1, 2, 4, 2, -9, 0, 3, 2, -1, 4, -9, 0, 4, 11, -2, -4, -6, -18, -20, 13, 0, 15, 16, 16, -3]);
ECSearch("18.3-h",(18)*OK+(w + 16)*OK,[1, -4, -4, -2, 4, 2, -5, -6, -3, 3, -2, -8, -7, -3, 0, 8, -14, -5, -10, -9, -3, -8, 7, -21, 3, -14, -20, 3]);
ECSearch("21.2-a",(21)*OK+(w + 10)*OK,[1, 0, 0, 0, 0, 8, -4, 0, 0, 2, -6, 6, -2, -4, 4, -6, -10, 8, 16, -6, 14, 0, -8, 16, -20, -24, 8, 10]);
ECSearch("21.2-b",(21)*OK+(w + 10)*OK,[-1, 0, 0, 0, 0, -8, 4, 0, 0, 2, 6, -6, 2, 4, -4, 6, 10, 8, 16, 6, -14, 0, -8, -16, 20, -24, 8, -10]);
ECSearch("21.3-a",(21)*OK+(w + 11)*OK,[1, 0, 0, 0, 0, -4, 8, 0, 0, 2, -6, -2, 6, 4, -4, -10, -6, 16, 8, 14, -6, -8, 0, -20, 16, 8, -24, -10]);
ECSearch("21.3-b",(21)*OK+(w + 11)*OK,[-1, 0, 0, 0, 0, 4, -8, 0, 0, 2, 6, 2, -6, -4, 4, 10, 6, 16, 8, -14, 6, -8, 0, 20, -16, 8, -24, 10]);
ECSearch("22.1-a",(w + 6)*OK,[-1, 2, 2, 5, 6, 4, -8, -6, 0, 8, 6, 4, 1, 1, -8, 1, 1, 12, 6, 6, -12, 8, 11, 18, -12, 5, 2, 4]);
ECSearch("22.1-b",(w + 6)*OK,[-1, 0, -4, 5, 2, 0, -6, 6, 4, 6, 6, 4, -7, -7, -4, 7, -1, -16, -2, -14, 14, 0, 17, -6, 22, -3, -4, -8]);
ECSearch("22.1-c",(w + 6)*OK,[1, 0, -4, 5, -2, 0, 6, 6, 4, 6, -6, -4, 7, 7, 4, -7, 1, -16, -2, 14, -14, 0, 17, 6, -22, -3, -4, 8]);
ECSearch("22.1-d",(w + 6)*OK,[1, -2, 2, 5, -6, -4, 8, -6, 0, 8, -6, -4, -1, -1, 8, -1, -1, 12, 6, -6, 12, 8, 11, -18, 12, 5, 2, -4]);
ECSearch("22.2-a",(w - 6)*OK,[2, -1, 5, 2, 6, -8, 4, 0, -6, 8, 6, 1, 4, -8, 1, 1, 1, 6, 12, -12, 6, 11, 8, -12, 18, 2, 5, -23]);
ECSearch("22.2-b",(w - 6)*OK,[0, -1, 5, -4, 2, -6, 0, 4, 6, 6, 6, -7, 4, -4, -7, -1, 7, -2, -16, 14, -14, 17, 0, 22, -6, -4, -3, 7]);
ECSearch("22.2-c",(w - 6)*OK,[0, 1, 5, -4, -2, 6, 0, 4, 6, 6, -6, 7, -4, 4, 7, 1, -7, -2, -16, -14, 14, 17, 0, -22, 6, -4, -3, -7]);
ECSearch("22.2-d",(w - 6)*OK,[-2, 1, 5, 2, -6, 8, -4, 0, -6, 8, -6, -1, -4, 8, -1, -1, -1, 6, 12, 12, -6, 11, 8, 12, -18, 2, 5, 23]);
ECSearch("24.1-a",(-2*w - 16)*OK,[1, 2, 0, 6, 2, 3, -2, 1, 8, 3, 8, 1, 2, 10, -3, -2, -10, 6, -9, -11, 11, -17, 8, 3, 15, -20, -12, 4]);
ECSearch("24.1-b",(-2*w - 16)*OK,[-1, 2, 0, -6, -2, -3, 2, 1, 8, 3, -8, -1, -2, -10, 3, 2, 10, 6, -9, 11, -11, -17, 8, -3, -15, -20, -12, -4]);
ECSearch("24.2-a",(2*w - 16)*OK,[1, 0, 2, 2, 6, -2, 3, 8, 1, 3, 8, 2, 1, -3, 10, -10, -2, -9, 6, 11, -11, 8, -17, 15, 3, -12, -20, -13]);
ECSearch("24.2-b",(2*w - 16)*OK,[-1, 0, 2, -2, -6, 2, -3, 8, 1, 3, -8, -2, -1, 3, -10, 10, 2, -9, 6, -11, 11, 8, -17, -15, -3, -12, -20, 13]);
ECSearch("27.1-a",(9)*OK+(3*w + 3)*OK,[2, 2, 2, 0, 0, -4, 4, -4, 4, -6, -6, -8, 8, 4, -4, 0, 0, 12, -12, -10, -10, -6, -6, -20, -20, 18, 18, -8]);
ECSearch("27.1-b",(9)*OK+(3*w + 3)*OK,[0, -2, -2, -4, 4, 0, 0, 4, -4, -10, 0, -6, -6, -4, -4, 6, 6, 12, -12, -8, 8, 6, 6, 12, -12, -2, -2, -2]);
ECSearch("27.1-c",(9)*OK+(3*w + 3)*OK,[-2, 2, 2, 0, 0, 4, -4, -4, 4, -6, 6, 8, -8, -4, 4, 0, 0, 12, -12, 10, 10, -6, -6, 20, 20, 18, 18, 8]);
ECSearch("27.1-d",(9)*OK+(3*w + 3)*OK,[0, -2, -2, 4, -4, 0, 0, 4, -4, -10, 0, 6, 6, 4, 4, -6, -6, 12, -12, 8, -8, 6, 6, -12, 12, -2, -2, 2]);
ECSearch("27.2-a",(9)*OK+(3*w + 6)*OK,[2, 2, 2, 0, 0, 4, -4, 4, -4, -6, -6, 8, -8, -4, 4, 0, 0, -12, 12, -10, -10, -6, -6, -20, -20, 18, 18, 8]);
ECSearch("27.2-b",(9)*OK+(3*w + 6)*OK,[0, -2, -2, 4, -4, 0, 0, -4, 4, -10, 0, -6, -6, -4, -4, 6, 6, -12, 12, 8, -8, 6, 6, -12, 12, -2, -2, -2]);
ECSearch("27.2-c",(9)*OK+(3*w + 6)*OK,[-2, 2, 2, 0, 0, -4, 4, 4, -4, -6, 6, -8, 8, 4, -4, 0, 0, -12, 12, 10, 10, -6, -6, 20, 20, 18, 18, -8]);
ECSearch("27.2-d",(9)*OK+(3*w + 6)*OK,[0, -2, -2, -4, 4, 0, 0, -4, 4, -10, 0, 6, 6, 4, 4, -6, -6, -12, 12, -8, 8, 6, 6, 12, -12, -2, -2, 2]);
ECSearch("32.1-a",(8)*OK+(4*w)*OK,[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -6, 10, 2, 2, 0, 0, 10, 10, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, -22]);
ECSearch("32.1-b",(8)*OK+(4*w)*OK,[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -6, -10, -2, -2, 0, 0, -10, -10, 0, 0, -2, -2, 0, 0, 0, 0, 0, 0, 22]);
ECSearch("33.1-a",(w + 5)*OK,[0, 1, -4, -1, 0, 5, 2, -6, -3, -4, 6, 2, -4, 8, -4, 8, -1, 15, 6, 6, 9, -16, 11, -3, -3, 11, 2, 2]);
ECSearch("33.1-b",(w + 5)*OK,[0, -1, -4, -1, 0, -5, -2, -6, -3, -4, -6, -2, 4, -8, 4, -8, 1, 15, 6, -6, -9, -16, 11, 3, 3, 11, 2, -2]);
ECSearch("33.4-a",(w - 5)*OK,[0, 1, -1, -4, 0, 2, 5, -3, -6, -4, 6, -4, 2, -4, 8, -1, 8, 6, 15, 9, 6, 11, -16, -3, -3, 2, 11, 17]);
ECSearch("33.4-b",(w - 5)*OK,[0, -1, -1, -4, 0, -2, -5, -3, -6, -4, -6, 4, -2, 4, -8, 1, -8, 6, 15, -9, -6, 11, -16, 3, 3, 2, 11, -17]);
ECSearch("36.1-a",(6)*OK,[-3, 1, 6, -2, -7, 5, 4, 0, -3, -4, -1, -1, -11, 1, -10, 14, -6, -6, -10, -10, -13, -17, -12, -8, -5, -9, -7]);
ECSearch("36.1-b",(6)*OK,[1, -3, 2, -6, -5, 7, 0, 4, -3, 4, 1, 1, -1, 11, -14, 10, -6, -6, 10, 10, -17, -13, 8, 12, -9, -5, -1]);
ECSearch("36.1-c",(6)*OK,[1, -3, -2, 6, 5, -7, 0, 4, -3, -4, -1, -1, 1, -11, 14, -10, -6, -6, -10, -10, -17, -13, -8, -12, -9, -5, 1]);
ECSearch("36.1-d",(6)*OK,[-3, 1, -6, 2, 7, -5, 4, 0, -3, 4, 1, 1, 11, -1, 10, -14, -6, -6, 10, 10, -13, -17, 12, 8, -5, -9, 7]);
