print "Field 2.2.101.1";
Qx<x> := PolynomialRing(RationalField());
K<w> := NumberField(x^2 - x - 25);
OK := Integers(K);
Plist := [];
Append(~Plist,(2)*OK);
Append(~Plist,(-w + 5)*OK);
Append(~Plist,(-w - 4)*OK);
Append(~Plist,(3)*OK);
Append(~Plist,(w + 3)*OK);
Append(~Plist,(w - 4)*OK);
Append(~Plist,(w + 6)*OK);
Append(~Plist,(w - 7)*OK);
Append(~Plist,(w + 2)*OK);
Append(~Plist,(w - 3)*OK);
Append(~Plist,(w + 1)*OK);
Append(~Plist,(w - 2)*OK);
Append(~Plist,(w + 7)*OK);
Append(~Plist,(w - 8)*OK);
Append(~Plist,(-2*w + 9)*OK);
Append(~Plist,(2*w + 7)*OK);
Append(~Plist,(-2*w + 13)*OK);
Append(~Plist,(2*w + 11)*OK);
Append(~Plist,(w + 8)*OK);
Append(~Plist,(w - 9)*OK);
Append(~Plist,(7)*OK);
Append(~Plist,(-3*w + 14)*OK);
Append(~Plist,(3*w + 11)*OK);
Append(~Plist,(3*w - 19)*OK);
Append(~Plist,(3*w + 16)*OK);
Append(~Plist,(-2*w + 3)*OK);
Append(~Plist,(2*w + 1)*OK);
Append(~Plist,(-2*w + 1)*OK);
Append(~Plist,(w + 11)*OK);
Append(~Plist,(w - 12)*OK);
Append(~Plist,(11)*OK);
Append(~Plist,(w + 12)*OK);
Append(~Plist,(w - 13)*OK);
Append(~Plist,(-3*w + 11)*OK);
Append(~Plist,(3*w + 8)*OK);
Append(~Plist,(w + 13)*OK);
Append(~Plist,(w - 14)*OK);
Append(~Plist,(-4*w - 13)*OK);
Append(~Plist,(4*w - 17)*OK);
Append(~Plist,(5*w - 31)*OK);
Append(~Plist,(5*w + 26)*OK);
Append(~Plist,(-3*w + 22)*OK);
Append(~Plist,(3*w + 19)*OK);
Append(~Plist,(-3*w - 4)*OK);
Append(~Plist,(3*w - 7)*OK);
Append(~Plist,(5*w + 18)*OK);
Append(~Plist,(5*w - 23)*OK);
Append(~Plist,(-2*w + 19)*OK);
Append(~Plist,(2*w + 17)*OK);
Append(~Plist,(-3*w + 2)*OK);
Append(~Plist,(3*w - 1)*OK);
Append(~Plist,(-6*w + 29)*OK);
Append(~Plist,(6*w + 23)*OK);
Append(~Plist,(-5*w - 27)*OK);
Append(~Plist,(5*w - 32)*OK);
Append(~Plist,(-5*w + 22)*OK);
Append(~Plist,(-5*w - 17)*OK);
Append(~Plist,(w + 17)*OK);
Append(~Plist,(w - 18)*OK);
Append(~Plist,(-4*w - 9)*OK);
Append(~Plist,(4*w - 13)*OK);
Append(~Plist,(-7*w + 34)*OK);
Append(~Plist,(7*w + 27)*OK);
Append(~Plist,(w + 18)*OK);
Append(~Plist,(w - 19)*OK);
Append(~Plist,(-5*w + 19)*OK);
Append(~Plist,(5*w + 14)*OK);
Append(~Plist,(-7*w - 26)*OK);
Append(~Plist,(-7*w + 33)*OK);
Append(~Plist,(-3*w - 23)*OK);
Append(~Plist,(3*w - 26)*OK);
Append(~Plist,(-4*w + 7)*OK);
Append(~Plist,(4*w + 3)*OK);
Append(~Plist,(-2*w + 23)*OK);
Append(~Plist,(2*w + 21)*OK);
Append(~Plist,(8*w - 49)*OK);
Append(~Plist,(8*w + 41)*OK);
Append(~Plist,(-5*w + 17)*OK);
Append(~Plist,(-5*w - 12)*OK);
Append(~Plist,(-5*w - 11)*OK);
Append(~Plist,(5*w - 16)*OK);
Append(~Plist,(-5*w + 36)*OK);
Append(~Plist,(5*w + 31)*OK);
Append(~Plist,(-5*w + 14)*OK);
Append(~Plist,(5*w + 9)*OK);
Append(~Plist,(-6*w + 23)*OK);
Append(~Plist,(6*w + 17)*OK);
Append(~Plist,(5*w + 8)*OK);
Append(~Plist,(5*w - 13)*OK);
Append(~Plist,(-5*w + 12)*OK);
Append(~Plist,(-5*w - 7)*OK);
Append(~Plist,(-4*w + 33)*OK);
Append(~Plist,(4*w + 29)*OK);
Append(~Plist,(-9*w - 34)*OK);
Append(~Plist,(-9*w + 43)*OK);
Append(~Plist,(-7*w + 46)*OK);
Append(~Plist,(-7*w - 39)*OK);
Append(~Plist,(-7*w - 22)*OK);
Append(~Plist,(7*w - 29)*OK);
Append(~Plist,(-8*w + 51)*OK);
effort := 400;
ECSearch := procedure(class_label, N, aplist);
print "Isogeny class ", class_label;
goodP := [P: P in Plist | Valuation(N,P) eq 0];
goodP := [goodP[i]: i in [1..#(aplist)]];
curves := EllipticCurveSearch(N,effort : Primes:=goodP, Traces:=aplist);
curves := [E: E in curves | &and[TraceOfFrobenius(E,goodP[i]) eq aplist[i] : i in [1..#(aplist)]]];
if #curves eq 0 then print "No curve found"; end if;
for E in curves do;
 a1,a2,a3,a4,a6:=Explode(aInvariants(E));
 printf "Curve [%o,%o,%o,%o,%o]\n",a1,a2,a3,a4,a6;
 end for;
end procedure;
SetColumns(0);

ECSearch("5.1-a",(-w + 5)*OK,[-1, 1, -4, -4, 1, -2, -2, 1, -4, 6, -9, -5, 5, -3, 2, 4, -6, -3, 2, 4, -12, -2, 10, 0, 12, 17, 7, -2, 3]);
ECSearch("5.2-a",(-w - 4)*OK,[-1, 1, -4, 1, -4, -2, -2, -4, 1, -9, 6, 5, -5, 2, -3, -6, 4, 2, -3, 4, -2, -12, 0, 10, 17, 12, 7, 3, -2]);
ECSearch("9.1-a",(3)*OK,[0, 1, 1, -1, -1, 3, 3, -5, -5, 9, 9, 7, 7, -2, -2, 4, 4, 3, 3, 10, 7, 7, -5, -5, -2, -2, 2, 13, 13]);
ECSearch("16.1-a",(4)*OK,[3, 3, 2, -1, -1, 5, 5, -7, -7, 1, 1, -3, -3, -2, -2, 12, 12, -9, -9, -2, 7, 7, 17, 17, -10, -10, -2, 1, 1]);
ECSearch("20.1-a",(-2*w + 10)*OK,[-2, 2, 2, 4, 1, 7, 1, -1, -6, 6, 4, -4, 0, -4, 7, 3, 0, -4, 1, 6, -8, -14, 12, -9, -7, -14, 1, -3]);
ECSearch("20.1-b",(-2*w + 10)*OK,[0, 1, 5, -4, -6, 6, -7, 2, -6, 0, 5, -4, -7, 2, -10, -10, -3, -9, 5, -6, -3, -10, -1, 8, 17, 3, -12, 3]);
ECSearch("20.1-c",(-2*w + 10)*OK,[0, -1, -1, -4, 2, 2, -1, 2, -2, 4, -9, 0, -11, 10, -6, 6, -9, 3, -5, -2, 1, -10, 11, -4, -7, 7, -20, 13]);
ECSearch("20.1-d",(-2*w + 10)*OK,[-4, 1, 1, -4, -6, -2, 1, 2, 6, 0, 1, 4, -3, 10, 10, -6, -7, 3, -3, -2, -7, -14, -5, 8, 1, -9, 4, 3]);
ECSearch("20.1-e",(-2*w + 10)*OK,[0, -4, 5, -4, -1, -4, 8, 2, 4, -5, 0, -9, -2, 7, 0, 0, -3, 6, 10, 4, -8, -10, 14, 8, -13, -2, 13, -2]);
ECSearch("20.2-a",(-2*w - 8)*OK,[-2, 2, 4, 2, 7, 1, -1, 1, 6, -6, -4, 4, -4, 0, 3, 7, -4, 0, 1, -8, 6, 12, -14, -7, -9, -14, -3, 1]);
ECSearch("20.2-b",(-2*w - 8)*OK,[0, 1, -4, 5, 6, -6, 2, -7, 0, -6, -4, 5, 2, -7, -10, -10, -9, -3, 5, -3, -6, -1, -10, 17, 8, 3, 3, -12]);
ECSearch("20.2-c",(-2*w - 8)*OK,[0, -1, -4, -1, 2, 2, 2, -1, 4, -2, 0, -9, 10, -11, 6, -6, 3, -9, -5, 1, -2, 11, -10, -7, -4, 7, 13, -20]);
ECSearch("20.2-d",(-2*w - 8)*OK,[-4, 1, -4, 1, -2, -6, 2, 1, 0, 6, 4, 1, 10, -3, -6, 10, 3, -7, -3, -7, -2, -5, -14, 1, 8, -9, 3, 4]);
ECSearch("20.2-e",(-2*w - 8)*OK,[0, -4, -4, 5, -4, -1, 2, 8, -5, 4, -9, 0, 7, -2, 0, 0, 6, -3, 10, -8, 4, 14, -10, -13, 8, -2, -2, 13]);
ECSearch("23.1-a",(w + 1)*OK,[-1, -3, -2, 2, -2, 0, 3, 0, -2, -2, 1, 4, 7, 7, -4, 11, 7, -8, 4, -5, -5, 0, -13, 15, 6, -13, -10, 13, -8]);
ECSearch("23.1-b",(w + 1)*OK,[-1, 1, -4, -4, -4, -4, 3, -2, -4, -4, 1, 0, -5, 7, -8, -1, -1, -8, 2, -1, 3, -12, -5, -5, -8, 7, 12, 13, -12]);
ECSearch("23.2-a",(w - 2)*OK,[-1, -2, -3, 2, 0, -2, 0, 3, -2, -2, 1, 7, 4, -4, 7, 7, 11, 4, -8, -5, 0, -5, 15, -13, -13, 6, -10, -8, 13]);
ECSearch("23.2-b",(w - 2)*OK,[-1, -4, 1, -4, -4, -4, -2, 3, -4, -4, 1, -5, 0, -8, 7, -1, -1, 2, -8, -1, -12, 3, -5, -5, 7, -8, 12, -12, 13]);
ECSearch("25.1-a",(5)*OK,[-1, 6, 6, 6, -2, -2, -4, -4, -4, -4, 0, 0, 2, 2, 4, 4, -8, -8, 14, 8, 8, 0, 0, 2, 2, -18, 8, 8]);
ECSearch("25.2-a",(w)*OK,[1, 1, 4, 4, 1, -2, 2, -1, 4, 6, 9, 5, -5, -3, -2, -4, -6, 3, 2, -4, -12, -2, 10, 0, -12, 17, 7, -2, -3]);
ECSearch("25.3-a",(w - 1)*OK,[1, 1, 4, 1, 4, 2, -2, 4, -1, 9, 6, -5, 5, -2, -3, -6, -4, 2, 3, -4, -2, -12, 0, 10, 17, -12, 7, -3, -2]);
ECSearch("31.1-a",(w + 7)*OK,[2, 2, 2, 4, -3, 6, 6, -1, -4, 1, 2, -3, 8, -10, -1, 8, -1, -9, -4, -2, 3, 1, -15, -2, -2, -12, -2, 13, 12]);
ECSearch("31.2-a",(w - 8)*OK,[2, 2, 2, 4, 6, -3, -1, 6, 1, -4, -3, 2, 8, -1, -10, -1, 8, -4, -9, -2, 1, 3, -2, -15, -12, -2, -2, 12, 13]);
ECSearch("36.1-a",(6)*OK,[0, 0, 2, 2, 2, 2, -4, -4, -8, -8, 0, 0, 10, 10, 0, 0, -12, -12, 10, 16, 16, 8, 8, 14, 14, -20, 10, 10]);
ECSearch("36.1-b",(6)*OK,[0, 0, 2, 2, 7, 7, 1, 1, 2, 2, -10, -10, 0, 0, 5, 5, 8, 8, 5, 6, 6, 8, 8, -11, -11, 20, -15, -15]);
ECSearch("37.1-a",(-2*w + 9)*OK,[0, 3, 1, 2, 1, 3, 3, 5, 1, -5, 3, 1, 3, -7, 10, -8, 4, 3, -5, 10, 1, -3, -7, -1, 14, -14, 6, 7, -1]);
ECSearch("37.1-b",(-2*w + 9)*OK,[3, 2, -4, 1, -2, -3, 8, 7, -2, 5, -1, 0, 0, 10, 2, 9, -2, -6, -6, -5, 7, -5, -14, 15, 1, -10, 3, -4, 9]);
ECSearch("37.1-c",(-2*w + 9)*OK,[0, -1, 3, 2, -1, 3, 1, -3, -5, -1, -5, -1, -9, -5, -2, 12, -4, 9, -7, -2, -3, 13, -1, 3, -2, -10, -18, -9, 7]);
ECSearch("37.2-a",(2*w + 7)*OK,[0, 1, 3, 2, 3, 1, 5, 3, -5, 1, 1, 3, -7, 3, 10, 4, -8, -5, 3, 10, -3, 1, -1, -7, -14, 14, 6, -1, 7]);
ECSearch("37.2-b",(2*w + 7)*OK,[3, -4, 2, 1, -3, -2, 7, 8, 5, -2, 0, -1, 10, 0, 2, -2, 9, -6, -6, -5, -5, 7, 15, -14, -10, 1, 3, 9, -4]);
ECSearch("37.2-c",(2*w + 7)*OK,[0, 3, -1, 2, 3, -1, -3, 1, -1, -5, -1, -5, -5, -9, -2, -4, 12, -7, 9, -2, 13, -3, 3, -1, -10, -2, -18, 7, -9]);
ECSearch("43.1-a",(-2*w + 13)*OK,[0, 1, 3, -2, 5, -7, -5, -5, 7, 1, -1, -1, -1, 3, 6, -2, -8, -7, -7, 6, 5, -9, -1, -13, 2, -14, 6, -3, 1]);
ECSearch("43.1-b",(-2*w + 13)*OK,[-3, 0, 1, 2, -2, 4, -2, 0, -6, 1, -6, 6, 10, 6, 0, -9, 10, 4, -12, -12, 6, 13, 0, 8, -14, 14, -11, -15, -12]);
ECSearch("43.2-a",(2*w + 11)*OK,[0, 3, 1, -2, -7, 5, -5, -5, 1, 7, -1, -1, 3, -1, -2, 6, -8, -7, -7, 6, -9, 5, -13, -1, -14, 2, 6, 1, -3]);
ECSearch("43.2-b",(2*w + 11)*OK,[-3, 1, 0, 2, 4, -2, 0, -2, 1, -6, 6, -6, 6, 10, -9, 0, 10, -12, 4, -12, 13, 6, 8, 0, 14, -14, -11, -12, -15]);
ECSearch("49.1-a",(7)*OK,[0, 3, 3, 2, 7, 7, -7, -7, 3, 3, 3, 3, -5, -5, -10, -10, 4, 4, 9, 9, 5, 5, -13, -13, -10, -10, -2, 15, 15]);
ECSearch("49.1-b",(7)*OK,[3, 0, 0, 5, 4, 4, -4, -4, 6, 6, -3, -3, 10, 10, -1, -1, -11, -11, 0, 0, -13, -13, 5, 5, 2, 2, -20, 9, 9]);
ECSearch("49.1-c",(7)*OK,[0, -3, 1, 2, 5, -3, 3, 3, 5, -7, 3, -1, 5, -3, -6, -2, -4, -4, -9, 7, -7, -3, -9, -5, 2, 10, -14, -9, -9]);
ECSearch("49.1-d",(7)*OK,[0, 1, -3, 2, -3, 5, 3, 3, -7, 5, -1, 3, -3, 5, -2, -6, -4, -4, 7, -9, -3, -7, -5, -9, 10, 2, -14, -9, -9]);
ECSearch("52.1-a",(2*w + 6)*OK,[0, 2, 2, 0, 3, -5, -3, 3, -6, -8, 2, -6, -2, 2, 11, -1, 12, -10, -1, 4, 4, -14, 14, 9, -13, 10, 3, -9]);
ECSearch("52.2-a",(2*w - 8)*OK,[2, 0, 2, 0, -5, 3, 3, -3, -8, -6, -6, 2, 2, -2, -1, 11, -10, 12, -1, 4, 4, 14, -14, -13, 9, 10, -9, 3]);
ECSearch("65.1-a",(w + 9)*OK,[-1, 1, 5, 4, 1, -2, 8, -2, 3, 3, 5, -8, 2, -3, 0, -2, -1, 12, 4, -8, -12, 0, -8, 8, 12, 10, 15, 4]);
ECSearch("65.2-a",(-2*w + 7)*OK,[-3, -2, -2, -2, 6, 2, -4, 4, 0, 0, 4, 0, 6, -2, 8, 4, 12, -8, 2, -8, 0, -4, -8, 2, 18, -14, 12, -12]);
ECSearch("65.4-a",(w - 10)*OK,[-1, 1, 5, 4, -2, 1, -2, 8, 3, 3, -8, 5, -3, 2, -2, 0, 12, -1, 4, -12, -8, -8, 0, 12, 8, 10, 4, 15]);
ECSearch("65.3-a",(2*w + 5)*OK,[-3, -2, -2, -2, 2, 6, 4, -4, 0, 0, 0, 4, -2, 6, 4, 8, -8, 12, 2, 0, -8, -8, -4, 18, 2, -14, -12, 12]);
ECSearch("79.1-a",(3*w - 19)*OK,[2, 3, 3, -4, 0, 6, -1, 0, 8, -3, -9, 0, 6, -4, 3, 8, 0, 5, 3, 0, 2, -10, 0, -6, 12, 0, 14, 18, 5]);
ECSearch("79.2-a",(3*w + 16)*OK,[2, 3, 3, -4, 6, 0, 0, -1, -3, 8, 0, -9, -4, 6, 8, 3, 5, 0, 0, 3, 2, 0, -10, -6, 0, 12, 14, 5, 18]);
ECSearch("80.1-a",(-4*w + 20)*OK,[-3, -4, -4, 5, 2, 2, 5, -4, -2, 7, -3, -3, 7, -2, -12, 6, 3, -6, -8, -8, 10, -10, 8, -16, -7, 13, -2, 7]);
ECSearch("80.2-a",(-4*w - 16)*OK,[-3, -4, 5, -4, 2, 2, -4, 5, 7, -2, -3, -3, -2, 7, 6, -12, -6, 3, -8, 10, -8, 8, -10, -7, -16, 13, 7, -2]);
ECSearch("81.1-a",(9)*OK,[0, -1, -1, -1, -1, -3, -3, -5, -5, -9, -9, 7, 7, -2, -2, 4, 4, -3, -3, 10, -7, -7, -5, -5, -2, -2, -2, -13, -13]);
ECSearch("85.2-a",(-2*w + 5)*OK,[1, -3, -4, 0, 1, -2, -1, 4, 6, 1, -3, 11, 5, -6, 4, 6, -13, -6, -8, 4, 10, -10, -4, -16, 9, -9, 10, 1]);
ECSearch("85.2-b",(-2*w + 5)*OK,[-3, -3, 4, 0, -7, 6, -5, -4, 6, -3, -7, -1, -3, -6, 12, 6, -9, 10, 0, 12, 2, -2, 12, 16, -7, -1, -6, -11]);
ECSearch("85.3-a",(2*w + 3)*OK,[1, -3, -4, 1, 0, -2, 4, -1, 1, 6, 11, -3, -6, 5, 6, 4, -6, -13, -8, 10, 4, -4, -10, 9, -16, -9, 1, 10]);
ECSearch("85.3-b",(2*w + 3)*OK,[-3, -3, 4, -7, 0, 6, -4, -5, -3, 6, -1, -7, -6, -3, 6, 12, 10, -9, 0, 2, 12, 12, -2, -7, 16, -1, -11, -6]);
ECSearch("92.1-a",(2*w + 2)*OK,[0, 0, -2, 2, -4, 3, -3, 5, 5, 6, -10, 8, -4, -10, -1, -1, 6, -12, 5, 6, 0, 2, 2, -1, -19, -12, 3, -9]);
ECSearch("92.1-b",(2*w + 2)*OK,[3, 4, 2, -2, 6, -3, 6, -2, -2, 7, -2, -11, -5, -10, 5, -5, 4, -8, 1, -5, -6, 11, -3, -12, 11, 2, 7, 4]);
ECSearch("92.1-c",(2*w + 2)*OK,[-2, 0, 2, 4, -4, 0, -6, 0, 0, 4, 0, 0, 6, 10, -2, 4, 0, 2, -4, 8, -14, -12, 0, 2, -14, -10, 10, -4]);
ECSearch("92.2-a",(2*w - 4)*OK,[0, 0, -2, -4, 2, -3, 3, 5, 5, 6, 8, -10, -10, -4, -1, -1, -12, 6, 5, 0, 6, 2, 2, -19, -1, -12, -9, 3]);
ECSearch("92.2-b",(2*w - 4)*OK,[4, 3, 2, 6, -2, 6, -3, -2, -2, 7, -11, -2, -10, -5, -5, 5, -8, 4, 1, -6, -5, -3, 11, 11, -12, 2, 4, 7]);
ECSearch("92.2-c",(2*w - 4)*OK,[0, -2, 2, -4, 4, -6, 0, 0, 0, 4, 0, 0, 10, 6, 4, -2, 2, 0, -4, -14, 8, 0, -12, -14, 2, -10, -4, 10]);
ECSearch("95.1-a",(-3*w - 10)*OK,[-1, 4, 5, 2, -5, -2, 4, 1, -6, 0, 10, -4, -3, 2, 7, 0, 3, 2, 4, 0, -11, 4, 0, -18, 2, 1, 10, 6]);
ECSearch("95.1-b",(-3*w - 10)*OK,[-1, 3, -2, 2, 5, 6, 0, 5, 0, 3, 5, -1, 5, -4, -4, 8, 9, 6, -10, -6, 0, 8, 8, 8, -1, 3, 0, -3]);
ECSearch("95.1-c",(-3*w - 10)*OK,[-1, -1, -4, -2, -3, -2, -6, 1, 0, 3, -3, -5, -3, -8, -8, 10, 1, -8, -4, 8, -14, -10, 2, 6, -13, -9, 8, -3]);
ECSearch("95.4-a",(3*w - 13)*OK,[-1, 4, 5, -5, 2, 4, -2, 1, 0, -6, -4, 10, 2, -3, 0, 7, 2, 3, 4, -11, 0, 0, 4, 2, -18, 1, 6, 10]);
ECSearch("95.4-b",(3*w - 13)*OK,[-1, 3, -2, 5, 2, 0, 6, 5, 3, 0, -1, 5, -4, 5, 8, -4, 6, 9, -10, 0, -6, 8, 8, -1, 8, 3, -3, 0]);
ECSearch("95.4-c",(3*w - 13)*OK,[-1, -1, -4, -3, -2, -6, -2, 1, 3, 0, -5, -3, -8, -3, 10, -8, -8, 1, -4, -14, 8, 2, -10, -13, 6, -9, -3, 8]);
ECSearch("97.1-a",(-2*w + 3)*OK,[0, -3, -1, 2, 7, 1, 3, -3, 1, -5, 5, 3, 5, -7, -2, 2, -4, -4, 7, -1, 6, -1, -15, -11, 5, 2, -18, -9, 9]);
ECSearch("97.2-a",(2*w + 1)*OK,[0, -1, -3, 2, 1, 7, -3, 3, -5, 1, 3, 5, -7, 5, 2, -2, -4, -4, -1, 7, 6, -15, -1, 5, -11, 2, -18, 9, -9]);
