print "Field 2.2.237.1";
Qx<x> := PolynomialRing(RationalField());
K<w> := NumberField(x^2 - x - 59);
OK := Integers(K);
Plist := [];
Append(~Plist,(-w - 7)*OK);
Append(~Plist,(2)*OK);
Append(~Plist,(-w + 9)*OK);
Append(~Plist,(w + 8)*OK);
Append(~Plist,(w + 6)*OK);
Append(~Plist,(w - 7)*OK);
Append(~Plist,(2*w - 17)*OK);
Append(~Plist,(-2*w - 15)*OK);
Append(~Plist,(5)*OK);
Append(~Plist,(w + 5)*OK);
Append(~Plist,(w - 6)*OK);
Append(~Plist,(w + 9)*OK);
Append(~Plist,(w - 10)*OK);
Append(~Plist,(-2*w + 15)*OK);
Append(~Plist,(2*w + 13)*OK);
Append(~Plist,(w + 3)*OK);
Append(~Plist,(w - 4)*OK);
Append(~Plist,(7)*OK);
Append(~Plist,(w + 2)*OK);
Append(~Plist,(w - 3)*OK);
Append(~Plist,(w)*OK);
Append(~Plist,(w - 1)*OK);
Append(~Plist,(3*w + 23)*OK);
Append(~Plist,(3*w - 26)*OK);
Append(~Plist,(-3*w + 23)*OK);
Append(~Plist,(3*w + 20)*OK);
Append(~Plist,(w + 11)*OK);
Append(~Plist,(w - 12)*OK);
Append(~Plist,(-5*w + 42)*OK);
Append(~Plist,(w + 12)*OK);
Append(~Plist,(w - 13)*OK);
Append(~Plist,(-4*w + 31)*OK);
Append(~Plist,(4*w + 27)*OK);
Append(~Plist,(-3*w - 19)*OK);
Append(~Plist,(-3*w + 22)*OK);
Append(~Plist,(11)*OK);
Append(~Plist,(-2*w + 11)*OK);
Append(~Plist,(2*w + 9)*OK);
Append(~Plist,(-5*w + 39)*OK);
Append(~Plist,(5*w + 34)*OK);
Append(~Plist,(w + 14)*OK);
Append(~Plist,(w - 15)*OK);
Append(~Plist,(-2*w + 21)*OK);
Append(~Plist,(2*w + 19)*OK);
Append(~Plist,(-2*w + 9)*OK);
Append(~Plist,(2*w + 7)*OK);
Append(~Plist,(w + 15)*OK);
Append(~Plist,(w - 16)*OK);
Append(~Plist,(-3*w + 20)*OK);
Append(~Plist,(3*w + 17)*OK);
Append(~Plist,(-6*w + 47)*OK);
Append(~Plist,(6*w + 41)*OK);
Append(~Plist,(-3*w - 26)*OK);
Append(~Plist,(3*w - 29)*OK);
Append(~Plist,(-3*w - 16)*OK);
Append(~Plist,(3*w - 19)*OK);
Append(~Plist,(-2*w + 3)*OK);
Append(~Plist,(-2*w - 1)*OK);
Append(~Plist,(5*w + 39)*OK);
Append(~Plist,(5*w - 44)*OK);
Append(~Plist,(-7*w + 55)*OK);
Append(~Plist,(7*w + 48)*OK);
Append(~Plist,(-4*w + 37)*OK);
Append(~Plist,(-4*w - 33)*OK);
Append(~Plist,(w + 18)*OK);
Append(~Plist,(w - 19)*OK);
Append(~Plist,(-3*w + 17)*OK);
Append(~Plist,(3*w + 14)*OK);
Append(~Plist,(-8*w + 63)*OK);
Append(~Plist,(8*w + 55)*OK);
Append(~Plist,(9*w + 67)*OK);
Append(~Plist,(9*w - 76)*OK);
Append(~Plist,(-3*w + 31)*OK);
Append(~Plist,(3*w + 28)*OK);
Append(~Plist,(-7*w - 47)*OK);
Append(~Plist,(-7*w + 54)*OK);
Append(~Plist,(-5*w - 31)*OK);
Append(~Plist,(5*w - 36)*OK);
Append(~Plist,(6*w + 47)*OK);
Append(~Plist,(6*w - 53)*OK);
Append(~Plist,(-3*w - 29)*OK);
Append(~Plist,(3*w - 32)*OK);
Append(~Plist,(-3*w - 10)*OK);
Append(~Plist,(3*w - 13)*OK);
Append(~Plist,(-4*w - 21)*OK);
Append(~Plist,(4*w - 25)*OK);
Append(~Plist,(-4*w - 35)*OK);
Append(~Plist,(4*w - 39)*OK);
Append(~Plist,(8*w + 61)*OK);
Append(~Plist,(-8*w + 69)*OK);
Append(~Plist,(-2*w + 27)*OK);
Append(~Plist,(2*w + 25)*OK);
Append(~Plist,(-3*w + 11)*OK);
Append(~Plist,(3*w + 8)*OK);
Append(~Plist,(-10*w + 79)*OK);
Append(~Plist,(10*w + 69)*OK);
Append(~Plist,(-9*w + 77)*OK);
Append(~Plist,(-9*w - 68)*OK);
Append(~Plist,(-3*w - 7)*OK);
Append(~Plist,(3*w - 10)*OK);
effort := 400;
ECSearch := procedure(class_label, N, aplist);
print "Isogeny class ", class_label;
goodP := [P: P in Plist | Valuation(N,P) eq 0];
goodP := [goodP[i]: i in [1..#(aplist)]];
curves := EllipticCurveSearch(N,effort : Primes:=goodP, Traces:=aplist);
curves := [E: E in curves | &and[TraceOfFrobenius(E,goodP[i]) eq aplist[i] : i in [1..#(aplist)]]];
if #curves eq 0 then print "No curve found"; end if;
for E in curves do;
 a1,a2,a3,a4,a6:=Explode(aInvariants(E));
 printf "Curve [%o,%o,%o,%o,%o]\n",a1,a2,a3,a4,a6;
 end for;
end procedure;
SetColumns(0);

ECSearch("16.1-a",(4)*OK,[0, 2, 2, 0, 0, 8, 8, 10, 0, 0, 4, 4, 0, 0, 0, 0, 2, 0, 0, 0, 0, 16, 16, 0, 0, -10, -10, 4, -14]);
ECSearch("19.1-a",(2*w - 17)*OK,[-1, -1, -1, -7, 0, 0, 2, -1, -6, 0, 8, 2, -6, 6, -3, -9, 5, -12, 12, -3, 9, 14, -10, 3, 15, -10, 14, 8, 5]);
ECSearch("19.1-b",(2*w - 17)*OK,[1, -1, -1, -7, 0, 0, 2, -1, 6, 0, 8, 2, 6, -6, 3, 9, 5, 12, -12, 3, -9, 14, -10, -3, -15, -10, 14, 8, 5]);
ECSearch("19.2-a",(-2*w - 15)*OK,[-1, -1, -7, -1, 0, 0, 2, -1, 0, -6, 2, 8, 6, -6, -9, -3, 5, 12, -12, 9, -3, -10, 14, 15, 3, 14, -10, 8, -13]);
ECSearch("19.2-b",(-2*w - 15)*OK,[1, -1, -7, -1, 0, 0, 2, -1, 0, 6, 2, 8, -6, 6, 9, 3, 5, -12, 12, -9, 3, -10, 14, -15, -3, 14, -10, 8, -13]);
ECSearch("39.1-a",(-w - 4)*OK,[2, -5, 6, -2, -4, 0, 1, 2, -9, 4, 6, -6, 12, -5, 9, 6, 5, 12, -1, -3, 1, 0, 2, -6, -2, 9, -4, -1]);
ECSearch("39.1-b",(-w - 4)*OK,[-1, -2, 6, 2, -4, 0, -2, -2, 6, -8, 0, -6, 6, 8, 12, -6, -2, -6, 4, 0, 4, 12, -8, 0, -14, -6, 8, 14]);
ECSearch("39.1-c",(-w - 4)*OK,[-1, -2, 2, -6, 4, 4, -2, -6, -10, -8, 4, 6, -6, 0, 12, 10, -2, -10, -12, 0, -4, -8, 8, 16, -6, 10, -4, -18]);
ECSearch("39.1-d",(-w - 4)*OK,[-1, 2, 2, 8, 0, -6, 10, 10, 4, 8, 2, 2, -10, -4, 8, -6, 4, 10, 0, 0, 8, 2, 0, 0, 14, -10, 10, -2]);
ECSearch("39.1-e",(-w - 4)*OK,[-1, -2, -2, 6, 4, 4, -2, 6, 10, -8, 4, -6, 6, 0, -12, 10, 2, 10, 12, 0, -4, -8, -8, -16, -6, 10, -4, -18]);
ECSearch("39.1-f",(-w - 4)*OK,[-1, 2, -2, -8, 0, -6, 10, -10, -4, 8, 2, -2, 10, 4, -8, -6, -4, -10, 0, 0, 8, 2, 0, 0, 14, -10, 10, -2]);
ECSearch("39.1-g",(-w - 4)*OK,[2, -5, -6, 2, -4, 0, 1, -2, 9, 4, 6, 6, -12, 5, -9, 6, -5, -12, 1, 3, 1, 0, -2, 6, -2, 9, -4, -1]);
ECSearch("39.1-h",(-w - 4)*OK,[-1, -2, -6, -2, -4, 0, -2, 2, -6, -8, 0, 6, -6, -8, -12, -6, 2, 6, -4, 0, 4, 12, 8, 0, -14, -6, 8, 14]);
ECSearch("39.2-a",(-w + 5)*OK,[2, -5, -2, 6, 0, -4, 1, -9, 2, 6, 4, 12, -6, 9, -5, 6, 12, 5, -3, -1, 0, 1, -6, 2, 9, -2, -4, 8]);
ECSearch("39.2-b",(-w + 5)*OK,[-1, -2, 2, 6, 0, -4, -2, 6, -2, 0, -8, 6, -6, 12, 8, -6, -6, -2, 0, 4, 12, 4, 0, -8, -6, -14, 8, 2]);
ECSearch("39.2-c",(-w + 5)*OK,[-1, -2, -6, 2, 4, 4, -2, -10, -6, 4, -8, -6, 6, 12, 0, 10, -10, -2, 0, -12, -8, -4, 16, 8, 10, -6, -4, -14]);
ECSearch("39.2-d",(-w + 5)*OK,[-1, 2, 8, 2, -6, 0, 10, 4, 10, 2, 8, -10, 2, 8, -4, -6, 10, 4, 0, 0, 2, 8, 0, 0, -10, 14, 10, 10]);
ECSearch("39.2-e",(-w + 5)*OK,[-1, -2, 6, -2, 4, 4, -2, 10, 6, 4, -8, 6, -6, -12, 0, 10, 10, 2, 0, 12, -8, -4, -16, -8, 10, -6, -4, -14]);
ECSearch("39.2-f",(-w + 5)*OK,[-1, 2, -8, -2, -6, 0, 10, -4, -10, 2, 8, 10, -2, -8, 4, -6, -10, -4, 0, 0, 2, 8, 0, 0, -10, 14, 10, 10]);
ECSearch("39.2-g",(-w + 5)*OK,[2, -5, 2, -6, 0, -4, 1, 9, -2, 6, 4, -12, 6, -9, 5, 6, -12, -5, 3, 1, 0, 1, 6, -2, 9, -2, -4, 8]);
ECSearch("39.2-h",(-w + 5)*OK,[-1, -2, -2, -6, 0, -4, -2, -6, 2, 0, -8, -6, 6, -12, -8, -6, 6, 2, 0, -4, 12, 4, 0, 8, -6, -14, 8, 2]);
ECSearch("47.1-a",(w + 3)*OK,[3, -2, 2, -2, -6, -3, 2, 1, -4, 3, -10, 7, 2, 2, 3, 12, -10, -2, -2, 6, 4, 4, -10, -8, 12, -11, -6, -2, 7]);
ECSearch("47.1-b",(w + 3)*OK,[-3, -2, 2, -2, 6, 3, 2, 1, -4, -3, 10, 7, 2, -2, -3, -12, -10, 2, 2, -6, -4, 4, -10, 8, -12, -11, -6, -2, 7]);
ECSearch("47.2-a",(w - 4)*OK,[3, -2, -2, 2, -3, -6, 1, 2, -4, -10, 3, 2, 7, 3, 2, 12, -10, -2, -2, 4, 6, -10, 4, 12, -8, -6, -11, -2, -13]);
ECSearch("47.2-b",(w - 4)*OK,[-3, -2, -2, 2, 3, 6, 1, 2, -4, 10, -3, 2, 7, -3, -2, -12, -10, 2, 2, -4, -6, -10, 4, -12, 8, -6, -11, -2, -13]);
ECSearch("53.1-a",(w + 2)*OK,[2, -1, -1, -1, -3, -3, 2, 2, -10, -3, -3, -4, 8, 6, 6, 6, 12, 5, 6, -6, 12, 14, -4, 0, 6, -1, -7, 8, -19]);
ECSearch("53.1-b",(w + 2)*OK,[-2, -1, -1, -1, 3, 3, 2, 2, -10, 3, 3, -4, 8, -6, -6, -6, -12, 5, -6, 6, -12, 14, -4, 0, -6, -1, -7, 8, -19]);
ECSearch("53.2-a",(w - 3)*OK,[2, -1, -1, -1, -3, -3, 2, 2, -10, -3, -3, 8, -4, 6, 6, 12, 6, 5, 6, 12, -6, -4, 14, 6, 0, -7, -1, 8, -7]);
ECSearch("53.2-b",(w - 3)*OK,[-2, -1, -1, -1, 3, 3, 2, 2, -10, 3, 3, 8, -4, -6, -6, -12, -6, 5, -6, -12, 6, -4, 14, -6, 0, -7, -1, 8, -7]);
ECSearch("57.1-a",(w + 1)*OK,[1, -5, 4, -1, 2, 6, 5, 1, 10, 5, 0, 12, 3, -8, 10, -8, 1, -4, -4, 0, 12, 4, 6, 0, -2, 2, 7, 12]);
ECSearch("57.1-b",(w + 1)*OK,[1, -5, 4, 1, -2, 6, 5, -1, -10, 5, 0, -12, -3, 8, -10, -8, -1, 4, 4, 0, 12, 4, -6, 0, -2, 2, 7, 12]);
ECSearch("57.2-a",(w - 2)*OK,[1, 4, -5, 2, -1, 6, 5, 10, 1, 0, 5, 3, 12, 10, -8, -8, -4, 1, 0, -4, 4, 12, 0, 6, 2, -2, 7, -17]);
ECSearch("57.2-b",(w - 2)*OK,[1, 4, -5, -2, 1, 6, 5, -10, -1, 0, 5, -3, -12, -10, 8, -8, 4, -1, 0, 4, 4, 12, 0, -6, 2, -2, 7, -17]);
ECSearch("64.1-a",(8)*OK,[1, 1, -3, 2, -6, 2, 2, 3, 2, 10, 2, 10, 0, -12, -1, -5, -1, 10, -6, 11, 11, 6, -14, -1, -5, 2, -6, -4, 19]);
ECSearch("64.1-b",(8)*OK,[-1, 1, -3, -2, 6, 2, 2, 3, -2, -10, 2, 10, 0, 12, 1, 5, -1, -10, 6, -11, -11, 6, -14, 1, 5, 2, -6, -4, 19]);
ECSearch("64.1-c",(8)*OK,[1, -3, 1, -6, 2, 2, 2, 3, 10, 2, 10, 2, -12, 0, -5, -1, -1, -6, 10, 11, 11, -14, 6, -5, -1, -6, 2, -4, 3]);
ECSearch("64.1-d",(8)*OK,[-1, -3, 1, 6, -2, 2, 2, 3, -10, -2, 10, 2, 12, 0, 5, 1, -1, 6, -10, -11, -11, -14, 6, 5, 1, -6, 2, -4, 3]);
ECSearch("68.1-a",(2*w + 12)*OK,[0, -1, -3, 4, 4, -4, 8, 3, 0, 7, -4, -9, 8, -4, -3, 5, -11, 10, -6, -3, -1, -8, 5, -8, -4, -7, 8, 10]);
ECSearch("68.1-b",(2*w + 12)*OK,[-2, 6, -2, 2, -4, -4, 2, -4, -4, 0, -8, 2, 2, 0, 0, 2, 4, -8, 10, -10, 4, 12, 8, 8, 14, -10, -8, -14]);
ECSearch("68.1-c",(2*w + 12)*OK,[-3, -1, 3, 4, 4, 8, -7, 6, -6, 4, -4, 0, -10, -7, -9, -1, 4, -2, -9, 9, 2, 16, -13, 7, 14, 2, -10, -5]);
ECSearch("68.1-d",(2*w + 12)*OK,[2, 5, 2, 3, -1, 2, 8, 0, -3, -10, 2, 0, 6, 6, 3, 2, -6, 0, 0, 3, 8, -13, 12, -3, 2, -1, -10, 17]);
ECSearch("68.1-e",(2*w + 12)*OK,[2, 6, -2, -2, -4, -4, 2, 4, 4, 0, -8, -2, -2, 0, 0, 2, -4, 8, -10, 10, 4, 12, -8, -8, 14, -10, -8, -14]);
ECSearch("68.1-f",(2*w + 12)*OK,[0, -1, -3, -4, 4, -4, 8, -3, 0, 7, -4, 9, -8, 4, 3, 5, 11, -10, 6, 3, -1, -8, -5, 8, -4, -7, 8, 10]);
ECSearch("68.1-g",(2*w + 12)*OK,[-2, 5, 2, -3, -1, 2, 8, 0, 3, -10, 2, 0, -6, -6, -3, 2, 6, 0, 0, -3, 8, -13, -12, 3, 2, -1, -10, 17]);
ECSearch("68.1-h",(2*w + 12)*OK,[3, -1, 3, -4, 4, 8, -7, -6, 6, 4, -4, 0, 10, 7, 9, -1, -4, 2, 9, -9, 2, 16, 13, -7, 14, 2, -10, -5]);
ECSearch("68.2-a",(2*w - 14)*OK,[0, -3, -1, 4, -4, 4, 8, 0, 3, -4, 7, 8, -9, -3, -4, 5, 10, -11, -3, -6, -8, -1, -8, 5, -7, -4, 8, -2]);
ECSearch("68.2-b",(2*w - 14)*OK,[-2, -2, 6, 2, -4, -4, 2, -4, -4, -8, 0, 2, 2, 0, 0, 2, -8, 4, -10, 10, 12, 4, 8, 8, -10, 14, -8, 10]);
ECSearch("68.2-c",(2*w - 14)*OK,[-3, 3, -1, 4, 8, 4, -7, -6, 6, -4, 4, -10, 0, -9, -7, -1, -2, 4, 9, -9, 16, 2, 7, -13, 2, 14, -10, 1]);
ECSearch("68.2-d",(2*w - 14)*OK,[2, 2, 5, 3, 2, -1, 8, -3, 0, 2, -10, 6, 0, 3, 6, 2, 0, -6, 3, 0, -13, 8, -3, 12, -1, 2, -10, 2]);
ECSearch("68.2-e",(2*w - 14)*OK,[2, -2, 6, -2, -4, -4, 2, 4, 4, -8, 0, -2, -2, 0, 0, 2, 8, -4, 10, -10, 12, 4, -8, -8, -10, 14, -8, 10]);
ECSearch("68.2-f",(2*w - 14)*OK,[0, -3, -1, -4, -4, 4, 8, 0, -3, -4, 7, -8, 9, 3, 4, 5, -10, 11, 3, 6, -8, -1, 8, -5, -7, -4, 8, -2]);
ECSearch("68.2-g",(2*w - 14)*OK,[-2, 2, 5, -3, 2, -1, 8, 3, 0, 2, -10, -6, 0, -3, -6, 2, 0, 6, -3, 0, -13, 8, 3, -12, -1, 2, -10, 2]);
ECSearch("68.2-h",(2*w - 14)*OK,[3, 3, -1, -4, 8, 4, -7, 6, -6, -4, 4, 10, 0, 9, 7, -1, 2, -4, -9, 9, 16, 2, -7, 13, 2, 14, -10, 1]);
