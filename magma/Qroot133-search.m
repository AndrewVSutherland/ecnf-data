print "Field 2.2.133.1";
Qx<x> := PolynomialRing(RationalField());
K<w> := NumberField(x^2 - x - 33);
OK := Integers(K);
Plist := [];
Append(~Plist,(-w + 6)*OK);
Append(~Plist,(-w - 5)*OK);
Append(~Plist,(2)*OK);
Append(~Plist,(-3*w + 19)*OK);
Append(~Plist,(-2*w - 11)*OK);
Append(~Plist,(2*w - 13)*OK);
Append(~Plist,(w + 4)*OK);
Append(~Plist,(w - 5)*OK);
Append(~Plist,(-5*w - 26)*OK);
Append(~Plist,(w + 7)*OK);
Append(~Plist,(w - 8)*OK);
Append(~Plist,(5)*OK);
Append(~Plist,(w + 1)*OK);
Append(~Plist,(w - 2)*OK);
Append(~Plist,(-6*w - 31)*OK);
Append(~Plist,(6*w - 37)*OK);
Append(~Plist,(3*w + 17)*OK);
Append(~Plist,(3*w - 20)*OK);
Append(~Plist,(-3*w + 17)*OK);
Append(~Plist,(3*w + 14)*OK);
Append(~Plist,(-3*w - 13)*OK);
Append(~Plist,(3*w - 16)*OK);
Append(~Plist,(-2*w + 7)*OK);
Append(~Plist,(2*w + 5)*OK);
Append(~Plist,(-8*w - 41)*OK);
Append(~Plist,(8*w - 49)*OK);
Append(~Plist,(-11*w + 70)*OK);
Append(~Plist,(-11*w - 59)*OK);
Append(~Plist,(w + 13)*OK);
Append(~Plist,(w - 14)*OK);
Append(~Plist,(-3*w - 20)*OK);
Append(~Plist,(3*w - 23)*OK);
Append(~Plist,(-3*w - 10)*OK);
Append(~Plist,(3*w - 13)*OK);
Append(~Plist,(-6*w + 35)*OK);
Append(~Plist,(6*w + 29)*OK);
Append(~Plist,(-5*w - 23)*OK);
Append(~Plist,(-5*w + 28)*OK);
Append(~Plist,(-2*w + 19)*OK);
Append(~Plist,(2*w + 17)*OK);
Append(~Plist,(-4*w + 29)*OK);
Append(~Plist,(-4*w - 25)*OK);
Append(~Plist,(-7*w + 41)*OK);
Append(~Plist,(7*w + 34)*OK);
Append(~Plist,(-3*w - 7)*OK);
Append(~Plist,(3*w - 10)*OK);
Append(~Plist,(-13*w - 70)*OK);
Append(~Plist,(13*w - 83)*OK);
Append(~Plist,(w + 16)*OK);
Append(~Plist,(w - 17)*OK);
Append(~Plist,(-11*w - 56)*OK);
Append(~Plist,(11*w - 67)*OK);
Append(~Plist,(-3*w + 8)*OK);
Append(~Plist,(3*w + 5)*OK);
Append(~Plist,(7*w - 47)*OK);
Append(~Plist,(-7*w - 40)*OK);
Append(~Plist,(-3*w - 4)*OK);
Append(~Plist,(3*w - 7)*OK);
Append(~Plist,(-9*w + 59)*OK);
Append(~Plist,(-9*w - 50)*OK);
Append(~Plist,(17)*OK);
Append(~Plist,(-3*w - 1)*OK);
Append(~Plist,(3*w - 4)*OK);
Append(~Plist,(-4*w - 13)*OK);
Append(~Plist,(4*w - 17)*OK);
Append(~Plist,(w + 19)*OK);
Append(~Plist,(w - 20)*OK);
Append(~Plist,(5*w + 32)*OK);
Append(~Plist,(5*w - 37)*OK);
Append(~Plist,(-21*w + 130)*OK);
Append(~Plist,(-21*w - 109)*OK);
Append(~Plist,(-20*w + 127)*OK);
Append(~Plist,(-20*w - 107)*OK);
Append(~Plist,(-10*w + 59)*OK);
Append(~Plist,(10*w + 49)*OK);
Append(~Plist,(-14*w - 71)*OK);
Append(~Plist,(14*w - 85)*OK);
Append(~Plist,(7*w - 38)*OK);
Append(~Plist,(7*w + 31)*OK);
Append(~Plist,(-2*w + 25)*OK);
Append(~Plist,(2*w + 23)*OK);
Append(~Plist,(-3*w - 26)*OK);
Append(~Plist,(3*w - 29)*OK);
Append(~Plist,(-18*w - 97)*OK);
Append(~Plist,(18*w - 115)*OK);
Append(~Plist,(-17*w + 109)*OK);
Append(~Plist,(17*w + 92)*OK);
Append(~Plist,(9*w - 61)*OK);
Append(~Plist,(-9*w - 52)*OK);
Append(~Plist,(-15*w - 76)*OK);
Append(~Plist,(15*w - 91)*OK);
Append(~Plist,(-6*w + 29)*OK);
Append(~Plist,(6*w + 23)*OK);
Append(~Plist,(-4*w - 1)*OK);
Append(~Plist,(4*w - 5)*OK);
Append(~Plist,(-12*w - 67)*OK);
Append(~Plist,(12*w - 79)*OK);
Append(~Plist,(-4*w - 31)*OK);
Append(~Plist,(4*w - 35)*OK);
Append(~Plist,(-12*w + 71)*OK);
effort := 400;
ECSearch := procedure(class_label, N, aplist);
print "Isogeny class ", class_label;
goodP := [P: P in Plist | Valuation(N,P) eq 0];
goodP := [goodP[i]: i in [1..#(aplist)]];
curves := EllipticCurveSearch(N,effort : Primes:=goodP, Traces:=aplist);
curves := [E: E in curves | &and[TraceOfFrobenius(E,goodP[i]) eq aplist[i] : i in [1..#(aplist)]]];
if #curves eq 0 then print "No curve found"; end if;
for E in curves do;
 a1,a2,a3,a4,a6:=Explode(aInvariants(E));
 printf "Curve [%o,%o,%o,%o,%o]\n",a1,a2,a3,a4,a6;
 end for;
end procedure;
SetColumns(0);

ECSearch("1.1-a",(1)*OK,[0, 0, 4, -3, 5, 5, 0, 0, 0, -4, -4, -9, 0, 0, 0, 0, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, -23, -23, -11, -11]);
ECSearch("3.1-a",(-w + 6)*OK,[2, 0, 1, 3, -3, 0, 6, 2, 0, 0, -3, 6, 0, 6, 12, 9, -3, 0, -6, -12, 6, -10, 8, -4, -4, -3, -9, -15, -9]);
ECSearch("3.1-b",(-w + 6)*OK,[-2, 0, 1, 3, -3, 0, -6, -2, 0, 0, -3, -6, 0, -6, -12, 9, -3, 0, 6, 12, -6, 10, -8, 4, 4, -3, -9, -15, -9]);
ECSearch("3.2-a",(-w - 5)*OK,[2, 0, 1, -3, 3, 6, 0, 2, 0, 0, -3, 0, 6, 12, 6, -3, 9, -6, 0, 6, -12, 8, -10, -4, -4, -9, -3, -9, -15]);
ECSearch("3.2-b",(-w - 5)*OK,[-2, 0, 1, -3, 3, -6, 0, -2, 0, 0, -3, 0, -6, -12, -6, -3, 9, 6, 0, -6, 12, -8, 10, 4, 4, -9, -3, -9, -15]);
ECSearch("4.1-a",(2)*OK,[3, -3, 3, 2, 2, 3, -3, 0, 5, 5, -6, -6, 6, -12, 12, -10, -10, -3, 3, 6, -6, -12, 12, 6, -6, 19, 19, -8, -8]);
ECSearch("4.1-b",(2)*OK,[-3, 3, 3, 2, 2, -3, 3, 0, 5, 5, -6, 6, -6, 12, -12, -10, -10, 3, -3, -6, 6, 12, -12, -6, 6, 19, 19, -8, -8]);
ECSearch("9.1-a",(3)*OK,[1, -4, -6, -6, -4, -4, -8, 6, 6, -2, -4, -4, 6, 6, 4, 4, -12, -12, -6, -6, -8, -8, 4, 4, 6, 6, -18, -18]);
ECSearch("9.1-b",(3)*OK,[1, -4, -6, -6, 4, 4, 8, 6, 6, -2, 4, 4, -6, -6, 4, 4, 12, 12, 6, 6, 8, 8, -4, -4, 6, 6, -18, -18]);
ECSearch("9.2-a",(-w + 7)*OK,[2, 0, 1, -3, -3, -6, 0, 2, 0, 0, 3, 0, -6, 12, -6, 3, -9, -6, 0, 6, 12, 8, -10, -4, -4, 9, -3, 9, -15]);
ECSearch("9.2-b",(-w + 7)*OK,[0, -4, -3, 5, -5, 0, 0, 0, 4, -4, 9, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 23, -23, 11, -11]);
ECSearch("9.2-c",(-w + 7)*OK,[-2, 0, 1, -3, -3, 6, 0, -2, 0, 0, 3, 0, 6, -12, 6, 3, -9, 6, 0, -6, -12, -8, 10, 4, 4, 9, -3, 9, -15]);
ECSearch("9.3-a",(w + 6)*OK,[2, 0, 1, -3, -3, 0, -6, 2, 0, 0, 3, -6, 0, -6, 12, -9, 3, 0, -6, 12, 6, -10, 8, -4, -4, -3, 9, -15, 9]);
ECSearch("9.3-b",(w + 6)*OK,[0, -4, -3, -5, 5, 0, 0, 0, -4, 4, 9, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, -23, 23, -11, 11]);
ECSearch("9.3-c",(w + 6)*OK,[-2, 0, 1, -3, -3, 0, 6, -2, 0, 0, 3, 6, 0, 6, -12, -9, 3, 0, 6, -12, -6, 10, -8, 4, 4, -3, 9, -15, 9]);
ECSearch("12.1-a",(-2*w + 12)*OK,[1, 3, -3, 2, 6, -4, 5, 9, -6, -4, 8, 3, -2, -2, 4, -1, 0, -5, 15, 10, 2, 12, 16, -4, -22, -12, 0, 10]);
ECSearch("12.1-b",(-2*w + 12)*OK,[-1, 3, -3, 2, -6, 4, -5, 9, -6, -4, -8, -3, 2, 2, 4, -1, 0, 5, -15, -10, -2, -12, -16, 4, -22, -12, 0, 10]);
ECSearch("12.2-a",(-2*w - 10)*OK,[1, 3, 2, -3, -4, 6, 5, -6, 9, -4, 3, 8, -2, -2, -1, 4, -5, 0, 10, 15, 12, 2, -4, 16, -12, -22, 10, 0]);
ECSearch("12.2-b",(-2*w - 10)*OK,[-1, 3, 2, -3, 4, -6, -5, -6, 9, -4, -3, -8, 2, 2, -1, 4, 5, 0, -10, -15, -12, -2, 4, -16, -12, -22, 10, 0]);
ECSearch("19.1-a",(-5*w - 26)*OK,[2, 2, -4, -1, 3, 3, 4, 4, 0, 0, -1, 4, 4, 6, 6, -1, -1, 6, 6, -12, -12, -8, -8, -14, -14, -3, -3, 21, 21]);
ECSearch("19.1-b",(-5*w - 26)*OK,[-2, -2, -4, -1, 3, 3, -4, -4, 0, 0, -1, -4, -4, -6, -6, -1, -1, -6, -6, 12, 12, 8, 8, 14, 14, -3, -3, 21, 21]);
ECSearch("21.1-a",(-w - 3)*OK,[1, 3, 3, -3, -6, -6, -2, -6, 0, -3, -9, 3, 3, 9, 0, 9, 0, -6, -6, -12, 10, -17, -14, 4, 21, -18, 12, 18]);
ECSearch("21.1-b",(-w - 3)*OK,[-1, 3, 3, -3, 6, 6, 2, -6, 0, -3, 9, -3, -3, -9, 0, 9, 0, 6, 6, 12, -10, 17, 14, -4, 21, -18, 12, 18]);
ECSearch("21.2-a",(-w + 4)*OK,[1, 3, -3, 3, -6, -6, -2, 0, -6, -3, 3, -9, 9, 3, 9, 0, -6, 0, -12, -6, -17, 10, 4, -14, -18, 21, 18, 12]);
ECSearch("21.2-b",(-w + 4)*OK,[-1, 3, -3, 3, 6, 6, 2, 0, -6, -3, -3, 9, -9, -3, 9, 0, 6, 0, 12, 6, 17, -10, -4, 14, -18, 21, 18, 12]);
ECSearch("27.1-a",(-3*w + 18)*OK,[-1, -4, 6, -6, -4, -4, 8, 6, -6, 2, -4, -4, 6, -6, -4, -4, -12, 12, -6, 6, 8, 8, -4, -4, 6, -6, -18, 18]);
ECSearch("27.1-b",(-3*w + 18)*OK,[0, 1, 3, 3, -6, 0, 2, 0, 0, 3, 0, -6, -12, 6, 3, -9, 6, 0, -6, -12, 8, -10, -4, -4, -9, 3, -9, 15]);
ECSearch("27.1-c",(-3*w + 18)*OK,[0, 1, 3, 3, 6, 0, -2, 0, 0, 3, 0, 6, 12, -6, 3, -9, -6, 0, 6, 12, -8, 10, 4, 4, -9, 3, -9, 15]);
ECSearch("27.1-d",(-3*w + 18)*OK,[-1, -4, 6, -6, 4, 4, -8, 6, -6, 2, 4, 4, -6, 6, -4, -4, 12, -12, 6, -6, -8, -8, 4, 4, 6, -6, -18, 18]);
ECSearch("27.3-a",(-w - 2)*OK,[2, 3, 1, -3, -6, -3, -6, 2, 0, 9, -6, -9, 3, -6, -3, 0, 6, 12, -9, 6, 15, -10, -10, -4, -4, 0, 6, 0, 3]);
ECSearch("27.3-b",(-w - 2)*OK,[-2, 3, 1, -3, -6, 3, 6, -2, 0, 9, -6, 9, -3, 6, 3, 0, 6, -12, 9, -6, -15, 10, 10, 4, 4, 0, 6, 0, 3]);
ECSearch("27.3-c",(-w - 2)*OK,[2, -3, 1, -3, 6, 3, 6, 2, 0, 9, 6, 9, -3, -6, 3, 0, -6, 12, 9, 6, -15, -10, -10, -4, -4, 0, 6, 0, 3]);
ECSearch("27.3-d",(-w - 2)*OK,[-2, -3, 1, -3, 6, -3, -6, -2, 0, 9, 6, -9, 3, 6, -3, 0, -6, -12, -9, -6, 15, 10, 10, 4, 4, 0, 6, 0, 3]);
ECSearch("27.2-a",(-3*w - 15)*OK,[-1, -4, -6, 6, -4, -4, 8, -6, 6, 2, -4, -4, -6, 6, -4, -4, 12, -12, 6, -6, 8, 8, -4, -4, -6, 6, 18, -18]);
ECSearch("27.2-b",(-3*w - 15)*OK,[0, 1, 3, 3, 0, -6, 2, 0, 0, 3, -6, 0, 6, -12, -9, 3, 0, 6, -12, -6, -10, 8, -4, -4, 3, -9, 15, -9]);
ECSearch("27.2-c",(-3*w - 15)*OK,[0, 1, 3, 3, 0, 6, -2, 0, 0, 3, 6, 0, -6, 12, -9, 3, 0, -6, 12, 6, 10, -8, 4, 4, 3, -9, 15, -9]);
ECSearch("27.2-d",(-3*w - 15)*OK,[-1, -4, -6, 6, 4, 4, -8, -6, 6, 2, 4, 4, 6, -6, -4, -4, -12, 12, -6, 6, -8, -8, 4, 4, -6, 6, 18, -18]);
ECSearch("27.4-a",(-w + 3)*OK,[2, 3, 1, -6, -3, -6, -3, 2, 9, 0, -6, 3, -9, -3, -6, 6, 0, -9, 12, 15, 6, -10, -10, -4, -4, 6, 0, 3, 0]);
ECSearch("27.4-b",(-w + 3)*OK,[-2, 3, 1, -6, -3, 6, 3, -2, 9, 0, -6, -3, 9, 3, 6, 6, 0, 9, -12, -15, -6, 10, 10, 4, 4, 6, 0, 3, 0]);
ECSearch("27.4-c",(-w + 3)*OK,[2, -3, 1, 6, -3, 6, 3, 2, 9, 0, 6, -3, 9, 3, -6, -6, 0, 9, 12, -15, 6, -10, -10, -4, -4, 6, 0, 3, 0]);
ECSearch("27.4-d",(-w + 3)*OK,[-2, -3, 1, 6, -3, -6, -3, -2, 9, 0, 6, 3, -9, -3, 6, -6, 0, -9, -12, 15, -6, 10, 10, 4, 4, 6, 0, 3, 0]);
ECSearch("28.1-a",(-6*w + 38)*OK,[-2, -2, 0, 0, -4, -4, 2, 0, 0, -10, -4, -4, 6, 6, 8, 8, -6, -6, -6, -6, -10, -10, -4, -4, 18, 18, -18, -18]);
ECSearch("28.1-b",(-6*w + 38)*OK,[2, 2, 0, 0, 4, 4, -2, 0, 0, -10, 4, 4, -6, -6, 8, 8, 6, 6, 6, 6, 10, 10, 4, 4, 18, 18, -18, -18]);
ECSearch("36.1-a",(6)*OK,[0, 0, 0, 2, -6, -4, -8, 0, -6, 4, -4, -2, -2, 4, -12, 4, -12, 6, 6, 2, 18, 12, 4, -6, 10, 2, -22]);
ECSearch("36.1-b",(6)*OK,[-4, 2, 2, 4, -4, 0, -2, -2, -6, -8, 8, -2, 2, 4, 4, -4, 4, -6, 6, 12, -12, -20, 20, -2, -2, 6, 6]);
ECSearch("36.1-c",(6)*OK,[0, 0, 0, 6, -2, 4, 0, -8, -6, 4, -4, 2, 2, -12, 4, 12, -4, -6, -6, -18, -2, -4, -12, 10, -6, -22, 2]);
ECSearch("36.1-d",(6)*OK,[0, 0, -4, 0, -4, -4, 6, -6, 2, 2, 6, 10, -2, 4, -4, 12, 4, 6, -14, 2, 18, -14, -10, 14, 6, -12, 4]);
ECSearch("36.1-e",(6)*OK,[0, -4, 0, 4, 0, 4, -6, 6, 2, -6, -2, 2, -10, -4, 4, -4, -12, 14, -6, -18, -2, 10, 14, 6, 14, 4, -12]);
ECSearch("36.1-f",(6)*OK,[0, -4, 0, -4, 0, -4, -6, 6, 2, 6, 2, -2, 10, -4, 4, 4, 12, -14, 6, 18, 2, -10, -14, 6, 14, 4, -12]);
ECSearch("36.1-g",(6)*OK,[0, 0, -4, 0, 4, 4, 6, -6, 2, -2, -6, -10, 2, 4, -4, -12, -4, -6, 14, -2, -18, 14, 10, 14, 6, -12, 4]);
ECSearch("36.1-h",(6)*OK,[0, 0, 0, -6, 2, -4, 0, -8, -6, -4, 4, -2, -2, -12, 4, -12, 4, 6, 6, 18, 2, 4, 12, 10, -6, -22, 2]);
ECSearch("36.1-i",(6)*OK,[-4, 2, 2, -4, 4, 0, -2, -2, -6, 8, -8, 2, -2, 4, 4, 4, -4, 6, -6, -12, 12, 20, -20, -2, -2, 6, 6]);
ECSearch("36.1-j",(6)*OK,[0, 0, 0, -2, 6, 4, -8, 0, -6, -4, 4, 2, 2, 4, -12, -4, 12, -6, -6, -2, -18, -12, -4, -6, 10, 2, -22]);
ECSearch("36.2-a",(-2*w + 14)*OK,[-1, 3, 2, 3, -4, 6, -5, 6, 9, 4, 3, 8, 2, -2, 1, -4, 5, 0, -10, 15, -12, -2, 4, -16, 12, -22, -10, 0]);
ECSearch("36.2-b",(-2*w + 14)*OK,[1, 3, 2, 3, 4, -6, 5, 6, 9, 4, -3, -8, -2, 2, 1, -4, -5, 0, 10, -15, 12, 2, -4, 16, 12, -22, -10, 0]);
ECSearch("36.2-c",(-2*w + 14)*OK,[-3, 3, 2, -2, 3, -3, 0, -5, 5, 6, -6, 6, 12, 12, 10, 10, 3, 3, -6, -6, 12, -12, -6, 6, -19, 19, 8, -8]);
ECSearch("36.2-d",(-2*w + 14)*OK,[-3, -3, 2, 5, 0, -6, -3, 8, -1, -6, -3, 0, 0, 6, -1, 8, 15, -6, -6, -9, -12, 12, -6, 18, -8, -2, 10, -2]);
ECSearch("36.2-e",(-2*w + 14)*OK,[3, 3, 2, -2, -3, 3, 0, -5, 5, 6, 6, -6, -12, -12, 10, 10, -3, -3, 6, 6, -12, 12, 6, -6, -19, 19, 8, -8]);
ECSearch("36.2-f",(-2*w + 14)*OK,[3, -3, 2, 5, 0, 6, 3, 8, -1, -6, 3, 0, 0, -6, -1, 8, -15, 6, 6, 9, 12, -12, 6, -18, -8, -2, 10, -2]);
ECSearch("36.2-g",(-2*w + 14)*OK,[-3, -3, 2, -5, 0, 6, -3, -8, -1, 6, 3, 0, 0, -6, 1, -8, 15, 6, -6, 9, -12, 12, -6, 18, 8, -2, -10, -2]);
ECSearch("36.2-h",(-2*w + 14)*OK,[3, -3, 2, -5, 0, -6, 3, -8, -1, 6, -3, 0, 0, 6, 1, -8, -15, -6, 6, -9, 12, -12, 6, -18, 8, -2, -10, -2]);
ECSearch("36.3-a",(2*w + 12)*OK,[-1, 3, 3, 2, 6, -4, -5, 9, 6, 4, 8, 3, -2, 2, -4, 1, 0, 5, 15, -10, -2, -12, -16, 4, -22, 12, 0, -10]);
ECSearch("36.3-b",(2*w + 12)*OK,[1, 3, 3, 2, -6, 4, 5, 9, 6, 4, -8, -3, 2, -2, -4, 1, 0, -5, -15, 10, 2, 12, 16, -4, -22, 12, 0, -10]);
ECSearch("36.3-c",(2*w + 12)*OK,[-3, 3, -2, 2, -3, 3, 0, 5, -5, 6, 6, -6, 12, 12, 10, 10, 3, 3, -6, -6, -12, 12, 6, -6, 19, -19, -8, 8]);
ECSearch("36.3-d",(2*w + 12)*OK,[-3, -3, 5, 2, -6, 0, -3, -1, 8, -6, 0, -3, 6, 0, 8, -1, -6, 15, -9, -6, 12, -12, 18, -6, -2, -8, -2, 10]);
ECSearch("36.3-e",(2*w + 12)*OK,[3, 3, -2, 2, 3, -3, 0, 5, -5, 6, -6, 6, -12, -12, 10, 10, -3, -3, 6, 6, 12, -12, -6, 6, 19, -19, -8, 8]);
ECSearch("36.3-f",(2*w + 12)*OK,[3, -3, 5, 2, 6, 0, 3, -1, 8, -6, 0, 3, -6, 0, 8, -1, 6, -15, 9, 6, -12, 12, -18, 6, -2, -8, -2, 10]);
ECSearch("36.3-g",(2*w + 12)*OK,[-3, -3, -5, 2, 6, 0, -3, -1, -8, 6, 0, 3, -6, 0, -8, 1, 6, 15, 9, -6, 12, -12, 18, -6, -2, 8, -2, -10]);
ECSearch("36.3-h",(2*w + 12)*OK,[3, -3, -5, 2, -6, 0, 3, -1, -8, 6, 0, -3, 6, 0, -8, 1, -6, -15, -9, 6, -12, 12, -18, 6, -2, 8, -2, -10]);
ECSearch("49.1-a",(7)*OK,[0, 2, -1, -3, -1, 6, 4, 6, -3, 7, -3, 2, -8, -12, 4, -13, 9, -10, -10, 6, 0, -14, -6, 4, 8, 1, -15, -5, -5]);
ECSearch("49.1-b",(7)*OK,[2, 0, -1, -1, -3, 4, 6, 6, 7, -3, -3, -8, 2, 4, -12, 9, -13, -10, -10, 0, 6, -6, -14, 8, 4, -15, 1, -5, -5]);
ECSearch("49.1-c",(7)*OK,[0, 0, -3, 4, 4, 0, 0, 0, 8, 8, -10, 0, 0, 0, 0, -12, -12, 0, 0, 0, 0, 0, 0, 0, 0, -10, -10, 22, 22]);
ECSearch("49.1-d",(7)*OK,[-2, 2, 0, -5, -5, 2, -2, 0, -7, -7, -6, -2, 2, 0, 0, -4, -4, 14, -14, -16, 16, 14, -14, -10, 10, -3, -3, -18, -18]);
ECSearch("49.1-e",(7)*OK,[-2, 0, -1, -1, -3, -4, -6, -6, 7, -3, -3, 8, -2, -4, 12, 9, -13, 10, 10, 0, -6, 6, 14, -8, -4, -15, 1, -5, -5]);
ECSearch("49.1-f",(7)*OK,[2, -2, 0, -5, -5, -2, 2, 0, -7, -7, -6, 2, -2, 0, 0, -4, -4, -14, 14, 16, -16, -14, 14, 10, -10, -3, -3, -18, -18]);
ECSearch("49.1-g",(7)*OK,[0, -2, -1, -3, -1, -6, -4, -6, -3, 7, -3, -2, 8, 12, -4, -13, 9, 10, 10, -6, 0, 14, 6, -4, -8, 1, -15, -5, -5]);
ECSearch("52.1-a",(2*w + 8)*OK,[3, 2, -2, -2, -2, -2, 2, 1, -2, -4, -2, 4, 0, -7, -9, -10, 9, -7, -11, 0, -9, 4, -8, 13, -22, 15, 21, -8]);
ECSearch("52.1-b",(2*w + 8)*OK,[1, 2, -2, 0, 4, -4, 0, -1, 4, 2, -2, -2, 10, 9, 1, 8, 3, 3, 1, 12, 19, 6, -14, 15, -18, 3, 5, 4]);
ECSearch("52.1-c",(2*w + 8)*OK,[2, -1, -1, 0, 6, -4, 7, 6, -9, -8, -4, -4, -3, 0, 1, 10, 6, 12, 0, -6, -8, -17, 4, 4, 6, 3, 6, -6]);
ECSearch("52.1-d",(2*w + 8)*OK,[0, 1, 3, -2, -4, -2, 5, 6, 7, -4, -2, 4, -11, 8, -5, 12, 0, 10, 12, -6, -8, 11, -16, -16, -12, 3, -12, 6]);
ECSearch("52.1-e",(2*w + 8)*OK,[0, -1, 3, -2, -4, 2, -5, 6, 7, -4, 2, -4, 11, -8, -5, 12, 0, -10, -12, 6, 8, -11, 16, 16, -12, 3, -12, 6]);
ECSearch("52.1-f",(2*w + 8)*OK,[-2, 1, -1, 0, 6, 4, -7, 6, -9, -8, 4, 4, 3, 0, 1, 10, -6, -12, 0, 6, 8, 17, -4, -4, 6, 3, 6, -6]);
ECSearch("52.1-g",(2*w + 8)*OK,[-1, -2, -2, 0, 4, 4, 0, -1, 4, 2, 2, 2, -10, -9, 1, 8, -3, -3, -1, -12, -19, -6, 14, -15, -18, 3, 5, 4]);
ECSearch("52.1-h",(2*w + 8)*OK,[-3, -2, -2, -2, -2, 2, -2, 1, -2, -4, 2, -4, 0, 7, -9, -10, -9, 7, 11, 0, 9, -4, 8, -13, -22, 15, 21, -8]);
ECSearch("52.2-a",(2*w - 10)*OK,[2, 3, -2, -2, -2, -2, 2, -2, 1, -4, 4, -2, -7, 0, -10, -9, -7, 9, 0, -11, 4, -9, 13, -8, 15, -22, -8, 21]);
ECSearch("52.2-b",(2*w - 10)*OK,[2, 1, -2, 4, 0, -4, 0, 4, -1, 2, -2, -2, 9, 10, 8, 1, 3, 3, 12, 1, 6, 19, 15, -14, 3, -18, 4, 5]);
ECSearch("52.2-c",(2*w - 10)*OK,[-1, 2, -1, 6, 0, -4, 7, -9, 6, -8, -4, -4, 0, -3, 10, 1, 12, 6, -6, 0, -17, -8, 4, 4, 3, 6, -6, 6]);
ECSearch("52.2-d",(2*w - 10)*OK,[1, 0, 3, -4, -2, -2, 5, 7, 6, -4, 4, -2, 8, -11, 12, -5, 10, 0, -6, 12, 11, -8, -16, -16, 3, -12, 6, -12]);
ECSearch("52.2-e",(2*w - 10)*OK,[-1, 0, 3, -4, -2, 2, -5, 7, 6, -4, -4, 2, -8, 11, 12, -5, -10, 0, 6, -12, -11, 8, 16, 16, 3, -12, 6, -12]);
ECSearch("52.2-f",(2*w - 10)*OK,[1, -2, -1, 6, 0, 4, -7, -9, 6, -8, 4, 4, 0, 3, 10, 1, -12, -6, 6, 0, 17, 8, -4, -4, 3, 6, -6, 6]);
ECSearch("52.2-g",(2*w - 10)*OK,[-2, -1, -2, 4, 0, 4, 0, 4, -1, 2, 2, 2, -9, -10, 8, 1, -3, -3, -12, -1, -6, -19, -15, 14, 3, -18, 4, 5]);
ECSearch("52.2-h",(2*w - 10)*OK,[-2, -3, -2, -2, -2, 2, -2, -2, 1, -4, -4, 2, 7, 0, -10, -9, 7, -9, 0, 11, -4, 9, -13, 8, 15, -22, -8, 21]);
