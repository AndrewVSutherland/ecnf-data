print "Field 2.2.233.1";
Qx<x> := PolynomialRing(RationalField());
K<w> := NumberField(x^2 - x - 58);
OK := Integers(K);
Plist := [];
Append(~Plist,(-w + 8)*OK);
Append(~Plist,(-w - 7)*OK);
Append(~Plist,(-8*w - 57)*OK);
Append(~Plist,(-8*w + 65)*OK);
Append(~Plist,(3)*OK);
Append(~Plist,(38*w + 271)*OK);
Append(~Plist,(38*w - 309)*OK);
Append(~Plist,(-6*w - 43)*OK);
Append(~Plist,(6*w - 49)*OK);
Append(~Plist,(2*w - 17)*OK);
Append(~Plist,(-2*w - 15)*OK);
Append(~Plist,(5)*OK);
Append(~Plist,(-4*w - 29)*OK);
Append(~Plist,(4*w - 33)*OK);
Append(~Plist,(-22*w + 179)*OK);
Append(~Plist,(-22*w - 157)*OK);
Append(~Plist,(-2*w + 15)*OK);
Append(~Plist,(2*w + 13)*OK);
Append(~Plist,(98*w + 699)*OK);
Append(~Plist,(98*w - 797)*OK);
Append(~Plist,(-2*w + 13)*OK);
Append(~Plist,(2*w + 11)*OK);
Append(~Plist,(-52*w + 423)*OK);
Append(~Plist,(-52*w - 371)*OK);
Append(~Plist,(-12*w - 85)*OK);
Append(~Plist,(12*w - 97)*OK);
Append(~Plist,(-20*w + 163)*OK);
Append(~Plist,(-20*w - 143)*OK);
Append(~Plist,(-54*w + 439)*OK);
Append(~Plist,(54*w + 385)*OK);
Append(~Plist,(11)*OK);
Append(~Plist,(-84*w - 599)*OK);
Append(~Plist,(84*w - 683)*OK);
Append(~Plist,(4*w + 31)*OK);
Append(~Plist,(4*w - 35)*OK);
Append(~Plist,(-2*w + 21)*OK);
Append(~Plist,(2*w + 19)*OK);
Append(~Plist,(26*w + 185)*OK);
Append(~Plist,(26*w - 211)*OK);
Append(~Plist,(-14*w - 99)*OK);
Append(~Plist,(14*w - 113)*OK);
Append(~Plist,(-2*w + 7)*OK);
Append(~Plist,(2*w + 5)*OK);
Append(~Plist,(-2*w + 3)*OK);
Append(~Plist,(-2*w - 1)*OK);
Append(~Plist,(-2*w + 1)*OK);
Append(~Plist,(-8*w + 67)*OK);
Append(~Plist,(-8*w - 59)*OK);
Append(~Plist,(-2*w + 23)*OK);
Append(~Plist,(2*w + 21)*OK);
Append(~Plist,(34*w - 277)*OK);
Append(~Plist,(34*w + 243)*OK);
Append(~Plist,(70*w - 569)*OK);
Append(~Plist,(70*w + 499)*OK);
Append(~Plist,(-16*w - 113)*OK);
Append(~Plist,(16*w - 129)*OK);
Append(~Plist,(158*w + 1127)*OK);
Append(~Plist,(158*w - 1285)*OK);
Append(~Plist,(17)*OK);
Append(~Plist,(-4*w + 37)*OK);
Append(~Plist,(4*w + 33)*OK);
Append(~Plist,(-4*w + 27)*OK);
Append(~Plist,(4*w + 23)*OK);
Append(~Plist,(-100*w + 813)*OK);
Append(~Plist,(100*w + 713)*OK);
Append(~Plist,(-112*w + 911)*OK);
Append(~Plist,(-112*w - 799)*OK);
Append(~Plist,(-10*w + 79)*OK);
Append(~Plist,(10*w + 69)*OK);
Append(~Plist,(-42*w - 299)*OK);
Append(~Plist,(-42*w + 341)*OK);
Append(~Plist,(160*w + 1141)*OK);
Append(~Plist,(160*w - 1301)*OK);
Append(~Plist,(-264*w + 2147)*OK);
Append(~Plist,(264*w + 1883)*OK);
Append(~Plist,(-2*w + 27)*OK);
Append(~Plist,(2*w + 25)*OK);
Append(~Plist,(96*w - 781)*OK);
Append(~Plist,(-96*w - 685)*OK);
Append(~Plist,(-12*w + 95)*OK);
Append(~Plist,(12*w + 83)*OK);
Append(~Plist,(8*w - 61)*OK);
Append(~Plist,(8*w + 53)*OK);
Append(~Plist,(-4*w + 23)*OK);
Append(~Plist,(4*w + 19)*OK);
Append(~Plist,(-20*w - 141)*OK);
Append(~Plist,(20*w - 161)*OK);
Append(~Plist,(-142*w + 1155)*OK);
Append(~Plist,(-142*w - 1013)*OK);
Append(~Plist,(80*w + 571)*OK);
Append(~Plist,(-80*w + 651)*OK);
Append(~Plist,(44*w + 313)*OK);
Append(~Plist,(44*w - 357)*OK);
Append(~Plist,(-28*w - 201)*OK);
Append(~Plist,(28*w - 229)*OK);
Append(~Plist,(-4*w - 17)*OK);
Append(~Plist,(4*w - 21)*OK);
Append(~Plist,(-116*w - 827)*OK);
Append(~Plist,(-116*w + 943)*OK);
Append(~Plist,(32*w + 227)*OK);
effort := 400;
ECSearch := procedure(class_label, N, aplist);
print "Isogeny class ", class_label;
goodP := [P: P in Plist | Valuation(N,P) eq 0];
goodP := [goodP[i]: i in [1..#(aplist)]];
curves := EllipticCurveSearch(N,effort : Primes:=goodP, Traces:=aplist);
curves := [E: E in curves | &and[TraceOfFrobenius(E,goodP[i]) eq aplist[i] : i in [1..#(aplist)]]];
if #curves eq 0 then print "No curve found"; end if;
for E in curves do;
 a1,a2,a3,a4,a6:=Explode(aInvariants(E));
 printf "Curve [%o,%o,%o,%o,%o]\n",a1,a2,a3,a4,a6;
 end for;
end procedure;
SetColumns(0);

ECSearch("2.1-a",(-w + 8)*OK,[2, 2, -3, -2, 2, -3, 6, 1, 3, -2, 3, 3, 3, 10, 5, -2, 8, -8, 7, 10, 5, 12, 2, 6, 11, -18, 12, -2, -12]);
ECSearch("2.2-a",(-w - 7)*OK,[2, -3, 2, -2, -3, 2, 1, 6, -2, 3, 3, 3, 3, 5, 10, 8, -2, 7, -8, 5, 10, 2, 12, 11, 6, 12, -18, -12, -2]);
ECSearch("4.1-a",(2)*OK,[-4, -4, 6, 2, 2, -6, -6, 4, 4, -4, 6, 6, 0, 0, 6, 6, 12, 12, -8, -8, -18, -18, -6, -6, -2, -2, 8, 8]);
ECSearch("4.1-b",(2)*OK,[-4, -4, -1, -5, -5, 8, 8, 4, 4, 10, -1, -1, 0, 0, -1, -1, 12, 12, -1, -1, 3, 3, 8, 8, -9, -9, 15, 15]);
ECSearch("8.1-a",(-2*w + 16)*OK,[5, -4, 2, 7, -2, 5, -4, -2, -5, 1, -1, 5, 3, -6, 2, -4, 9, 6, -13, 14, 12, 12, -13, 8, -12, 12, -6, 18]);
ECSearch("8.1-b",(-2*w + 16)*OK,[2, -2, -1, -1, -3, -2, 0, -6, 4, 2, 9, -1, 8, -2, -7, -1, 14, 8, -3, 13, -3, -13, 12, -8, 7, -19, -15, -11]);
ECSearch("8.1-c",(-2*w + 16)*OK,[2, 2, -3, -1, 5, 6, 0, -2, 4, 2, 9, -9, 0, -6, 3, -3, 6, 0, 13, 13, 15, 9, -12, 0, 13, 7, -13, -1]);
ECSearch("8.1-d",(-2*w + 16)*OK,[2, 2, 2, 4, -5, -4, 5, -2, 4, -8, -1, -4, 0, 9, 8, 2, -9, 15, 8, 8, 0, 9, 8, 20, 3, -18, -3, -6]);
ECSearch("8.1-e",(-2*w + 16)*OK,[-5, 2, 2, -3, 2, 3, -2, -2, -3, -1, -1, 3, 7, 2, 8, 2, 5, 8, 1, -6, 14, -12, 1, 6, -4, 10, 4, -6]);
ECSearch("8.2-a",(-2*w - 14)*OK,[-4, 5, 2, -2, 7, -4, 5, -5, -2, 1, 5, -1, -6, 3, -4, 2, 6, 9, 14, -13, 12, 12, 8, -13, 12, -12, 18, -6]);
ECSearch("8.2-b",(-2*w - 14)*OK,[-2, 2, -1, -3, -1, 0, -2, 4, -6, 2, -1, 9, -2, 8, -1, -7, 8, 14, 13, -3, -13, -3, -8, 12, -19, 7, -11, -15]);
ECSearch("8.2-c",(-2*w - 14)*OK,[2, 2, -3, 5, -1, 0, 6, 4, -2, 2, -9, 9, -6, 0, -3, 3, 0, 6, 13, 13, 9, 15, 0, -12, 7, 13, -1, -13]);
ECSearch("8.2-d",(-2*w - 14)*OK,[2, 2, 2, -5, 4, 5, -4, 4, -2, -8, -4, -1, 9, 0, 2, 8, 15, -9, 8, 8, 9, 0, 20, 8, -18, 3, -6, -3]);
ECSearch("8.2-e",(-2*w - 14)*OK,[2, -5, 2, 2, -3, -2, 3, -3, -2, -1, 3, -1, 2, 7, 2, 8, 8, 5, -6, 1, -12, 14, 6, 1, 10, -4, -6, 4]);
ECSearch("9.1-a",(3)*OK,[2, -1, -1, 2, 7, -2, -1, 8, 8, -1, -3, 9, 3, -7, 8, -2, 4, 5, -4, -15, -6, 20, 2, -1, 2, -4, -4, 14, -16]);
ECSearch("9.1-b",(3)*OK,[-1, 2, 2, -1, -2, 7, 8, -1, -1, 8, -3, 3, 9, 8, -7, 4, -2, -4, 5, -6, -15, 2, 20, 2, -1, -4, -4, -16, 14]);
ECSearch("13.1-a",(38*w + 271)*OK,[1, 2, 4, -1, -4, 1, 6, -1, 3, -8, 7, -9, -3, 2, -3, 0, -8, 0, -15, -2, 9, 10, -6, 0, 1, 6, -16, 6, 0]);
ECSearch("13.1-b",(38*w + 271)*OK,[-1, 0, -4, -1, -2, 1, 0, -5, 7, 0, -1, -1, 5, -4, -3, 6, -8, -6, 1, -6, 5, 4, -4, -6, 17, -6, 10, 4, -12]);
ECSearch("13.2-a",(38*w - 309)*OK,[2, 1, -1, 4, -4, 1, -1, 6, -8, 3, 7, -3, -9, -3, 2, -8, 0, -15, 0, 9, -2, -6, 10, 1, 0, -16, 6, 0, 6]);
ECSearch("13.2-b",(38*w - 309)*OK,[0, -1, -1, -4, -2, 1, -5, 0, 0, 7, -1, 5, -1, -3, -4, -8, 6, 1, -6, 5, -6, -4, 4, 17, -6, 10, -6, -12, 4]);
ECSearch("14.1-a",(23*w - 187)*OK,[0, 3, -2, -6, -3, 7, 4, -7, 8, 2, -10, -5, 2, -2, -1, 5, -6, -5, 6, 10, 13, -2, 7, 12, -4, 16, -5, 6]);
ECSearch("14.1-b",(23*w - 187)*OK,[0, -1, -2, 2, 5, -1, -4, -3, 0, 2, 6, 3, 2, -10, 11, -7, -6, -9, 6, 18, -15, 6, -9, -12, -4, 8, -9, 6]);
ECSearch("14.2-a",(-w + 9)*OK,[1, 2, 2, -2, 2, -2, -4, 8, -6, 8, 10, 2, 8, -6, 2, -4, 0, -6, 0, 6, -2, 4, -8, -12, 6, -10, 4, 12]);
ECSearch("14.2-b",(-w + 9)*OK,[1, -2, 5, 5, -5, -6, 2, 8, 4, 2, -3, 9, -6, 8, -9, -1, -6, -6, 1, 15, -3, 15, -14, 0, -7, 5, 1, 9]);
ECSearch("14.2-c",(-w + 9)*OK,[-1, 3, 1, -6, -4, 7, -3, -5, 0, 3, 3, 0, -7, 4, 5, -2, -14, 10, 2, 10, -10, 12, 8, -15, 15, -18, 0, -2]);
ECSearch("14.2-d",(-w + 9)*OK,[-2, -1, 2, 1, 2, 7, 8, -4, -3, 5, 7, -1, -7, 6, -4, -4, -3, -12, 15, 18, -2, -8, 7, 18, 18, 2, 10, -6]);
ECSearch("14.4-a",(23*w + 164)*OK,[0, 3, -2, -3, -6, 4, 7, 8, -7, 2, -5, -10, -2, 2, 5, -1, -5, -6, 10, 6, -2, 13, 12, 7, 16, -4, 6, -5]);
ECSearch("14.4-b",(23*w + 164)*OK,[0, -1, -2, 5, 2, -4, -1, 0, -3, 2, 3, 6, -10, 2, -7, 11, -9, -6, 18, 6, 6, -15, -12, -9, 8, -4, 6, -9]);
ECSearch("14.3-a",(w + 8)*OK,[1, 2, 2, 2, -2, -4, -2, -6, 8, 8, 2, 10, -6, 8, -4, 2, -6, 0, 6, 0, 4, -2, -12, -8, -10, 6, 12, 4]);
ECSearch("14.3-b",(w + 8)*OK,[1, -2, 5, -5, 5, 2, -6, 4, 8, 2, 9, -3, 8, -6, -1, -9, -6, -6, 15, 1, 15, -3, 0, -14, 5, -7, 9, 1]);
ECSearch("14.3-c",(w + 8)*OK,[-1, 3, 1, -4, -6, -3, 7, 0, -5, 3, 0, 3, 4, -7, -2, 5, 10, -14, 10, 2, 12, -10, -15, 8, -18, 15, -2, 0]);
ECSearch("14.3-d",(w + 8)*OK,[-2, -1, 2, 2, 1, 8, 7, -3, -4, 5, -1, 7, 6, -7, -4, -4, -12, -3, 18, 15, -8, -2, 18, 7, 2, 18, -6, 10]);
ECSearch("16.1-a",(4)*OK,[5, -2, -4, -1, 6, 1, -6, 0, 7, -7, -9, 5, -1, -8, 2, 2, -7, 14, 3, 10, -6, 8, -9, -2, 4, -10, 18, 4]);
ECSearch("16.1-b",(4)*OK,[-2, 5, -4, 6, -1, -6, 1, 7, 0, -7, 5, -9, -8, -1, 2, 2, 14, -7, 10, 3, 8, -6, -2, -9, -10, 4, 4, 18]);
ECSearch("16.1-c",(4)*OK,[-4, -4, 5, 1, 1, 2, 2, -2, -2, 10, 5, 5, 6, 6, -1, -1, -6, -6, 11, 11, 3, 3, -4, -4, -9, -9, -3, -3]);
ECSearch("16.2-a",(30*w + 214)*OK,[-2, -2, -2, 3, -4, 1, -4, 0, 6, 8, -8, 7, 5, -8, -6, 12, -5, -9, -12, 8, -11, 0, 12, 4, -10, 7, -14, 9]);
ECSearch("16.4-a",(w + 6)*OK,[-2, -2, -3, 2, 2, -3, -6, 1, 3, 2, 3, 3, 3, -10, 5, 2, -8, 8, 7, 10, 5, -12, -2, -6, 11, 18, -12, 2, 12]);
ECSearch("16.3-a",(-30*w + 244)*OK,[-2, -2, -2, -4, 3, -4, 1, 6, 0, 8, 7, -8, -8, 5, 12, -6, -9, -5, 8, -12, 0, -11, 4, 12, 7, -10, 9, -14]);
ECSearch("16.5-a",(w - 7)*OK,[-2, -3, -2, 2, -3, 2, 1, -6, 2, 3, 3, 3, 3, 5, -10, -8, 2, 7, 8, 5, 10, -2, -12, 11, -6, -12, 18, 12, 2]);
ECSearch("18.1-a",(-3*w + 24)*OK,[-1, 0, -4, -2, -2, -4, -8, 0, 0, -6, -6, -2, 0, 8, 10, -2, -12, -8, 6, 14, -10, 6, 0, -20, -10, 10, -6, -14]);
ECSearch("18.2-a",(-3*w - 21)*OK,[-1, -4, 0, -2, -2, -8, -4, 0, 0, -6, -2, -6, 8, 0, -2, 10, -8, -12, 14, 6, 6, -10, -20, 0, 10, -10, -14, -6]);
ECSearch("26.1-a",(-5*w - 36)*OK,[-2, -4, -1, -4, 1, 2, -1, -5, 2, -1, -5, 1, 4, 9, 6, -10, 12, 5, 14, -7, -6, -14, 6, -3, -16, -14, -8, 18]);
ECSearch("26.1-b",(-5*w - 36)*OK,[-2, -2, 1, -2, 1, 2, 5, 7, 6, 7, -1, -5, 2, 5, 2, 4, -12, -1, -6, 9, 12, 14, 18, 7, 10, 4, 6, 16]);
ECSearch("26.1-c",(-5*w - 36)*OK,[-2, 2, 5, 2, 1, 2, -7, 7, 2, -1, 7, 7, 10, -3, 6, -4, -12, 11, 2, -7, 0, -2, -18, 3, 2, 4, -2, 0]);
ECSearch("26.2-a",(-9*w - 64)*OK,[-1, 2, -1, 1, 4, -8, 0, 9, 7, 2, -10, 8, 6, 5, 10, 0, 1, -6, 2, 9, 14, 4, 8, 6, 1, 12, -9, -2]);
ECSearch("26.2-b",(-9*w - 64)*OK,[1, -2, 1, -5, 4, -4, 0, 7, -9, 6, -6, 4, -2, -9, -2, 8, 13, -6, 10, 13, 14, 16, 12, 18, 3, -4, -15, 18]);
ECSearch("26.2-c",(-9*w - 64)*OK,[-1, -4, -1, 4, -2, 7, -3, 3, -8, 2, -1, -4, -3, 8, 10, 9, 10, -15, 5, 0, 14, -11, -13, -6, -20, -18, 3, 1]);
ECSearch("26.2-d",(-9*w - 64)*OK,[0, -4, -4, -2, -3, 1, 2, -4, -4, 4, 0, 5, -7, 4, -2, 8, -15, -7, 2, 14, -3, 12, -4, 0, 4, 15, -10, 19]);
ECSearch("26.4-a",(5*w - 41)*OK,[-2, -1, -4, -4, 1, -1, 2, 2, -5, -1, 1, -5, 9, 4, -10, 6, 5, 12, -7, 14, -14, -6, -3, 6, -14, -16, 18, -8]);
ECSearch("26.4-b",(5*w - 41)*OK,[-2, 1, -2, -2, 1, 5, 2, 6, 7, 7, -5, -1, 5, 2, 4, 2, -1, -12, 9, -6, 14, 12, 7, 18, 4, 10, 16, 6]);
ECSearch("26.4-c",(5*w - 41)*OK,[-2, 5, 2, 2, 1, -7, 2, 2, 7, -1, 7, 7, -3, 10, -4, 6, 11, -12, -7, 2, -2, 0, 3, -18, 4, 2, 0, -2]);
ECSearch("26.3-a",(9*w - 73)*OK,[-1, -1, 2, 1, 4, 0, -8, 7, 9, 2, 8, -10, 5, 6, 0, 10, -6, 1, 9, 2, 4, 14, 6, 8, 12, 1, -2, -9]);
ECSearch("26.3-b",(9*w - 73)*OK,[1, 1, -2, -5, 4, 0, -4, -9, 7, 6, 4, -6, -9, -2, 8, -2, -6, 13, 13, 10, 16, 14, 18, 12, -4, 3, 18, -15]);
ECSearch("26.3-c",(9*w - 73)*OK,[-1, -1, -4, 4, -2, -3, 7, -8, 3, 2, -4, -1, 8, -3, 9, 10, -15, 10, 0, 5, -11, 14, -6, -13, -18, -20, 1, 3]);
ECSearch("26.3-d",(9*w - 73)*OK,[0, -4, -4, -2, -3, 2, 1, -4, -4, 4, 5, 0, 4, -7, 8, -2, -7, -15, 14, 2, 12, -3, 0, -4, 15, 4, 19, -10]);
ECSearch("28.1-a",(-16*w - 114)*OK,[-4, 4, -4, 2, -4, 2, 0, 0, 8, 6, 6, 2, 8, 8, 2, -6, -6, 6, 0, 12, 6, -12, 12, 2, 2, -18, 6]);
ECSearch("28.1-b",(-16*w - 114)*OK,[0, 4, 6, 6, 4, -8, -4, -4, -4, 2, 10, -10, 4, 2, 8, 6, -2, -18, 16, -2, 10, 16, -12, 2, -2, -14, -6]);
ECSearch("28.1-c",(-16*w - 114)*OK,[-2, 2, 2, 6, -8, 6, 6, -8, 8, -6, 2, -10, -8, 8, 2, 14, 8, 18, -8, 0, -10, 0, 4, -2, -10, 12, 4]);
ECSearch("28.1-d",(-16*w - 114)*OK,[-1, 1, -4, 2, 5, -1, 0, 3, -1, 0, -9, 8, -7, 2, -7, -6, 6, -6, -6, 12, 6, 9, 12, 2, -1, 6, -12]);
ECSearch("28.1-e",(-16*w - 114)*OK,[-1, 3, -2, -6, -1, -5, 4, -9, -7, 6, -5, 10, -5, 10, 3, -2, -10, 0, -18, 2, 12, -13, 6, -4, -5, 18, -6]);
ECSearch("28.1-f",(-16*w - 114)*OK,[2, 3, 7, -3, 2, -2, 4, 0, 2, 9, 1, -8, -2, 1, -3, -14, -10, 3, -3, 17, -9, 8, 6, -1, 7, -21, 3]);
ECSearch("28.1-g",(-16*w - 114)*OK,[-1, 1, 2, -4, -1, 5, 0, 9, -7, -6, -3, 2, -1, 2, 11, 12, 0, 6, -6, 12, 12, 15, -6, -4, -1, 6, 18]);
ECSearch("28.1-h",(-16*w - 114)*OK,[2, -1, 3, 5, -6, -2, 4, 0, 2, -7, 9, -8, -10, 5, -7, 2, -10, -5, 9, -19, -9, -8, -18, -1, -17, -17, -9]);
ECSearch("28.1-i",(-16*w - 114)*OK,[-1, -1, -2, -2, -1, -1, 4, -5, 1, -10, -1, -6, 3, 2, 11, -6, -6, -4, 14, 6, -12, -13, 14, 12, 3, -6, -6]);
ECSearch("28.1-j",(-16*w - 114)*OK,[2, -2, 2, 2, 2, 8, -6, 0, 2, -6, 6, 2, 8, -4, 2, 6, 0, -12, -18, 12, 6, 18, 6, 14, 2, -6, 18]);
ECSearch("28.1-k",(-16*w - 114)*OK,[-1, -3, 2, -4, 3, -3, -8, 1, 5, -6, -3, 6, 3, 6, -9, -12, 12, -2, 10, 12, -12, 3, -18, -8, -17, 14, -10]);
ECSearch("28.1-l",(-16*w - 114)*OK,[4, -4, 2, 6, 4, 0, 0, 4, 8, -6, 2, 2, 4, 2, -4, 2, -10, 6, 4, -18, 2, 0, 4, -14, 14, 6, -2]);
ECSearch("28.1-m",(-16*w - 114)*OK,[-1, -5, -4, -4, -7, -7, 0, -3, -1, 0, -3, -4, 5, 2, -7, 0, 0, 0, -6, -6, -18, -3, -12, 2, 11, -6, 0]);
ECSearch("28.1-n",(-16*w - 114)*OK,[3, -5, 0, 0, 1, 1, 8, -7, -1, -4, 1, -4, 1, -10, 5, 12, -8, 0, 10, -14, -14, 13, -12, 2, 7, 10, 0]);
ECSearch("28.3-a",(3*w - 25)*OK,[0, -1, -6, 4, -3, 5, 4, 1, 6, 2, 6, 1, 10, -2, -5, -9, -2, 5, 6, 12, 17, 18, 5, 6, -4, -2, 9, -6]);
ECSearch("28.2-a",(-16*w + 130)*OK,[-4, 4, 2, -4, 2, -4, 0, 0, 8, 6, 6, 8, 2, 2, 8, -6, -6, 0, 6, 6, 12, 12, -12, 2, 2, 6, -18]);
ECSearch("28.2-b",(-16*w + 130)*OK,[0, 4, 6, 6, -8, 4, -4, -4, -4, 10, 2, 4, -10, 8, 2, -2, 6, 16, -18, 10, -2, -12, 16, -2, 2, -6, -14]);
ECSearch("28.2-c",(-16*w + 130)*OK,[-2, 2, 6, 2, 6, -8, -8, 6, 8, 2, -6, -8, -10, 2, 8, 8, 14, -8, 18, -10, 0, 4, 0, -10, -2, 4, 12]);
ECSearch("28.2-d",(-16*w + 130)*OK,[-1, 1, 2, -4, -1, 5, 3, 0, -1, -9, 0, -7, 8, -7, 2, 6, -6, -6, -6, 6, 12, 12, 9, -1, 2, -12, 6]);
ECSearch("28.2-e",(-16*w + 130)*OK,[-1, 3, -6, -2, -5, -1, -9, 4, -7, -5, 6, -5, 10, 3, 10, -10, -2, -18, 0, 12, 2, 6, -13, -5, -4, -6, 18]);
ECSearch("28.2-f",(-16*w + 130)*OK,[2, 3, -3, 7, -2, 2, 0, 4, 2, 1, 9, -2, -8, -3, 1, -10, -14, -3, 3, -9, 17, 6, 8, 7, -1, 3, -21]);
ECSearch("28.2-g",(-16*w + 130)*OK,[-1, 1, -4, 2, 5, -1, 9, 0, -7, -3, -6, -1, 2, 11, 2, 0, 12, -6, 6, 12, 12, -6, 15, -1, -4, 18, 6]);
ECSearch("28.2-h",(-16*w + 130)*OK,[2, -1, 5, 3, -2, -6, 0, 4, 2, 9, -7, -10, -8, -7, 5, -10, 2, 9, -5, -9, -19, -18, -8, -17, -1, -9, -17]);
ECSearch("28.2-i",(-16*w + 130)*OK,[-1, -1, -2, -2, -1, -1, -5, 4, 1, -1, -10, 3, -6, 11, 2, -6, -6, 14, -4, -12, 6, 14, -13, 3, 12, -6, -6]);
ECSearch("28.2-j",(-16*w + 130)*OK,[2, -2, 2, 2, 8, 2, 0, -6, 2, 6, -6, 8, 2, 2, -4, 0, 6, -18, -12, 6, 12, 6, 18, 2, 14, 18, -6]);
ECSearch("28.2-k",(-16*w + 130)*OK,[-1, -3, -4, 2, -3, 3, 1, -8, 5, -3, -6, 3, 6, -9, 6, 12, -12, 10, -2, -12, 12, -18, 3, -17, -8, -10, 14]);
ECSearch("28.2-l",(-16*w + 130)*OK,[4, -4, 6, 2, 0, 4, 4, 0, 8, 2, -6, 4, 2, -4, 2, -10, 2, 4, 6, 2, -18, 4, 0, 14, -14, -2, 6]);
ECSearch("28.2-m",(-16*w + 130)*OK,[-1, -5, -4, -4, -7, -7, -3, 0, -1, -3, 0, 5, -4, -7, 2, 0, 0, -6, 0, -18, -6, -12, -3, 11, 2, 0, -6]);
ECSearch("28.2-n",(-16*w + 130)*OK,[3, -5, 0, 0, 1, 1, -7, 8, -1, 1, -4, 1, -4, 5, -10, -8, 12, 10, 0, -14, -14, -12, 13, 7, 2, 0, 10]);
ECSearch("28.6-a",(-3*w - 22)*OK,[0, -1, -6, -3, 4, 4, 5, 6, 1, 2, 1, 6, -2, 10, -9, -5, 5, -2, 12, 6, 18, 17, 6, 5, -2, -4, -6, 9]);
ECSearch("32.1-a",(-4*w + 32)*OK,[-2, -2, 1, 5, 3, -4, -2, 0, 6, 2, -5, 1, 10, -4, -3, -9, 12, -2, -7, 9, -15, 19, -8, -12, -5, 5, -9, -5]);
ECSearch("32.3-a",(14*w - 114)*OK,[-4, -5, -2, -2, 7, -4, -5, 5, -2, 1, 5, -1, -6, -3, 4, -2, 6, -9, 14, -13, -12, -12, 8, 13, -12, 12, -18, 6]);
ECSearch("32.3-b",(14*w - 114)*OK,[2, -2, -2, -5, 4, 5, 4, -4, -2, -8, -4, -1, 9, 0, -2, -8, 15, 9, 8, 8, -9, 0, 20, -8, 18, -3, 6, 3]);
ECSearch("32.3-c",(14*w - 114)*OK,[-4, 4, -6, 2, 2, -6, 6, -4, 4, -4, 6, 6, 0, 0, -6, -6, 12, -12, -8, -8, 18, 18, -6, 6, 2, 2, -8, -8]);
ECSearch("32.3-d",(14*w - 114)*OK,[-2, -2, 1, -3, -1, 0, 2, -4, -6, 2, -1, 9, -2, -8, 1, 7, 8, -14, 13, -3, 13, 3, -8, -12, 19, -7, 11, 15]);
ECSearch("32.3-e",(14*w - 114)*OK,[2, -2, 3, 5, -1, 0, -6, -4, -2, 2, -9, 9, -6, 0, 3, -3, 0, -6, 13, 13, -9, -15, 0, 12, -7, -13, 1, 13]);
ECSearch("32.3-f",(14*w - 114)*OK,[2, 5, -2, 2, -3, -2, -3, 3, -2, -1, 3, -1, 2, -7, -2, -8, 8, -5, -6, 1, 12, -14, 6, -1, -10, 4, 6, -4]);
ECSearch("32.3-g",(14*w - 114)*OK,[2, 3, 2, 2, -3, 6, -1, -3, -2, 3, 3, 3, 10, -5, 2, -8, -8, -7, 10, 5, -12, -2, 6, -11, 18, -12, 2, 12]);
ECSearch("32.3-h",(14*w - 114)*OK,[-2, 2, 2, 3, -4, 1, 4, 0, 6, 8, -8, 7, 5, 8, 6, -12, -5, 9, -12, 8, 11, 0, 12, -4, 10, -7, 14, -9]);
ECSearch("32.3-i",(14*w - 114)*OK,[-4, 4, 1, -5, -5, 8, -8, -4, 4, 10, -1, -1, 0, 0, 1, 1, 12, -12, -1, -1, -3, -3, 8, -8, 9, 9, -15, -15]);
ECSearch("32.5-a",(-w - 9)*OK,[1, 0, 0, -2, -2, -2, 4, -8, -8, 0, 2, -2, 6, -8, -4, -6, -2, -8, 4, -6, 10, 10, -10, 4, -8, -10, -14, -6, 10]);
ECSearch("32.5-b",(-w - 9)*OK,[-1, 0, 0, 2, -2, -2, 4, 8, 8, 0, 2, -2, 6, -8, 4, 6, 2, -8, -4, -6, 10, -10, 10, 4, 8, 10, 14, 6, -10]);
ECSearch("32.2-a",(-4*w - 28)*OK,[-2, -2, 1, 3, 5, -2, -4, 6, 0, 2, 1, -5, -4, 10, -9, -3, -2, 12, 9, -7, 19, -15, -12, -8, 5, -5, -5, -9]);
ECSearch("32.4-a",(-14*w - 100)*OK,[-5, -4, -2, 7, -2, -5, -4, -2, 5, 1, -1, 5, -3, -6, -2, 4, -9, 6, -13, 14, -12, -12, 13, 8, 12, -12, 6, -18]);
ECSearch("32.4-b",(-14*w - 100)*OK,[-2, 2, -2, 4, -5, 4, 5, -2, -4, -8, -1, -4, 0, 9, -8, -2, 9, 15, 8, 8, 0, -9, -8, 20, -3, 18, 3, 6]);
ECSearch("32.4-c",(-14*w - 100)*OK,[4, -4, -6, 2, 2, 6, -6, 4, -4, -4, 6, 6, 0, 0, -6, -6, -12, 12, -8, -8, 18, 18, 6, -6, 2, 2, -8, -8]);
ECSearch("32.4-d",(-14*w - 100)*OK,[-2, -2, 1, -1, -3, 2, 0, -6, -4, 2, 9, -1, -8, -2, 7, 1, -14, 8, -3, 13, 3, 13, -12, -8, -7, 19, 15, 11]);
ECSearch("32.4-e",(-14*w - 100)*OK,[-2, 2, 3, -1, 5, -6, 0, -2, -4, 2, 9, -9, 0, -6, -3, 3, -6, 0, 13, 13, -15, -9, 12, 0, -13, -7, 13, 1]);
ECSearch("32.4-f",(-14*w - 100)*OK,[5, 2, -2, -3, 2, -3, -2, -2, 3, -1, -1, 3, -7, 2, -8, -2, -5, 8, 1, -6, -14, 12, -1, 6, 4, -10, -4, 6]);
ECSearch("32.4-g",(-14*w - 100)*OK,[3, 2, 2, -3, 2, -1, 6, -2, -3, 3, 3, 3, -5, 10, -8, 2, -7, -8, 5, 10, -2, -12, -11, 6, -12, 18, 12, 2]);
ECSearch("32.4-h",(-14*w - 100)*OK,[2, -2, 2, -4, 3, 4, 1, 6, 0, 8, 7, -8, 8, 5, -12, 6, 9, -5, 8, -12, 0, 11, -4, 12, -7, 10, -9, 14]);
ECSearch("32.4-i",(-14*w - 100)*OK,[4, -4, 1, -5, -5, -8, 8, 4, -4, 10, -1, -1, 0, 0, 1, 1, -12, 12, -1, -1, -3, -3, -8, 8, 9, 9, -15, -15]);
ECSearch("32.6-a",(w - 10)*OK,[1, 0, 0, -2, -2, -2, -8, 4, 0, -8, 2, 6, -2, -4, -8, -2, -6, 4, -8, 10, -6, -10, 10, -8, 4, -14, -10, 10, -6]);
ECSearch("32.6-b",(w - 10)*OK,[-1, 0, 0, 2, -2, -2, 8, 4, 0, 8, 2, 6, -2, 4, -8, 2, 6, -4, -8, 10, -6, 10, -10, 8, 4, 14, 10, -10, 6]);
ECSearch("36.2-a",(45*w + 321)*OK,[-1, 0, 5, 6, -1, 4, -3, 7, -6, 9, 9, 3, -10, -5, -4, 10, 10, 13, -10, 7, -16, 12, -4, 15, 12, -12, 6, -14]);
ECSearch("36.3-a",(-45*w + 366)*OK,[-1, 5, 0, -1, 6, -3, 4, -6, 7, 9, 3, 9, -5, -10, 10, -4, 13, 10, 7, -10, 12, -16, 15, -4, -12, 12, -14, 6]);
ECSearch("38.1-a",(w + 4)*OK,[0, -4, -1, 4, 2, 5, -7, -9, -6, -1, 9, -9, 2, -1, 2, -10, 6, 3, -6, 9, -12, 12, 12, -3, -16, 2, -18, 18]);
ECSearch("38.2-a",(83*w + 592)*OK,[0, -2, -2, -2, -1, 0, 5, 8, 2, 8, 0, -1, -7, -8, 6, -4, 3, 1, 16, 0, 3, -12, 20, -8, 2, -11, 6, -21]);
ECSearch("38.4-a",(w - 5)*OK,[0, -1, -4, 4, 5, 2, -7, -6, -9, -1, -9, 9, -1, 2, -10, 2, 3, 6, 9, -6, 12, -12, -3, 12, 2, -16, 18, -18]);
ECSearch("38.3-a",(83*w - 675)*OK,[0, -2, -2, -2, 0, -1, 5, 2, 8, 8, -1, 0, -8, -7, -4, 6, 1, 3, 0, 16, -12, 3, -8, 20, -11, 2, -21, 6]);
ECSearch("46.1-a",(w + 3)*OK,[-1, -4, 0, -5, -3, -1, 4, 6, -2, -2, -1, 1, -2, 10, -7, -11, -8, -14, 1, -1, -15, -5, 18, -8, -9, 15, -5, -7]);
ECSearch("46.2-a",(-31*w - 221)*OK,[2, 3, -1, 4, 0, -4, -2, 0, -8, 6, 6, 6, -4, 1, -10, 4, -8, 1, -10, -17, -16, 18, 2, -6, -3, 6, -12, -11]);
ECSearch("46.2-b",(-31*w - 221)*OK,[1, 0, -4, 6, 2, -2, 4, 4, 0, -2, 6, -6, -4, 0, 10, -6, -4, 0, -18, -6, -6, -14, -4, 12, -2, 18, -18, -6]);
ECSearch("46.2-c",(-31*w - 221)*OK,[-1, 0, 2, -2, -6, 2, 4, 0, -8, -6, 6, 6, -4, -2, -4, 10, -8, -14, -10, 10, -10, 6, -16, 0, 0, 6, -18, -20]);
ECSearch("46.4-a",(w - 4)*OK,[-1, 0, -4, -5, -1, -3, 6, 4, -2, -2, 1, -1, 10, -2, -11, -7, -14, -8, -1, 1, -5, -15, -8, 18, 15, -9, -7, -5]);
ECSearch("46.3-a",(31*w - 252)*OK,[2, -1, 3, 4, -4, 0, 0, -2, -8, 6, 6, 6, 1, -4, 4, -10, 1, -8, -17, -10, 18, -16, -6, 2, 6, -3, -11, -12]);
ECSearch("46.3-b",(31*w - 252)*OK,[1, -4, 0, 6, -2, 2, 4, 4, 0, -2, -6, 6, 0, -4, -6, 10, 0, -4, -6, -18, -14, -6, 12, -4, 18, -2, -6, -18]);
ECSearch("46.3-c",(31*w - 252)*OK,[-1, 2, 0, -2, 2, -6, 0, 4, -8, -6, 6, 6, -2, -4, 10, -4, -14, -8, 10, -10, 6, -10, 0, -16, 6, 0, -20, -18]);
ECSearch("49.1-a",(7)*OK,[1, 1, -2, -2, -2, 4, 4, 8, 8, 2, -2, -2, 8, 8, 2, 2, 0, 0, -6, -6, -6, -6, -12, -12, -14, -14, 6, 6]);
ECSearch("50.1-a",(-5*w + 40)*OK,[-1, 0, 2, -1, -5, -1, -6, 4, 6, 0, 1, 5, -2, 4, 3, 7, -12, -8, -1, -13, -3, -3, 2, 6, 9, 1, 1, -7]);
ECSearch("50.2-a",(-5*w - 35)*OK,[-1, 2, 0, -1, -1, -5, 4, -6, 0, 6, 5, 1, 4, -2, 7, 3, -8, -12, -13, -1, -3, -3, 6, 2, 1, 9, -7, 1]);
ECSearch("52.1-a",(76*w + 542)*OK,[5, 4, -1, 0, 4, 6, 3, -5, -4, 6, -4, -1, -2, -4, 2, 8, -7, -15, -14, -18, 8, 18, -2, 16, -19, -18, 13]);
ECSearch("52.1-b",(76*w + 542)*OK,[-1, 2, -3, -4, 0, 0, -5, 1, 2, 0, 6, -3, 6, 0, -6, -6, -3, 1, -14, -12, 6, 6, 0, 4, -11, 14, -13]);
ECSearch("52.1-c",(76*w + 542)*OK,[4, 0, 2, 0, 6, -8, 6, 0, 8, 0, -10, 6, -8, 4, 6, 8, 12, -6, 0, 0, -2, -4, -20, -10, 14, 2, 14]);
ECSearch("52.3-a",(w + 2)*OK,[2, 2, 3, 4, -3, -6, 7, 3, -2, 3, 3, 9, -2, 5, 4, 8, -14, -11, -2, -7, 0, 2, 0, 5, 12, -6, 10, -12]);
ECSearch("52.3-b",(w + 2)*OK,[0, 2, -1, -2, 5, -4, -1, -9, -6, -1, 3, 9, -4, 5, -10, -4, -12, 9, 6, -15, 18, 12, 6, -3, -4, -16, 12, -12]);
ECSearch("52.4-a",(w + 10)*OK,[1, 1, -4, 0, 1, 5, -2, -6, 5, -5, -3, 3, -5, 0, 2, -2, 15, 8, 13, 6, -6, 10, -9, -6, 10, 0, -10, -4]);
ECSearch("52.4-b",(w + 10)*OK,[-1, 1, 4, -4, -3, -3, 6, 8, 9, -1, 5, 3, -1, 2, 8, -8, -9, 0, -7, -2, -2, 6, -5, -16, 8, 10, 8, 2]);
ECSearch("52.2-a",(76*w - 618)*OK,[4, 5, -1, 0, 6, 4, -5, 3, -4, -4, 6, -2, -1, 2, -4, -7, 8, -14, -15, 8, -18, -2, 18, -19, 16, 13, -18]);
ECSearch("52.2-b",(76*w - 618)*OK,[2, -1, -3, -4, 0, 0, 1, -5, 2, 6, 0, 6, -3, -6, 0, -3, -6, -14, 1, 6, -12, 0, 6, -11, 4, -13, 14]);
ECSearch("52.2-c",(76*w - 618)*OK,[0, 4, 2, 0, -8, 6, 0, 6, 8, -10, 0, -8, 6, 6, 4, 12, 8, 0, -6, -2, 0, -20, -4, 14, -10, 14, 2]);
ECSearch("52.6-a",(w - 3)*OK,[2, 3, 2, 4, -3, 7, -6, -2, 3, 3, 9, 3, 5, -2, 8, 4, -11, -14, -7, -2, 2, 0, 5, 0, -6, 12, -12, 10]);
ECSearch("52.6-b",(w - 3)*OK,[0, -1, 2, -2, 5, -1, -4, -6, -9, -1, 9, 3, 5, -4, -4, -10, 9, -12, -15, 6, 12, 18, -3, 6, -16, -4, -12, 12]);
ECSearch("52.5-a",(w - 11)*OK,[1, -4, 1, 0, 1, -2, 5, 5, -6, -5, 3, -3, 0, -5, -2, 2, 8, 15, 6, 13, 10, -6, -6, -9, 0, 10, -4, -10]);
ECSearch("52.5-b",(w - 11)*OK,[-1, 4, 1, -4, -3, 6, -3, 9, 8, -1, 3, 5, 2, -1, -8, 8, 0, -9, -2, -7, 6, -2, -16, -5, 10, 8, 2, 8]);
