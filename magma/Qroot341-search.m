print "Field 2.2.341.1";
Qx<x> := PolynomialRing(RationalField());
K<w> := NumberField(x^2 - x - 85);
OK := Integers(K);
Plist := [];
Append(~Plist,(2)*OK);
Append(~Plist,(w - 10)*OK);
Append(~Plist,(w + 9)*OK);
Append(~Plist,(3)*OK);
Append(~Plist,(-3*w + 29)*OK);
Append(~Plist,(-w + 9)*OK);
Append(~Plist,(-w - 8)*OK);
Append(~Plist,(-2*w - 17)*OK);
Append(~Plist,(2*w - 19)*OK);
Append(~Plist,(w + 7)*OK);
Append(~Plist,(w - 8)*OK);
Append(~Plist,(-5*w - 44)*OK);
Append(~Plist,(w + 6)*OK);
Append(~Plist,(w - 7)*OK);
Append(~Plist,(w + 11)*OK);
Append(~Plist,(w - 12)*OK);
Append(~Plist,(7)*OK);
Append(~Plist,(-2*w + 21)*OK);
Append(~Plist,(2*w + 19)*OK);
Append(~Plist,(-5*w + 48)*OK);
Append(~Plist,(-5*w - 43)*OK);
Append(~Plist,(-6*w - 53)*OK);
Append(~Plist,(6*w - 59)*OK);
Append(~Plist,(w + 12)*OK);
Append(~Plist,(w - 13)*OK);
Append(~Plist,(w + 3)*OK);
Append(~Plist,(w - 4)*OK);
Append(~Plist,(w + 2)*OK);
Append(~Plist,(w - 3)*OK);
Append(~Plist,(w + 1)*OK);
Append(~Plist,(w - 2)*OK);
Append(~Plist,(w + 13)*OK);
Append(~Plist,(w - 14)*OK);
Append(~Plist,(-3*w + 31)*OK);
Append(~Plist,(3*w + 28)*OK);
Append(~Plist,(-7*w - 62)*OK);
Append(~Plist,(7*w - 69)*OK);
Append(~Plist,(-8*w + 77)*OK);
Append(~Plist,(-8*w - 69)*OK);
Append(~Plist,(4*w + 33)*OK);
Append(~Plist,(4*w - 37)*OK);
Append(~Plist,(-5*w + 47)*OK);
Append(~Plist,(-5*w - 42)*OK);
Append(~Plist,(-4*w + 41)*OK);
Append(~Plist,(4*w + 37)*OK);
Append(~Plist,(-3*w - 29)*OK);
Append(~Plist,(-3*w + 32)*OK);
Append(~Plist,(-3*w + 26)*OK);
Append(~Plist,(3*w + 23)*OK);
Append(~Plist,(-11*w + 108)*OK);
Append(~Plist,(-11*w - 97)*OK);
Append(~Plist,(-2*w + 13)*OK);
Append(~Plist,(2*w + 11)*OK);
Append(~Plist,(5*w + 41)*OK);
Append(~Plist,(5*w - 46)*OK);
Append(~Plist,(-2*w + 11)*OK);
Append(~Plist,(2*w + 9)*OK);
Append(~Plist,(w + 18)*OK);
Append(~Plist,(w - 19)*OK);
Append(~Plist,(9*w + 77)*OK);
Append(~Plist,(9*w - 86)*OK);
Append(~Plist,(-7*w + 66)*OK);
Append(~Plist,(-7*w - 59)*OK);
Append(~Plist,(-2*w + 9)*OK);
Append(~Plist,(2*w + 7)*OK);
Append(~Plist,(-10*w - 89)*OK);
Append(~Plist,(10*w - 99)*OK);
Append(~Plist,(-4*w - 39)*OK);
Append(~Plist,(4*w - 43)*OK);
Append(~Plist,(-2*w + 3)*OK);
Append(~Plist,(-2*w - 1)*OK);
Append(~Plist,(-3*w - 19)*OK);
Append(~Plist,(3*w - 22)*OK);
Append(~Plist,(19)*OK);
Append(~Plist,(-7*w + 71)*OK);
Append(~Plist,(7*w + 64)*OK);
Append(~Plist,(-11*w - 98)*OK);
Append(~Plist,(11*w - 109)*OK);
Append(~Plist,(-5*w + 44)*OK);
Append(~Plist,(5*w + 39)*OK);
Append(~Plist,(5*w - 53)*OK);
Append(~Plist,(5*w + 48)*OK);
Append(~Plist,(w + 22)*OK);
Append(~Plist,(w - 23)*OK);
Append(~Plist,(-2*w + 29)*OK);
Append(~Plist,(2*w + 27)*OK);
Append(~Plist,(-17*w + 164)*OK);
Append(~Plist,(-17*w - 147)*OK);
Append(~Plist,(-3*w - 16)*OK);
Append(~Plist,(3*w - 19)*OK);
Append(~Plist,(w + 23)*OK);
Append(~Plist,(w - 24)*OK);
Append(~Plist,(5*w + 38)*OK);
Append(~Plist,(5*w - 43)*OK);
Append(~Plist,(-5*w - 49)*OK);
Append(~Plist,(5*w - 54)*OK);
Append(~Plist,(-4*w + 31)*OK);
Append(~Plist,(4*w + 27)*OK);
Append(~Plist,(23)*OK);
Append(~Plist,(-3*w - 13)*OK);
effort := 400;
ECSearch := procedure(class_label, N, aplist);
print "Isogeny class ", class_label;
goodP := [P: P in Plist | Valuation(N,P) eq 0];
goodP := [goodP[i]: i in [1..#(aplist)]];
curves := EllipticCurveSearch(N,effort : Primes:=goodP, Traces:=aplist);
curves := [E: E in curves | &and[TraceOfFrobenius(E,goodP[i]) eq aplist[i] : i in [1..#(aplist)]]];
if #curves eq 0 then print "No curve found"; end if;
for E in curves do;
 a1,a2,a3,a4,a6:=Explode(aInvariants(E));
 printf "Curve [%o,%o,%o,%o,%o]\n",a1,a2,a3,a4,a6;
 end for;
end procedure;
SetColumns(0);

ECSearch("1.1-a",(1)*OK,[4, -3, -3, -5, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 12, 12, 14, -15, -15, 0, 0, 13, 13, 3, 3, 0, 0, 0, 0, 0]);
ECSearch("5.1-a",(w - 10)*OK,[-2, 1, 1, 4, 4, -6, 0, 4, 4, -6, 1, -6, -2, 0, 0, -5, 3, -12, -12, 10, -1, -7, -12, 3, -16, -10, -6, -14, -18]);
ECSearch("5.1-b",(w - 10)*OK,[-2, 1, 1, -4, -4, 6, 0, -4, -4, 6, 1, 6, 2, 0, 0, -5, 3, -12, 12, -10, -1, -7, -12, 3, 16, 10, 6, 14, 18]);
ECSearch("5.2-a",(w + 9)*OK,[-2, 1, 1, 4, -6, 4, 4, 0, -6, 4, 1, -2, -6, 0, 0, -5, -12, 3, 10, -12, -7, -1, 3, -12, -10, -16, -14, -6, 6]);
ECSearch("5.2-b",(w + 9)*OK,[-2, 1, 1, -4, 6, -4, -4, 0, 6, -4, 1, 2, 6, 0, 0, -5, -12, 3, -10, 12, -7, -1, 3, -12, 10, 16, 14, 6, -6]);
ECSearch("11.1-a",(-3*w + 29)*OK,[0, 1, 1, -5, 4, 4, -2, -2, 0, 0, 7, -6, -6, 8, 8, -10, 5, 5, 12, 12, -7, -7, -3, -3, 4, 4, -10, -10, -6]);
ECSearch("11.1-b",(-3*w + 29)*OK,[0, 1, 1, -5, -4, -4, 2, 2, 0, 0, 7, 6, 6, 8, 8, -10, 5, 5, -12, -12, -7, -7, -3, -3, -4, -4, 10, 10, 6]);
