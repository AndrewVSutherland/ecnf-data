print "Field 2.2.161.1";
Qx<x> := PolynomialRing(RationalField());
K<w> := NumberField(x^2 - x - 40);
OK := Integers(K);
Plist := [];
Append(~Plist,(w + 6)*OK);
Append(~Plist,(-w + 7)*OK);
Append(~Plist,(-6*w - 35)*OK);
Append(~Plist,(6*w - 41)*OK);
Append(~Plist,(-32*w + 219)*OK);
Append(~Plist,(3)*OK);
Append(~Plist,(2*w - 13)*OK);
Append(~Plist,(2*w + 11)*OK);
Append(~Plist,(4*w + 23)*OK);
Append(~Plist,(4*w - 27)*OK);
Append(~Plist,(58*w + 339)*OK);
Append(~Plist,(-20*w + 137)*OK);
Append(~Plist,(20*w + 117)*OK);
Append(~Plist,(-2*w + 11)*OK);
Append(~Plist,(2*w + 9)*OK);
Append(~Plist,(10*w + 59)*OK);
Append(~Plist,(10*w - 69)*OK);
Append(~Plist,(-44*w + 301)*OK);
Append(~Plist,(44*w + 257)*OK);
Append(~Plist,(-70*w - 409)*OK);
Append(~Plist,(70*w - 479)*OK);
Append(~Plist,(-2*w + 9)*OK);
Append(~Plist,(2*w + 7)*OK);
Append(~Plist,(-16*w - 93)*OK);
Append(~Plist,(16*w - 109)*OK);
Append(~Plist,(11)*OK);
Append(~Plist,(-34*w - 199)*OK);
Append(~Plist,(34*w - 233)*OK);
Append(~Plist,(-6*w + 43)*OK);
Append(~Plist,(-6*w - 37)*OK);
Append(~Plist,(-2*w + 3)*OK);
Append(~Plist,(-2*w - 1)*OK);
Append(~Plist,(-2*w + 19)*OK);
Append(~Plist,(2*w + 17)*OK);
Append(~Plist,(13)*OK);
Append(~Plist,(110*w + 643)*OK);
Append(~Plist,(110*w - 753)*OK);
Append(~Plist,(-10*w - 57)*OK);
Append(~Plist,(10*w - 67)*OK);
Append(~Plist,(-72*w + 493)*OK);
Append(~Plist,(-72*w - 421)*OK);
Append(~Plist,(4*w + 27)*OK);
Append(~Plist,(-4*w + 31)*OK);
Append(~Plist,(56*w - 383)*OK);
Append(~Plist,(56*w + 327)*OK);
Append(~Plist,(14*w + 83)*OK);
Append(~Plist,(14*w - 97)*OK);
Append(~Plist,(28*w + 163)*OK);
Append(~Plist,(-28*w + 191)*OK);
Append(~Plist,(134*w + 783)*OK);
Append(~Plist,(134*w - 917)*OK);
Append(~Plist,(-8*w + 57)*OK);
Append(~Plist,(-8*w - 49)*OK);
Append(~Plist,(-2*w + 21)*OK);
Append(~Plist,(2*w + 19)*OK);
Append(~Plist,(-82*w + 561)*OK);
Append(~Plist,(82*w + 479)*OK);
Append(~Plist,(-108*w - 631)*OK);
Append(~Plist,(108*w - 739)*OK);
Append(~Plist,(-36*w + 247)*OK);
Append(~Plist,(36*w + 211)*OK);
Append(~Plist,(-4*w - 17)*OK);
Append(~Plist,(4*w - 21)*OK);
Append(~Plist,(-6*w - 31)*OK);
Append(~Plist,(6*w - 37)*OK);
Append(~Plist,(-26*w - 151)*OK);
Append(~Plist,(26*w - 177)*OK);
Append(~Plist,(-4*w + 33)*OK);
Append(~Plist,(4*w + 29)*OK);
Append(~Plist,(-10*w + 71)*OK);
Append(~Plist,(-10*w - 61)*OK);
Append(~Plist,(-26*w - 153)*OK);
Append(~Plist,(26*w - 179)*OK);
Append(~Plist,(-8*w - 43)*OK);
Append(~Plist,(-8*w + 51)*OK);
Append(~Plist,(-24*w + 163)*OK);
Append(~Plist,(24*w + 139)*OK);
Append(~Plist,(-4*w - 13)*OK);
Append(~Plist,(4*w - 17)*OK);
Append(~Plist,(-94*w - 549)*OK);
Append(~Plist,(-94*w + 643)*OK);
Append(~Plist,(-38*w + 261)*OK);
Append(~Plist,(-38*w - 223)*OK);
Append(~Plist,(8*w - 59)*OK);
Append(~Plist,(-8*w - 51)*OK);
Append(~Plist,(162*w + 947)*OK);
Append(~Plist,(162*w - 1109)*OK);
Append(~Plist,(12*w - 79)*OK);
Append(~Plist,(12*w + 67)*OK);
Append(~Plist,(-120*w + 821)*OK);
Append(~Plist,(120*w + 701)*OK);
Append(~Plist,(6*w + 41)*OK);
Append(~Plist,(-6*w + 47)*OK);
Append(~Plist,(-74*w - 433)*OK);
Append(~Plist,(-74*w + 507)*OK);
Append(~Plist,(-50*w + 343)*OK);
Append(~Plist,(50*w + 293)*OK);
Append(~Plist,(-16*w - 91)*OK);
Append(~Plist,(16*w - 107)*OK);
Append(~Plist,(-38*w + 259)*OK);
effort := 400;
ECSearch := procedure(class_label, N, aplist);
print "Isogeny class ", class_label;
goodP := [P: P in Plist | Valuation(N,P) eq 0];
goodP := [goodP[i]: i in [1..#(aplist)]];
curves := EllipticCurveSearch(N,effort : Primes:=goodP, Traces:=aplist);
curves := [E: E in curves | &and[TraceOfFrobenius(E,goodP[i]) eq aplist[i] : i in [1..#(aplist)]]];
if #curves eq 0 then print "No curve found"; end if;
for E in curves do;
 a1,a2,a3,a4,a6:=Explode(aInvariants(E));
 printf "Curve [%o,%o,%o,%o,%o]\n",a1,a2,a3,a4,a6;
 end for;
end procedure;
SetColumns(0);

ECSearch("1.1-a",(1)*OK,[-1, -1, 0, 0, 0, 6, 0, 0, 0, 0, 8, 2, 2, 0, 0, 16, 16, 0, 0, 0, 0, 0, 0, 0, 0, -6, -16, -16, 24, 24]);
ECSearch("10.2-a",(w - 6)*OK,[-1, 2, 4, 2, 6, -2, 4, -8, 0, -2, 6, -6, -10, 0, -8, 8, -4, 2, 2, 10, -14, 4, -4, -6, -8, 8, 16, 0]);
ECSearch("10.2-b",(w - 6)*OK,[2, 1, 5, 2, 3, -4, 5, -4, 6, 10, -9, 0, 13, 0, -14, -2, 4, 13, 7, -1, 14, 2, 4, -6, -8, -19, -2, 15]);
ECSearch("10.2-c",(w - 6)*OK,[-1, -2, 2, 2, 6, -4, -4, 2, -6, -2, 0, 12, -2, -12, 10, -8, 4, 10, 10, 2, 2, 8, 4, 12, -8, 8, -2, 0]);
ECSearch("10.2-d",(w - 6)*OK,[0, 1, 1, 0, -1, -2, -1, 8, 6, 4, -3, 12, -5, 0, 10, 0, 8, -1, 17, 13, -12, -18, 6, 10, -8, 5, -22, 5]);
ECSearch("10.2-e",(w - 6)*OK,[0, -1, -1, 0, 1, 2, 1, -8, 6, 4, -3, -12, 5, 0, 10, 0, -8, 1, -17, -13, 12, 18, -6, 10, -8, 5, -22, 5]);
ECSearch("10.2-f",(w - 6)*OK,[-1, 2, -2, 2, -6, 4, 4, -2, -6, -2, 0, -12, 2, -12, 10, 8, -4, -10, -10, -2, -2, -8, -4, 12, -8, 8, -2, 0]);
ECSearch("10.2-g",(w - 6)*OK,[-1, -2, -4, 2, -6, 2, -4, 8, 0, -2, 6, 6, 10, 0, -8, -8, 4, -2, -2, -10, 14, -4, 4, -6, -8, 8, 16, 0]);
ECSearch("10.2-h",(w - 6)*OK,[2, -1, -5, 2, -3, 4, -5, 4, 6, 10, -9, 0, -13, 0, -14, 2, -4, -13, -7, 1, -14, -2, -4, -6, -8, -19, -2, 15]);
ECSearch("10.3-a",(-w - 5)*OK,[-1, 2, 4, 2, -2, 6, -8, 4, 0, 6, -2, -10, -6, -8, 0, -4, 8, 2, 2, -14, 10, -4, 4, -6, 8, -8, 0, 16]);
ECSearch("10.3-b",(-w - 5)*OK,[2, 1, 5, 2, -4, 3, -4, 5, 6, -9, 10, 13, 0, -14, 0, 4, -2, 7, 13, 14, -1, 4, 2, -6, -19, -8, 15, -2]);
ECSearch("10.3-c",(-w - 5)*OK,[-1, -2, 2, 2, -4, 6, 2, -4, -6, 0, -2, -2, 12, 10, -12, 4, -8, 10, 10, 2, 2, 4, 8, 12, 8, -8, 0, -2]);
ECSearch("10.3-d",(-w - 5)*OK,[0, 1, 1, 0, -2, -1, 8, -1, 6, -3, 4, -5, 12, 10, 0, 8, 0, 17, -1, -12, 13, 6, -18, 10, 5, -8, 5, -22]);
ECSearch("10.3-e",(-w - 5)*OK,[0, -1, -1, 0, 2, 1, -8, 1, 6, -3, 4, 5, -12, 10, 0, -8, 0, -17, 1, 12, -13, -6, 18, 10, 5, -8, 5, -22]);
ECSearch("10.3-f",(-w - 5)*OK,[-1, 2, -2, 2, 4, -6, -2, 4, -6, 0, -2, 2, -12, 10, -12, -4, 8, -10, -10, -2, -2, -4, -8, 12, 8, -8, 0, -2]);
ECSearch("10.3-g",(-w - 5)*OK,[-1, -2, -4, 2, 2, -6, 8, -4, 0, 6, -2, 10, 6, -8, 0, 4, -8, -2, -2, 14, -10, 4, -4, -6, 8, -8, 0, 16]);
ECSearch("10.3-h",(-w - 5)*OK,[2, -1, -5, 2, 4, -3, 4, -5, 6, -9, 10, -13, 0, -14, 0, -4, 2, -7, -13, -14, 1, -4, -2, -6, -19, -8, 15, -2]);
ECSearch("14.1-a",(-5*w - 29)*OK,[0, 0, 3, -2, 3, -6, 5, 2, -9, -3, -3, 11, 2, -12, -3, 9, -12, 0, 9, 8, 17, -4, -16, -1, -4, -16, 20, -16]);
ECSearch("14.1-b",(-5*w - 29)*OK,[0, 0, -3, -2, -3, 6, -5, -2, -9, -3, -3, -11, -2, -12, -3, -9, 12, 0, -9, -8, -17, 4, 16, -1, -4, -16, 20, -16]);
ECSearch("14.2-a",(-5*w + 34)*OK,[0, 3, 0, -2, -6, 3, 2, 5, -9, -3, -3, 2, 11, -3, -12, -12, 9, 9, 0, 17, 8, -16, -4, -1, -16, -4, -16, 20]);
ECSearch("14.2-b",(-5*w + 34)*OK,[0, -3, 0, -2, 6, -3, -2, -5, -9, -3, -3, -2, -11, -3, -12, 12, -9, -9, 0, -17, -8, 16, 4, -1, -16, -4, -16, 20]);
ECSearch("16.2-a",(26*w + 152)*OK,[4, 2, -2, -2, -2, 2, 6, 4, 0, -6, 6, -8, 10, 0, 8, 0, -2, -12, -12, -16, 12, 2, 6, 2, 4, -4, 0, 8]);
ECSearch("16.2-b",(26*w + 152)*OK,[2, 0, -2, -2, 0, -4, 2, 0, -4, -6, 2, 14, -8, 0, -12, 12, -14, 14, -10, 18, -10, -6, -10, 10, -16, -16, 4, 12]);
ECSearch("16.2-c",(26*w + 152)*OK,[-2, 2, -2, 4, 4, -4, 0, 4, 6, 6, 6, 10, -2, -6, 2, -12, 16, -6, -6, -10, -18, 2, -6, -4, 16, 8, 6, -10]);
ECSearch("16.2-d",(26*w + 152)*OK,[-2, 0, 2, -2, 0, 4, -2, 0, -4, -6, 2, -14, 8, 0, -12, -12, 14, -14, 10, -18, 10, 6, 10, 10, -16, -16, 4, 12]);
ECSearch("16.2-e",(26*w + 152)*OK,[-4, -2, 2, -2, 2, -2, -6, -4, 0, -6, 6, 8, -10, 0, 8, 0, 2, 12, 12, 16, -12, -2, -6, 2, 4, -4, 0, 8]);
ECSearch("16.2-f",(26*w + 152)*OK,[2, -2, 2, 4, -4, 4, 0, -4, 6, 6, 6, -10, 2, -6, 2, 12, -16, 6, 6, 10, 18, -2, 6, -4, 16, 8, 6, -10]);
ECSearch("16.4-a",(w + 7)*OK,[-1, -2, 2, -4, 2, -2, 6, 0, 4, -8, 6, -2, -2, 10, 0, -8, 12, -16, -6, -6, -6, 2, 20, -4, -6, -8, 8, -8, -8]);
ECSearch("16.4-b",(w + 7)*OK,[-1, 2, -2, 4, 2, 2, -6, 0, -4, -8, 6, -2, 2, -10, 0, -8, -12, 16, 6, 6, 6, -2, -20, 4, -6, -8, 8, -8, -8]);
ECSearch("16.3-a",(-26*w + 178)*OK,[2, 4, -2, -2, 2, -2, 4, 6, 0, 6, -6, 10, -8, 8, 0, -2, 0, -12, -12, 12, -16, 6, 2, 2, -4, 4, 8, 0]);
ECSearch("16.3-b",(-26*w + 178)*OK,[0, 2, -2, -2, -4, 0, 0, 2, -4, 2, -6, -8, 14, -12, 0, -14, 12, -10, 14, -10, 18, -10, -6, 10, -16, -16, 12, 4]);
ECSearch("16.3-c",(-26*w + 178)*OK,[2, -2, -2, 4, -4, 4, 4, 0, 6, 6, 6, -2, 10, 2, -6, 16, -12, -6, -6, -18, -10, -6, 2, -4, 8, 16, -10, 6]);
ECSearch("16.3-d",(-26*w + 178)*OK,[0, -2, 2, -2, 4, 0, 0, -2, -4, 2, -6, 8, -14, -12, 0, 14, -12, 10, -14, 10, -18, 10, 6, 10, -16, -16, 12, 4]);
ECSearch("16.3-e",(-26*w + 178)*OK,[-2, -4, 2, -2, -2, 2, -4, -6, 0, 6, -6, -10, 8, 8, 0, 2, 0, 12, 12, -12, 16, -6, -2, 2, -4, 4, 8, 0]);
ECSearch("16.3-f",(-26*w + 178)*OK,[-2, 2, 2, 4, 4, -4, -4, 0, 6, 6, 6, 2, -10, 2, -6, -16, 12, 6, 6, 18, 10, 6, -2, -4, 8, 16, -10, 6]);
ECSearch("16.5-a",(-w + 8)*OK,[-1, 2, -2, -4, 2, 6, -2, 4, 0, -8, -2, 6, 10, -2, -8, 0, -16, 12, -6, -6, 2, -6, -4, 20, -6, 8, -8, -8, -8]);
ECSearch("16.5-b",(-w + 8)*OK,[-1, -2, 2, 4, 2, -6, 2, -4, 0, -8, -2, 6, -10, 2, -8, 0, 16, -12, 6, 6, -2, 6, 4, -20, -6, 8, -8, -8, -8]);
ECSearch("20.1-a",(-12*w - 70)*OK,[0, 4, 4, 6, -6, -2, 4, 6, -6, -6, 10, -8, 6, 6, 12, -6, -6, -6, 10, 10, 4, -8, -4, -16, -16, -22, -10]);
ECSearch("20.1-b",(-12*w - 70)*OK,[2, 2, 0, 8, 4, 4, -8, 6, -6, -2, 14, -6, -14, 6, -8, 0, 10, 10, -18, -10, 18, -6, -20, -16, -8, 2, 14]);
ECSearch("20.1-c",(-12*w - 70)*OK,[0, 2, 4, 0, -6, -4, -4, 0, 0, -6, -10, -10, 0, 6, 12, -6, -6, 6, -10, 2, -4, -4, -10, 20, -16, -10, -4]);
ECSearch("20.1-d",(-12*w - 70)*OK,[-2, -2, 0, 4, -4, -4, -4, -6, 6, -2, 10, -6, -2, 6, -4, -12, 2, 2, -18, -2, -6, -6, -8, -16, 16, 2, -22]);
ECSearch("20.1-e",(-12*w - 70)*OK,[2, 2, -2, 0, -2, 6, 4, 6, 8, 6, 2, -12, -2, 0, -4, -8, -10, 6, -2, 6, 0, -4, -16, -8, 8, 4, -22]);
ECSearch("20.1-f",(-12*w - 70)*OK,[0, 2, -2, 0, 0, 2, -4, 0, 6, -6, -10, -4, 12, -12, 0, -18, -6, -6, -10, 2, 2, -10, 14, 8, 8, -4, 8]);
ECSearch("20.1-g",(-12*w - 70)*OK,[4, 4, 0, -2, 2, 2, -4, -6, -6, 10, 10, -12, 10, -6, -4, 6, 2, 2, -6, -14, -12, 0, 16, 8, 16, -10, -22]);
ECSearch("20.1-h",(-12*w - 70)*OK,[-4, -4, 0, 2, -2, -2, 4, -6, -6, 10, -10, 12, 10, -6, 4, -6, -2, -2, 6, 14, 12, 0, 16, 8, 16, -10, -22]);
ECSearch("20.1-i",(-12*w - 70)*OK,[0, -2, -2, 0, 0, -2, 4, 0, 6, -6, 10, 4, 12, -12, 0, 18, 6, 6, 10, -2, -2, 10, 14, 8, 8, -4, 8]);
ECSearch("20.1-j",(-12*w - 70)*OK,[-2, -2, -2, 0, 2, -6, -4, 6, 8, 6, -2, 12, -2, 0, 4, 8, 10, -6, 2, -6, 0, 4, -16, -8, 8, 4, -22]);
ECSearch("20.1-k",(-12*w - 70)*OK,[2, 2, 0, -4, 4, 4, 4, -6, 6, -2, -10, 6, -2, 6, 4, 12, -2, -2, 18, 2, 6, 6, -8, -16, 16, 2, -22]);
ECSearch("20.1-l",(-12*w - 70)*OK,[0, -2, 4, 0, 6, 4, 4, 0, 0, -6, 10, 10, 0, 6, -12, 6, 6, -6, 10, -2, 4, 4, -10, 20, -16, -10, -4]);
ECSearch("20.1-m",(-12*w - 70)*OK,[-2, -2, 0, -8, -4, -4, 8, 6, -6, -2, -14, 6, -14, 6, 8, 0, -10, -10, 18, 10, -18, 6, -20, -16, -8, 2, 14]);
ECSearch("20.1-n",(-12*w - 70)*OK,[0, -4, 4, -6, 6, 2, -4, 6, -6, -6, -10, 8, 6, 6, -12, 6, 6, 6, -10, -10, -4, 8, -4, -16, -16, -22, -10]);
ECSearch("20.2-a",(12*w - 82)*OK,[0, 4, 4, -6, 6, 4, -2, 6, -6, -6, -8, 10, 6, 6, -6, 12, -6, -6, 10, 10, -8, 4, -4, -16, -16, -10, -22]);
ECSearch("20.2-b",(12*w - 82)*OK,[2, 2, 0, 4, 8, -8, 4, 6, -2, -6, -6, 14, 6, -14, 0, -8, 10, 10, -10, -18, -6, 18, -20, -8, -16, 14, 2]);
ECSearch("20.2-c",(12*w - 82)*OK,[0, 2, 4, -6, 0, -4, -4, 0, -6, 0, -10, -10, 6, 0, -6, 12, 6, -6, 2, -10, -4, -4, -10, -16, 20, -4, -10]);
ECSearch("20.2-d",(12*w - 82)*OK,[-2, -2, 0, -4, 4, -4, -4, -6, -2, 6, -6, 10, 6, -2, -12, -4, 2, 2, -2, -18, -6, -6, -8, 16, -16, -22, 2]);
ECSearch("20.2-e",(12*w - 82)*OK,[2, 2, -2, -2, 0, 4, 6, 6, 6, 8, -12, 2, 0, -2, -8, -4, 6, -10, 6, -2, -4, 0, -16, 8, -8, -22, 4]);
ECSearch("20.2-f",(12*w - 82)*OK,[0, 2, -2, 0, 0, -4, 2, 0, -6, 6, -4, -10, -12, 12, -18, 0, -6, -6, 2, -10, -10, 2, 14, 8, 8, 8, -4]);
ECSearch("20.2-g",(12*w - 82)*OK,[4, 4, 0, 2, -2, -4, 2, -6, 10, -6, -12, 10, -6, 10, 6, -4, 2, 2, -14, -6, 0, -12, 16, 16, 8, -22, -10]);
ECSearch("20.2-h",(12*w - 82)*OK,[-4, -4, 0, -2, 2, 4, -2, -6, 10, -6, 12, -10, -6, 10, -6, 4, -2, -2, 14, 6, 0, 12, 16, 16, 8, -22, -10]);
ECSearch("20.2-i",(12*w - 82)*OK,[0, -2, -2, 0, 0, 4, -2, 0, -6, 6, 4, 10, -12, 12, 18, 0, 6, 6, -2, 10, 10, -2, 14, 8, 8, 8, -4]);
ECSearch("20.2-j",(12*w - 82)*OK,[-2, -2, -2, 2, 0, -4, -6, 6, 6, 8, 12, -2, 0, -2, 8, 4, -6, 10, -6, 2, 4, 0, -16, 8, -8, -22, 4]);
ECSearch("20.2-k",(12*w - 82)*OK,[2, 2, 0, 4, -4, 4, 4, -6, -2, 6, 6, -10, 6, -2, 12, 4, -2, -2, 2, 18, 6, 6, -8, 16, -16, -22, 2]);
ECSearch("20.2-l",(12*w - 82)*OK,[0, -2, 4, 6, 0, 4, 4, 0, -6, 0, 10, 10, 6, 0, 6, -12, -6, 6, -2, 10, 4, 4, -10, -16, 20, -4, -10]);
ECSearch("20.2-m",(12*w - 82)*OK,[-2, -2, 0, -4, -8, 8, -4, 6, -2, -6, 6, -14, 6, -14, 0, 8, -10, -10, 10, 18, 6, -18, -20, -8, -16, 14, 2]);
ECSearch("20.2-n",(12*w - 82)*OK,[0, -4, 4, 6, -6, -4, 2, 6, -6, -6, 8, -10, 6, 6, 6, -12, 6, 6, -10, -10, 8, -4, -4, -16, -16, -10, -22]);
ECSearch("25.1-a",(5)*OK,[2, -1, 3, -3, -3, 6, -6, -6, 2, -1, 2, 12, -6, 7, 1, 3, 3, 6, -12, 15, -3, 3, -15, -9, 2, 20, 15, 3]);
ECSearch("25.1-b",(5)*OK,[2, 2, 0, -3, -3, 3, 6, -6, -4, -1, -1, 0, 0, -8, -8, 12, -12, -12, 12, 15, -15, 9, -9, -21, 2, 2, -15, -15]);
ECSearch("25.1-c",(5)*OK,[-1, 2, -3, -3, -6, 3, 6, 6, 2, 2, -1, 6, -12, 1, 7, -3, -3, 12, -6, 3, -15, 15, -3, -9, 20, 2, 3, 15]);
ECSearch("25.1-d",(5)*OK,[-1, 2, 3, -3, 6, -3, -6, -6, 2, 2, -1, -6, 12, 1, 7, 3, 3, -12, 6, -3, 15, -15, 3, -9, 20, 2, 3, 15]);
ECSearch("25.1-e",(5)*OK,[2, 2, 0, -3, 3, -3, -6, 6, -4, -1, -1, 0, 0, -8, -8, -12, 12, 12, -12, -15, 15, -9, 9, -21, 2, 2, -15, -15]);
ECSearch("25.1-f",(5)*OK,[2, -1, -3, -3, 3, -6, 6, 6, 2, -1, 2, -12, 6, 7, 1, -3, -3, -6, 12, -15, 3, -3, 15, -9, 2, 20, 15, 3]);
ECSearch("28.1-a",(-64*w + 438)*OK,[0, 2, -4, 2, 6, -4, -6, 2, 6, -6, 0, -2, -2, -6, 14, -4, -6, 6, 2, -6, -4, -8, 20, 0, -16, -10, -2]);
ECSearch("28.1-b",(-64*w + 438)*OK,[0, 0, -2, 6, 6, 2, 2, 0, -6, -6, 8, 8, 0, 0, -6, -6, -6, -6, -10, -10, -4, -4, -22, -16, -16, 8, 8]);
ECSearch("28.1-c",(-64*w + 438)*OK,[2, 0, -4, 6, 2, -6, -4, 2, -6, 6, -2, 0, -6, -2, -4, 14, 6, -6, -6, 2, -8, -4, 20, -16, 0, -2, -10]);
ECSearch("28.1-d",(-64*w + 438)*OK,[-2, 0, -4, -6, -2, 6, 4, 2, -6, 6, 2, 0, -6, -2, 4, -14, -6, 6, 6, -2, 8, 4, 20, -16, 0, -2, -10]);
ECSearch("28.1-e",(-64*w + 438)*OK,[0, 0, -2, -6, -6, -2, -2, 0, -6, -6, -8, -8, 0, 0, 6, 6, 6, 6, 10, 10, 4, 4, -22, -16, -16, 8, 8]);
ECSearch("28.1-f",(-64*w + 438)*OK,[0, -2, -4, -2, -6, 4, 6, 2, 6, -6, 0, 2, -2, -6, -14, 4, 6, -6, -2, 6, 4, 8, 20, 0, -16, -10, -2]);
ECSearch("29.1-a",(-20*w + 137)*OK,[1, -1, 0, 4, 0, -2, -4, 6, -8, -2, -8, 6, -6, -8, 0, 12, 2, 6, 10, 0, -6, 16, 6, 14, 10, 16, -4, 8, -24]);
ECSearch("29.1-b",(-20*w + 137)*OK,[1, -1, 0, -4, 0, -2, 4, -6, 8, 2, -8, 6, 6, 8, 0, 12, -2, -6, -10, 0, 6, -16, -6, -14, 10, 16, -4, 8, -24]);
ECSearch("29.2-a",(20*w + 117)*OK,[-1, 1, 4, 0, 0, -2, 6, -4, -2, -8, -8, 6, -8, -6, 12, 0, 6, 2, 0, 10, 16, -6, 14, 6, 10, -4, 16, -24, 8]);
ECSearch("29.2-b",(20*w + 117)*OK,[-1, 1, -4, 0, 0, -2, -6, 4, 2, 8, -8, 6, 8, 6, 12, 0, -6, -2, 0, -10, -16, 6, -14, -6, 10, -4, 16, -24, 8]);
ECSearch("32.1-a",(4*w + 24)*OK,[-4, 0, -2, 1, 6, 2, 2, 6, -4, -3, -7, 8, -8, 3, -15, 6, -2, -16, 8, 12, 8, 12, -16, -2, 17, 11, -11, -9]);
ECSearch("32.1-b",(4*w + 24)*OK,[-2, 2, -2, 1, -2, 2, 0, -8, 0, -3, 9, -8, -8, 3, 5, 6, -2, -12, 12, 2, 6, 14, 6, 14, 13, 11, 9, 23]);
ECSearch("32.1-c",(4*w + 24)*OK,[2, -2, 2, 1, 2, -2, 0, 8, 0, -3, 9, 8, 8, 3, 5, -6, 2, 12, -12, -2, -6, -14, -6, 14, 13, 11, 9, 23]);
ECSearch("32.1-d",(4*w + 24)*OK,[4, 0, 2, 1, -6, -2, -2, -6, -4, -3, -7, -8, 8, 3, -15, -6, 2, 16, -8, -12, -8, -12, 16, -2, 17, 11, -11, -9]);
ECSearch("32.3-a",(-14*w + 96)*OK,[2, 2, 0, -6, 6, 6, -4, 4, 0, -2, -2, 10, 10, 0, 0, -12, 12, 14, 14, 6, 6, 16, -16, 10, 16, -16, 16, -16]);
ECSearch("32.3-b",(-14*w + 96)*OK,[0, -2, -2, -2, 2, 6, 6, -4, -8, 2, 6, 4, 6, -16, 0, 8, -2, -16, 0, -4, 8, 18, -10, 10, -4, 20, -8, 0]);
ECSearch("32.3-c",(-14*w + 96)*OK,[-2, 2, 4, 2, -2, 6, 0, -4, 8, 6, -2, -2, 10, 0, 8, -12, 16, -6, -6, -6, 2, -20, 4, -6, 8, -8, 8, 8]);
ECSearch("32.3-d",(-14*w + 96)*OK,[-2, -2, 0, -6, -6, -6, 4, -4, 0, -2, -2, -10, -10, 0, 0, 12, -12, -14, -14, -6, -6, -16, 16, 10, 16, -16, 16, -16]);
ECSearch("32.3-e",(-14*w + 96)*OK,[0, 2, 2, -2, -2, -6, -6, 4, -8, 2, 6, -4, -6, -16, 0, -8, 2, 16, 0, 4, -8, -18, 10, 10, -4, 20, -8, 0]);
ECSearch("32.3-f",(-14*w + 96)*OK,[2, -2, -4, 2, 2, -6, 0, 4, 8, 6, -2, 2, -10, 0, 8, 12, -16, 6, 6, 6, -2, 20, -4, -6, 8, -8, 8, 8]);
ECSearch("32.5-a",(w + 8)*OK,[-1, -2, 2, 0, 2, 2, -6, 4, 4, 4, -2, -2, -10, -14, 12, -12, 12, 4, 6, 6, -2, -10, -8, 16, 10, 16, 16, -4, -20]);
ECSearch("32.5-b",(w + 8)*OK,[-1, 2, -2, 0, 2, -2, 6, -4, -4, 4, -2, -2, 10, 14, 12, -12, -12, -4, -6, -6, 2, 10, 8, -16, 10, 16, 16, -4, -20]);
ECSearch("32.2-a",(-4*w + 28)*OK,[0, -4, -2, 1, 2, 6, 6, 2, -4, -7, -3, -8, 8, -15, 3, -2, 6, 8, -16, 8, 12, -16, 12, -2, 11, 17, -9, -11]);
ECSearch("32.2-b",(-4*w + 28)*OK,[2, -2, -2, 1, 2, -2, -8, 0, 0, 9, -3, -8, -8, 5, 3, -2, 6, 12, -12, 6, 2, 6, 14, 14, 11, 13, 23, 9]);
ECSearch("32.2-c",(-4*w + 28)*OK,[-2, 2, 2, 1, -2, 2, 8, 0, 0, 9, -3, 8, 8, 5, 3, 2, -6, -12, 12, -6, -2, -6, -14, 14, 11, 13, 23, 9]);
ECSearch("32.2-d",(-4*w + 28)*OK,[0, 4, 2, 1, -2, -6, -6, -2, -4, -7, -3, 8, -8, -15, 3, 2, -6, -8, 16, -8, -12, 16, -12, -2, 11, 17, -9, -11]);
ECSearch("32.4-a",(14*w + 82)*OK,[2, 2, 0, -6, 6, 6, 4, -4, 0, -2, -2, 10, 10, 0, 0, 12, -12, 14, 14, 6, 6, -16, 16, 10, -16, 16, -16, 16]);
ECSearch("32.4-b",(14*w + 82)*OK,[-2, 0, -2, -2, 6, 2, -4, 6, -8, 6, 2, 6, 4, 0, -16, -2, 8, 0, -16, 8, -4, -10, 18, 10, 20, -4, 0, -8]);
ECSearch("32.4-c",(14*w + 82)*OK,[2, -2, 4, 2, 6, -2, -4, 0, 8, -2, 6, 10, -2, 8, 0, 16, -12, -6, -6, 2, -6, 4, -20, -6, -8, 8, 8, 8]);
ECSearch("32.4-d",(14*w + 82)*OK,[-2, -2, 0, -6, -6, -6, -4, 4, 0, -2, -2, -10, -10, 0, 0, -12, 12, -14, -14, -6, -6, 16, -16, 10, -16, 16, -16, 16]);
ECSearch("32.4-e",(14*w + 82)*OK,[2, 0, 2, -2, -6, -2, 4, -6, -8, 6, 2, -6, -4, 0, -16, 2, -8, 0, 16, -8, 4, 10, -18, 10, 20, -4, 0, -8]);
ECSearch("32.4-f",(14*w + 82)*OK,[-2, 2, -4, 2, -6, 2, 4, 0, 8, -2, 6, -10, 2, 8, 0, -16, 12, 6, 6, -2, 6, -4, 20, -6, -8, 8, 8, 8]);
ECSearch("32.6-a",(-w + 9)*OK,[-1, 2, -2, 0, 2, -6, 2, 4, 4, 4, -2, -2, -14, -10, -12, 12, 4, 12, 6, 6, -10, -2, 16, -8, 10, 16, 16, -20, -4]);
ECSearch("32.6-b",(-w + 9)*OK,[-1, -2, 2, 0, 2, 6, -2, -4, -4, 4, -2, -2, 14, 10, -12, 12, -4, -12, -6, -6, 10, 2, -16, 8, 10, 16, 16, -20, -4]);
ECSearch("34.1-a",(w + 2)*OK,[-2, -1, 3, 4, 2, -3, -1, 4, 4, -4, 6, -1, -7, 4, -6, 12, 6, 6, -3, -5, 18, -10, 5, 16, 5, 0, 15, 0]);
ECSearch("34.1-b",(w + 2)*OK,[-2, 1, -3, -4, 2, 3, 1, -4, 4, -4, 6, 1, 7, 4, -6, -12, -6, -6, 3, 5, -18, 10, -5, 16, 5, 0, 15, 0]);
ECSearch("34.4-a",(w - 3)*OK,[-2, 3, -1, 4, 2, -3, 4, -1, 4, 6, -4, -7, -1, -6, 4, 6, 12, -3, 6, 18, -5, 5, -10, 16, 0, 5, 0, 15]);
ECSearch("34.4-b",(w - 3)*OK,[-2, -3, 1, -4, 2, 3, -4, 1, 4, 6, -4, 7, 1, -6, 4, -6, -12, 3, -6, -18, 5, -5, 10, 16, 0, 5, 0, 15]);
ECSearch("35.1-a",(-2*w + 15)*OK,[-1, 0, 1, -4, 8, -6, 8, 8, 6, 0, -2, 10, -9, -2, -3, -17, 4, 1, -14, -16, -16, -14, -19, -6, 5, 16, -12, -5]);
ECSearch("35.1-b",(-2*w + 15)*OK,[-1, 0, -1, -4, -8, 6, -8, -8, 6, 0, -2, -10, 9, -2, -3, 17, -4, -1, 14, 16, 16, 14, 19, -6, 5, 16, -12, -5]);
ECSearch("35.2-a",(-2*w - 13)*OK,[0, -1, 1, -4, -6, 8, 8, 8, 6, -2, 0, -9, 10, -3, -2, 4, -17, -14, 1, -16, -16, -19, -14, -6, 16, 5, -5, -12]);
ECSearch("35.2-b",(-2*w - 13)*OK,[0, -1, -1, -4, 6, -8, -8, -8, 6, -2, 0, 9, -10, -3, -2, -4, 17, 14, -1, 16, 16, 19, 14, -6, 16, 5, -5, -12]);
ECSearch("36.1-a",(6)*OK,[4, -4, 0, 0, 0, -4, 4, 0, 2, 2, 4, -4, 8, 8, 12, -12, 8, -8, 8, -8, -8, 8, -6, 16, 16, 8, 8]);
ECSearch("36.1-b",(6)*OK,[-4, 4, 0, 0, 0, 4, -4, 0, 2, 2, -4, 4, 8, 8, -12, 12, -8, 8, -8, 8, 8, -8, -6, 16, 16, 8, 8]);
ECSearch("38.2-a",(-51*w + 349)*OK,[1, 2, 4, 2, 2, -4, 0, 6, 0, -2, 2, -10, -8, 4, 4, -8, 6, -6, 2, -2, 2, 6, -10, 10, -8, 16, 16, -4]);
ECSearch("38.2-b",(-51*w + 349)*OK,[-1, 2, 4, -2, -4, 2, 6, 0, -6, -4, -2, -2, -10, 14, -4, 4, 12, -6, 14, 2, 10, 6, 4, -14, -8, 4, 22, 20]);
ECSearch("38.2-c",(-51*w + 349)*OK,[-2, -1, 4, 2, 5, 2, -3, 0, 9, -5, 5, 8, 13, -8, -8, -14, -9, 15, -10, -8, 17, 6, 11, -8, -17, -2, -23, 2]);
ECSearch("38.2-d",(-51*w + 349)*OK,[-1, -2, 2, -4, 2, -2, 6, 0, 0, -10, -2, 14, 10, 8, -16, -4, 0, -6, 10, 10, 2, -12, -4, 10, -8, -8, 16, -16]);
ECSearch("38.2-e",(-51*w + 349)*OK,[-2, 1, 2, 4, -1, -2, -3, 0, 3, 1, 5, -2, 5, 16, -14, -4, 3, 9, 16, 14, 7, -18, 7, -2, 19, 4, 7, 2]);
ECSearch("38.2-f",(-51*w + 349)*OK,[-1, 2, -2, 4, 2, 2, -6, 0, 0, -10, -2, -14, -10, 8, -16, 4, 0, 6, -10, -10, -2, 12, 4, 10, -8, -8, 16, -16]);
ECSearch("38.2-g",(-51*w + 349)*OK,[-2, -1, -2, -4, -1, 2, 3, 0, 3, 1, 5, 2, -5, 16, -14, 4, -3, -9, -16, -14, -7, 18, -7, -2, 19, 4, 7, 2]);
ECSearch("38.2-h",(-51*w + 349)*OK,[1, -2, -4, -2, 2, 4, 0, -6, 0, -2, 2, 10, 8, 4, 4, 8, -6, 6, -2, 2, -2, -6, 10, 10, -8, 16, 16, -4]);
ECSearch("38.2-i",(-51*w + 349)*OK,[-1, -2, -4, 2, -4, -2, -6, 0, -6, -4, -2, 2, 10, 14, -4, -4, -12, 6, -14, -2, -10, -6, -4, -14, -8, 4, 22, 20]);
ECSearch("38.2-j",(-51*w + 349)*OK,[-2, 1, -4, -2, 5, -2, 3, 0, 9, -5, 5, -8, -13, -8, -8, 14, 9, -15, 10, 8, -17, -6, -11, -8, -17, -2, -23, 2]);
ECSearch("38.3-a",(51*w + 298)*OK,[1, 4, 2, 2, 2, 0, -4, 6, 0, 2, -2, -8, -10, 4, 4, 6, -8, 2, -6, 2, -2, -10, 6, 10, 16, -8, -4, 16]);
ECSearch("38.3-b",(51*w + 298)*OK,[-1, 4, 2, -2, -4, 6, 2, 0, -6, -2, -4, -10, -2, -4, 14, 12, 4, 14, -6, 10, 2, 4, 6, -14, 4, -8, 20, 22]);
ECSearch("38.3-c",(51*w + 298)*OK,[-2, 4, -1, 2, 5, -3, 2, 0, 9, 5, -5, 13, 8, -8, -8, -9, -14, -10, 15, 17, -8, 11, 6, -8, -2, -17, 2, -23]);
ECSearch("38.3-d",(51*w + 298)*OK,[-1, 2, -2, -4, 2, 6, -2, 0, 0, -2, -10, 10, 14, -16, 8, 0, -4, 10, -6, 2, 10, -4, -12, 10, -8, -8, -16, 16]);
ECSearch("38.3-e",(51*w + 298)*OK,[-2, 2, 1, 4, -1, -3, -2, 0, 3, 5, 1, 5, -2, -14, 16, 3, -4, 16, 9, 7, 14, 7, -18, -2, 4, 19, 2, 7]);
ECSearch("38.3-f",(51*w + 298)*OK,[-1, -2, 2, 4, 2, -6, 2, 0, 0, -2, -10, -10, -14, -16, 8, 0, 4, -10, 6, -2, -10, 4, 12, 10, -8, -8, -16, 16]);
ECSearch("38.3-g",(51*w + 298)*OK,[-2, -2, -1, -4, -1, 3, 2, 0, 3, 5, 1, -5, 2, -14, 16, -3, 4, -16, -9, -7, -14, -7, 18, -2, 4, 19, 2, 7]);
ECSearch("38.3-h",(51*w + 298)*OK,[1, -4, -2, -2, 2, 0, 4, -6, 0, 2, -2, 8, 10, 4, 4, -6, 8, -2, 6, -2, 2, 10, -6, 10, 16, -8, -4, 16]);
ECSearch("38.3-i",(51*w + 298)*OK,[-1, -4, -2, 2, -4, -6, -2, 0, -6, -2, -4, 10, 2, -4, 14, -12, -4, -14, 6, -10, -2, -4, -6, -14, 4, -8, 20, 22]);
ECSearch("38.3-j",(51*w + 298)*OK,[-2, -4, 1, -2, 5, 3, -2, 0, 9, 5, -5, -13, -8, -8, -8, 9, 14, 10, -15, -17, 8, -11, -6, -8, -2, -17, 2, -23]);
