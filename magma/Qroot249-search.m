print "Field 2.2.249.1";
Qx<x> := PolynomialRing(RationalField());
K<w> := NumberField(x^2 - x - 62);
OK := Integers(K);
Plist := [];
Append(~Plist,(-59*w - 436)*OK);
Append(~Plist,(59*w - 495)*OK);
Append(~Plist,(-454*w + 3809)*OK);
Append(~Plist,(-18*w - 133)*OK);
Append(~Plist,(-18*w + 151)*OK);
Append(~Plist,(2*w - 17)*OK);
Append(~Plist,(-2*w - 15)*OK);
Append(~Plist,(218*w - 1829)*OK);
Append(~Plist,(218*w + 1611)*OK);
Append(~Plist,(28*w + 207)*OK);
Append(~Plist,(28*w - 235)*OK);
Append(~Plist,(-136*w + 1141)*OK);
Append(~Plist,(-136*w - 1005)*OK);
Append(~Plist,(-2*w + 15)*OK);
Append(~Plist,(2*w + 13)*OK);
Append(~Plist,(-12*w + 101)*OK);
Append(~Plist,(-12*w - 89)*OK);
Append(~Plist,(-1480*w - 10937)*OK);
Append(~Plist,(1480*w - 12417)*OK);
Append(~Plist,(-2388*w - 17647)*OK);
Append(~Plist,(690*w + 5099)*OK);
Append(~Plist,(690*w - 5789)*OK);
Append(~Plist,(-14*w - 103)*OK);
Append(~Plist,(14*w - 117)*OK);
Append(~Plist,(-44*w - 325)*OK);
Append(~Plist,(44*w - 369)*OK);
Append(~Plist,(1244*w + 9193)*OK);
Append(~Plist,(-1244*w + 10437)*OK);
Append(~Plist,(11)*OK);
Append(~Plist,(-182*w - 1345)*OK);
Append(~Plist,(182*w - 1527)*OK);
Append(~Plist,(-34*w + 285)*OK);
Append(~Plist,(34*w + 251)*OK);
Append(~Plist,(-2*w + 11)*OK);
Append(~Plist,(2*w + 9)*OK);
Append(~Plist,(-2*w + 21)*OK);
Append(~Plist,(2*w + 19)*OK);
Append(~Plist,(13)*OK);
Append(~Plist,(-372*w + 3121)*OK);
Append(~Plist,(-372*w - 2749)*OK);
Append(~Plist,(16*w - 135)*OK);
Append(~Plist,(16*w + 119)*OK);
Append(~Plist,(110*w + 813)*OK);
Append(~Plist,(110*w - 923)*OK);
Append(~Plist,(4*w - 37)*OK);
Append(~Plist,(-4*w - 33)*OK);
Append(~Plist,(-2*w + 5)*OK);
Append(~Plist,(-2*w - 3)*OK);
Append(~Plist,(-80*w - 591)*OK);
Append(~Plist,(-80*w + 671)*OK);
Append(~Plist,(-8*w - 61)*OK);
Append(~Plist,(-8*w + 69)*OK);
Append(~Plist,(-20*w - 147)*OK);
Append(~Plist,(20*w - 167)*OK);
Append(~Plist,(-2506*w - 18519)*OK);
Append(~Plist,(2506*w - 21025)*OK);
Append(~Plist,(-8*w - 57)*OK);
Append(~Plist,(-8*w + 65)*OK);
Append(~Plist,(-490*w + 4111)*OK);
Append(~Plist,(-490*w - 3621)*OK);
Append(~Plist,(-772*w + 6477)*OK);
Append(~Plist,(772*w + 5705)*OK);
Append(~Plist,(290*w + 2143)*OK);
Append(~Plist,(-290*w + 2433)*OK);
Append(~Plist,(17)*OK);
Append(~Plist,(16*w - 133)*OK);
Append(~Plist,(-16*w - 117)*OK);
Append(~Plist,(-264*w - 1951)*OK);
Append(~Plist,(264*w - 2215)*OK);
Append(~Plist,(1044*w + 7715)*OK);
Append(~Plist,(1044*w - 8759)*OK);
Append(~Plist,(3060*w + 22613)*OK);
Append(~Plist,(-3060*w + 25673)*OK);
Append(~Plist,(19)*OK);
Append(~Plist,(-4*w - 35)*OK);
Append(~Plist,(4*w - 39)*OK);
Append(~Plist,(50*w - 419)*OK);
Append(~Plist,(50*w + 369)*OK);
Append(~Plist,(-228*w + 1913)*OK);
Append(~Plist,(-228*w - 1685)*OK);
Append(~Plist,(-120*w + 1007)*OK);
Append(~Plist,(-120*w - 887)*OK);
Append(~Plist,(-10*w - 71)*OK);
Append(~Plist,(-10*w + 81)*OK);
Append(~Plist,(-1834*w - 13553)*OK);
Append(~Plist,(1834*w - 15387)*OK);
Append(~Plist,(6*w - 55)*OK);
Append(~Plist,(-6*w - 49)*OK);
Append(~Plist,(-4*w - 21)*OK);
Append(~Plist,(4*w - 25)*OK);
Append(~Plist,(-244*w + 2047)*OK);
Append(~Plist,(-244*w - 1803)*OK);
Append(~Plist,(10*w - 87)*OK);
Append(~Plist,(10*w + 77)*OK);
Append(~Plist,(8*w - 63)*OK);
Append(~Plist,(8*w + 55)*OK);
Append(~Plist,(-94*w - 695)*OK);
Append(~Plist,(94*w - 789)*OK);
Append(~Plist,(23)*OK);
Append(~Plist,(-1798*w + 15085)*OK);
effort := 400;
ECSearch := procedure(class_label, N, aplist);
print "Isogeny class ", class_label;
goodP := [P: P in Plist | Valuation(N,P) eq 0];
goodP := [goodP[i]: i in [1..#(aplist)]];
curves := EllipticCurveSearch(N,effort : Primes:=goodP, Traces:=aplist);
curves := [E: E in curves | &and[TraceOfFrobenius(E,goodP[i]) eq aplist[i] : i in [1..#(aplist)]]];
if #curves eq 0 then print "No curve found"; end if;
for E in curves do;
 a1,a2,a3,a4,a6:=Explode(aInvariants(E));
 printf "Curve [%o,%o,%o,%o,%o]\n",a1,a2,a3,a4,a6;
 end for;
end procedure;
SetColumns(0);

ECSearch("3.1-a",(-454*w + 3809)*OK,[1, -1, 3, -3, -2, -2, 8, 8, 1, 1, 6, -6, -1, 1, -9, -9, -10, 10, 0, -15, 15, 3, -3, -18, 18, -17, -17, -21, -4]);
ECSearch("3.1-b",(-454*w + 3809)*OK,[-1, 1, -3, 3, -2, -2, 8, 8, 1, 1, -6, 6, 1, -1, -9, -9, 10, -10, 0, 15, -15, -3, 3, 18, -18, -17, -17, -21, -4]);
ECSearch("4.1-a",(2)*OK,[1, 0, 0, -1, -1, 5, 5, -7, -7, 6, -6, -6, 6, -1, -1, -12, 12, 0, -18, 18, -12, 12, 6, -6, -7, -7, -13, 11]);
ECSearch("4.1-b",(2)*OK,[1, 0, 0, -1, -1, 5, 5, -7, -7, -6, 6, 6, -6, -1, -1, 12, -12, 0, 18, -18, 12, -12, -6, 6, -7, -7, -13, 11]);
ECSearch("6.1-a",(w + 7)*OK,[1, 3, 1, -2, -2, -8, 0, -7, 1, -2, 2, -9, -11, -13, 11, -2, -6, 16, 9, 3, -13, 9, 6, 2, 19, -13, -13, -4]);
ECSearch("6.1-b",(w + 7)*OK,[-1, -3, -1, -2, -2, -8, 0, -7, 1, 2, -2, 9, 11, -13, 11, 2, 6, -16, -9, -3, 13, -9, -6, -2, 19, -13, -13, -4]);
ECSearch("6.2-a",(-w + 8)*OK,[1, 1, 3, -2, -2, 0, -8, 1, -7, 2, -2, -11, -9, 11, -13, -6, -2, 16, 3, 9, 9, -13, 2, 6, -13, 19, -13, -4]);
ECSearch("6.2-b",(-w + 8)*OK,[-1, -1, -3, -2, -2, 0, -8, 1, -7, -2, 2, 11, 9, 11, -13, 6, 2, -16, -3, -9, -9, 13, -2, -6, -13, 19, -13, -4]);
ECSearch("8.1-a",(-118*w - 872)*OK,[-1, 2, 2, 5, -1, 1, 7, 3, -3, -12, 6, -4, 2, 5, -13, 14, 14, 12, 2, 8, -6, -6, -12, -6, 5, 11, -5, 1]);
ECSearch("8.1-b",(-118*w - 872)*OK,[2, 1, 1, 2, -4, -2, 4, -3, 9, -12, -12, -11, 1, 5, 5, 4, -14, 0, -17, -5, -15, -15, 6, 0, -7, 17, -5, 4]);
ECSearch("8.1-c",(-118*w - 872)*OK,[2, -1, -1, 2, -4, -2, 4, -3, 9, 12, 12, 11, -1, 5, 5, -4, 14, 0, 17, 5, 15, 15, -6, 0, -7, 17, -5, 4]);
ECSearch("8.1-d",(-118*w - 872)*OK,[-1, -2, -2, 5, -1, 1, 7, 3, -3, 12, -6, 4, -2, 5, -13, -14, -14, -12, -2, -8, 6, 6, 12, 6, 5, 11, -5, 1]);
ECSearch("8.2-a",(118*w - 990)*OK,[-1, 2, 2, -1, 5, 7, 1, -3, 3, 6, -12, 2, -4, -13, 5, 14, 14, 12, 8, 2, -6, -6, -6, -12, 11, 5, -5, 7]);
ECSearch("8.2-b",(118*w - 990)*OK,[2, 1, 1, -4, 2, 4, -2, 9, -3, -12, -12, 1, -11, 5, 5, -14, 4, 0, -5, -17, -15, -15, 0, 6, 17, -7, -5, -8]);
ECSearch("8.2-c",(118*w - 990)*OK,[2, -1, -1, -4, 2, 4, -2, 9, -3, 12, 12, -1, 11, 5, 5, 14, -4, 0, 5, 17, 15, 15, 0, -6, 17, -7, -5, -8]);
ECSearch("8.2-d",(118*w - 990)*OK,[-1, -2, -2, -1, 5, 7, 1, -3, 3, -6, 12, -2, 4, -13, 5, -14, -14, -12, -8, -2, 6, 6, 6, 12, 11, 5, -5, 7]);
ECSearch("10.2-a",(-41*w - 303)*OK,[0, -2, 3, -1, -1, 5, -4, -7, 2, 0, 3, 6, -6, 8, -10, -15, 6, 6, 0, 0, 0, -6, 12, -3, 2, 11, -4, 2]);
ECSearch("10.2-b",(-41*w - 303)*OK,[0, -2, -3, -1, -1, 5, -4, -7, 2, 0, -3, -6, 6, 8, -10, 15, -6, -6, 0, 0, 0, 6, -12, 3, 2, 11, -4, 2]);
ECSearch("10.3-a",(-41*w + 344)*OK,[0, -2, 3, -1, -1, -4, 5, 2, -7, 3, 0, -6, 6, -10, 8, 6, -15, 6, 0, 0, -6, 0, -3, 12, 11, 2, -4, 2]);
ECSearch("10.3-b",(-41*w + 344)*OK,[0, -2, -3, -1, -1, -4, 5, 2, -7, -3, 0, 6, -6, -10, 8, -6, 15, -6, 0, 0, 6, 0, 3, -12, 11, 2, -4, 2]);
ECSearch("12.1-a",(-908*w + 7618)*OK,[4, 3, -4, 3, -2, -9, 6, -8, 12, -5, -4, -3, 1, 15, 6, -6, 0, 11, 10, 8, -15, 8, 20, -14, 14, -7, -1]);
ECSearch("12.1-b",(-908*w + 7618)*OK,[3, 4, 3, -4, -9, -2, -8, 6, -5, 12, -3, -4, 15, 1, -6, 6, 0, 10, 11, -15, 8, 20, 8, 14, -14, -7, -22]);
ECSearch("12.1-c",(-908*w + 7618)*OK,[2, -2, 4, 4, 0, 0, -2, -2, 0, 0, 6, -6, 10, 10, 8, -8, 0, -14, 14, 10, -10, 16, -16, -6, -6, -22, 0]);
ECSearch("12.1-d",(-908*w + 7618)*OK,[-2, 2, 4, 4, 0, 0, -2, -2, 0, 0, -6, 6, 10, 10, -8, 8, 0, 14, -14, -10, 10, -16, 16, -6, -6, -22, 0]);
ECSearch("12.1-e",(-908*w + 7618)*OK,[-3, -4, 3, -4, -9, -2, -8, 6, 5, -12, 3, 4, 15, 1, 6, -6, 0, -10, -11, 15, -8, -20, -8, 14, -14, -7, -22]);
ECSearch("12.1-f",(-908*w + 7618)*OK,[-4, -3, -4, 3, -2, -9, 6, -8, -12, 5, 4, 3, 1, 15, -6, 6, 0, -11, -10, -8, 15, -8, -20, -14, 14, -7, -1]);
ECSearch("12.2-a",(-23*w + 193)*OK,[1, 0, 1, 1, 4, -5, 0, -1, -2, -11, -7, 0, 10, 2, -4, -8, 6, 1, -12, 15, -10, 6, 0, -13, 4, -10, -7, -16]);
ECSearch("12.2-b",(-23*w + 193)*OK,[-1, 0, -1, 1, 4, -5, 0, -1, -2, 11, 7, 0, -10, 2, -4, 8, -6, -1, 12, -15, 10, -6, 0, 13, 4, -10, -7, -16]);
ECSearch("12.3-a",(23*w + 170)*OK,[1, 1, 0, 4, 1, 0, -5, -2, -1, -7, -11, 10, 0, -4, 2, 6, -8, 1, 15, -12, 6, -10, -13, 0, -10, 4, -7, 5]);
ECSearch("12.3-b",(23*w + 170)*OK,[-1, -1, 0, 4, 1, 0, -5, -2, -1, 7, 11, -10, 0, -4, 2, -6, 8, -1, -15, 12, -6, 10, 13, 0, -10, 4, -7, 5]);
ECSearch("15.1-a",(-8*w + 67)*OK,[2, 1, -3, 1, -2, 2, 8, -8, 7, -9, 3, 1, 5, -9, 9, 7, 2, 6, 15, -12, 3, 12, -12, 12, -2, 16, -12, -1]);
ECSearch("15.1-b",(-8*w + 67)*OK,[1, 0, 3, 1, 1, -2, 9, 8, 1, 9, 8, -6, -2, 0, 2, -12, -1, 0, 18, -14, 12, 8, 1, 4, 5, 2, -12, -2]);
ECSearch("15.1-c",(-8*w + 67)*OK,[-1, 0, -3, 1, 1, -2, 9, 8, 1, -9, -8, 6, 2, 0, 2, 12, 1, 0, -18, 14, -12, -8, -1, -4, 5, 2, -12, -2]);
ECSearch("15.1-d",(-8*w + 67)*OK,[-2, -1, 3, 1, -2, 2, 8, -8, 7, 9, -3, -1, -5, -9, 9, -7, -2, -6, -15, 12, -3, -12, 12, -12, -2, 16, -12, -1]);
ECSearch("15.2-a",(-8*w - 59)*OK,[1, 2, -3, -2, 1, 8, 2, 7, -8, 3, -9, 5, 1, 9, -9, 2, 7, 6, -12, 15, 12, 3, 12, -12, 16, -2, -12, -4]);
ECSearch("15.2-b",(-8*w - 59)*OK,[0, 1, 3, 1, 1, 9, -2, 1, 8, 8, 9, -2, -6, 2, 0, -1, -12, 0, -14, 18, 8, 12, 4, 1, 2, 5, -12, -16]);
ECSearch("15.2-c",(-8*w - 59)*OK,[0, -1, -3, 1, 1, 9, -2, 1, 8, -8, -9, 2, 6, 2, 0, 1, 12, 0, 14, -18, -8, -12, -4, -1, 2, 5, -12, -16]);
ECSearch("15.2-d",(-8*w - 59)*OK,[-1, -2, 3, -2, 1, 8, 2, 7, -8, -3, 9, -5, -1, 9, -9, -2, -7, -6, 12, -15, -12, -3, -12, 12, 16, -2, -12, -4]);
ECSearch("16.1-a",(4)*OK,[1, 4, -4, 1, 1, 3, 3, -5, -5, 12, -12, 0, 0, 13, 13, -8, 8, 0, -16, 16, 8, -8, -16, 16, 15, 15, -13, -3]);
ECSearch("16.1-b",(4)*OK,[1, -4, 4, 1, 1, 3, 3, -5, -5, -12, 12, 0, 0, 13, 13, 8, -8, 0, 16, -16, -8, 8, 16, -16, 15, 15, -13, -3]);
ECSearch("16.2-a",(10*w + 74)*OK,[1, 4, 0, 3, 3, 9, 9, 5, -11, -2, -6, 10, 2, -5, -13, 0, -8, -12, -14, -6, -12, 12, -6, 2, -19, 5, -5, -1]);
ECSearch("16.2-b",(10*w + 74)*OK,[-3, 0, 2, 5, -3, -1, -5, -5, 3, -4, 6, 12, -8, -15, 1, -12, -16, 2, -4, -8, -14, -18, -2, 18, 11, -13, -1, 17]);
ECSearch("16.2-c",(10*w + 74)*OK,[-3, 0, -2, 5, -3, -1, -5, -5, 3, 4, -6, -12, 8, -15, 1, 12, 16, -2, 4, 8, 14, 18, 2, -18, 11, -13, -1, 17]);
ECSearch("16.2-d",(10*w + 74)*OK,[1, -4, 0, 3, 3, 9, 9, 5, -11, 2, 6, -10, -2, -5, -13, 0, 8, 12, 14, 6, 12, -12, 6, -2, -19, 5, -5, -1]);
ECSearch("16.4-a",(395*w + 2919)*OK,[1, 1, 0, 2, 1, 5, -1, 7, -1, 3, 8, 2, 8, 4, 5, -7, -12, 0, 18, 0, 12, 10, -18, -6, -2, 11, 15, -1, 21]);
ECSearch("16.4-b",(395*w + 2919)*OK,[-1, 1, 0, -2, 1, 5, -1, 7, -1, 3, -8, -2, -8, -4, 5, -7, 12, 0, -18, 0, -12, -10, 18, 6, 2, 11, 15, -1, 21]);
ECSearch("16.3-a",(-10*w + 84)*OK,[1, 0, 4, 3, 3, 9, 9, -11, 5, -6, -2, 2, 10, -13, -5, -8, 0, -12, -6, -14, 12, -12, 2, -6, 5, -19, -5, 7]);
ECSearch("16.3-b",(-10*w + 84)*OK,[-3, 2, 0, -3, 5, -5, -1, 3, -5, 6, -4, -8, 12, 1, -15, -16, -12, 2, -8, -4, -18, -14, 18, -2, -13, 11, -1, -11]);
ECSearch("16.3-c",(-10*w + 84)*OK,[-3, -2, 0, -3, 5, -5, -1, 3, -5, -6, 4, 8, -12, 1, -15, 16, 12, -2, 8, 4, 18, 14, -18, 2, -13, 11, -1, -11]);
ECSearch("16.3-d",(-10*w + 84)*OK,[1, 0, -4, 3, 3, 9, 9, -11, 5, 6, 2, -2, -10, -13, -5, 8, 0, 12, 6, 14, -12, 12, -2, 6, 5, -19, -5, 7]);
ECSearch("16.5-a",(-395*w + 3314)*OK,[1, 1, 2, 0, 5, 1, 7, -1, 3, -1, 2, 8, 4, 8, -7, 5, 0, -12, 18, 12, 0, -18, 10, -2, -6, 15, 11, -1, -3]);
ECSearch("16.5-b",(-395*w + 3314)*OK,[-1, 1, -2, 0, 5, 1, 7, -1, 3, -1, -2, -8, -4, -8, -7, 5, 0, 12, -18, -12, 0, 18, -10, 2, 6, 15, 11, -1, -3]);
ECSearch("20.1-a",(-36*w - 266)*OK,[2, -2, 4, 0, 4, 0, -6, 6, 0, -4, -6, 6, -10, -6, -12, -8, 14, -12, -4, 2, -18, 2, 2, 10, -6, -10, -8]);
ECSearch("20.1-b",(-36*w - 266)*OK,[2, 2, 4, 0, 4, 0, -6, 6, 0, 4, 6, -6, -10, -6, 12, 8, -14, 12, 4, -2, 18, -2, -2, 10, -6, -10, -8]);
ECSearch("20.1-c",(-36*w - 266)*OK,[2, -2, -2, 0, -8, 6, -12, 6, 0, 2, 0, 6, 8, 6, 0, 10, 14, -6, 14, -10, 0, 8, 8, 10, -6, 14, 16]);
ECSearch("20.1-d",(-36*w - 266)*OK,[2, 2, -2, 0, -8, 6, -12, 6, 0, -2, 0, -6, 8, 6, 0, -10, -14, 6, -14, 10, 0, -8, -8, 10, -6, 14, 16]);
ECSearch("20.2-a",(-36*w + 302)*OK,[2, -2, 0, 4, 0, 4, 6, -6, -4, 0, 6, -6, -6, -10, -8, -12, 14, -4, -12, -18, 2, 2, 2, -6, 10, -10, 8]);
ECSearch("20.2-b",(-36*w + 302)*OK,[2, 2, 0, 4, 0, 4, 6, -6, 4, 0, -6, 6, -6, -10, 8, 12, -14, 4, 12, 18, -2, -2, -2, -6, 10, -10, 8]);
ECSearch("20.2-c",(-36*w + 302)*OK,[2, -2, 0, -2, 6, -8, 6, -12, 2, 0, 6, 0, 6, 8, 10, 0, 14, 14, -6, 0, -10, 8, 8, -6, 10, 14, -16]);
ECSearch("20.2-d",(-36*w + 302)*OK,[2, 2, 0, -2, 6, -8, 6, -12, -2, 0, -6, 0, 6, 8, -10, 0, -14, -14, 6, 0, 10, -8, -8, -6, 10, 14, -16]);
ECSearch("21.1-a",(100*w - 839)*OK,[2, 1, 0, 3, -2, -7, -1, 4, -2, -3, 0, 4, 14, -3, 0, -5, 8, -6, -6, -6, -15, 12, -18, -15, -2, -14, -6, 8]);
ECSearch("21.1-b",(100*w - 839)*OK,[-2, -1, 0, -3, -2, -7, -1, 4, -2, 3, 0, -4, -14, -3, 0, 5, -8, 6, 6, 6, 15, -12, 18, 15, -2, -14, -6, 8]);
ECSearch("21.2-a",(-100*w - 739)*OK,[1, 2, 3, 0, -2, -1, -7, -2, 4, 0, -3, 14, 4, 0, -3, 8, -5, -6, -6, -6, 12, -15, -15, -18, -14, -2, -6, -13]);
ECSearch("21.2-b",(-100*w - 739)*OK,[-1, -2, -3, 0, -2, -1, -7, -2, 4, 0, 3, -14, -4, 0, -3, -8, 5, 6, 6, 6, -12, 15, 15, 18, -14, -2, -6, -13]);
ECSearch("24.1-a",(2*w + 14)*OK,[4, -1, 1, -2, -9, 0, 7, 10, 3, 3, -6, -6, 4, -8, -14, 8, 15, -10, 13, 14, -14, 20, 13, 0, -12, 5, 6]);
ECSearch("24.1-b",(2*w + 14)*OK,[2, 1, -5, -2, -1, 2, 1, -2, 7, 5, 10, -10, -10, -4, 12, 0, 9, 4, -1, 12, 6, 12, -9, -20, 4, 5, 4]);
ECSearch("24.1-c",(2*w + 14)*OK,[2, -1, -1, 2, 7, -2, -3, 6, -3, 3, 2, 2, 14, -4, -4, -4, 15, -4, -7, 0, 18, -12, 9, -4, 8, 13, -20]);
ECSearch("24.1-d",(2*w + 14)*OK,[2, -3, -1, 0, 7, 6, -3, -2, -9, -7, -8, 6, -8, 0, -6, -6, -3, -2, -13, 4, -6, 4, -17, 16, -10, 5, 2]);
ECSearch("24.1-e",(2*w + 14)*OK,[0, 1, -3, 2, -9, 4, -5, -6, 1, -3, -6, -10, 12, -8, 6, 12, 9, -14, -13, -18, 14, 20, 11, -16, 16, 5, 14]);
ECSearch("24.1-f",(2*w + 14)*OK,[0, -1, -3, 2, -9, 4, -5, -6, -1, 3, 6, 10, 12, -8, -6, -12, -9, 14, 13, 18, -14, -20, -11, -16, 16, 5, 14]);
ECSearch("24.1-g",(2*w + 14)*OK,[-2, 3, -1, 0, 7, 6, -3, -2, 9, 7, 8, -6, -8, 0, 6, 6, 3, 2, 13, -4, 6, -4, 17, 16, -10, 5, 2]);
ECSearch("24.1-h",(2*w + 14)*OK,[-2, 1, -1, 2, 7, -2, -3, 6, 3, -3, -2, -2, 14, -4, 4, 4, -15, 4, 7, 0, -18, 12, -9, -4, 8, 13, -20]);
ECSearch("24.1-i",(2*w + 14)*OK,[-2, -1, -5, -2, -1, 2, 1, -2, -7, -5, -10, 10, -10, -4, -12, 0, -9, -4, 1, -12, -6, -12, 9, -20, 4, 5, 4]);
ECSearch("24.1-j",(2*w + 14)*OK,[-4, 1, 1, -2, -9, 0, 7, 10, -3, -3, 6, 6, 4, -8, 14, -8, -15, 10, -13, -14, 14, -20, -13, 0, -12, 5, 6]);
ECSearch("24.2-a",(-2*w + 16)*OK,[-1, 4, -2, 1, 0, -9, 10, 7, 3, 3, -6, -6, -8, 4, 8, -14, 15, 13, -10, -14, 14, 13, 20, -12, 0, 5, -15]);
ECSearch("24.2-b",(-2*w + 16)*OK,[1, 2, -2, -5, 2, -1, -2, 1, 5, 7, -10, 10, -4, -10, 0, 12, 9, -1, 4, 6, 12, -9, 12, 4, -20, 5, 13]);
ECSearch("24.2-c",(-2*w + 16)*OK,[-1, 2, 2, -1, -2, 7, 6, -3, 3, -3, 2, 2, -4, 14, -4, -4, 15, -7, -4, 18, 0, 9, -12, 8, -4, 13, 13]);
ECSearch("24.2-d",(-2*w + 16)*OK,[-3, 2, 0, -1, 6, 7, -2, -3, -7, -9, 6, -8, 0, -8, -6, -6, -3, -13, -2, -6, 4, -17, 4, -10, 16, 5, -19]);
ECSearch("24.2-e",(-2*w + 16)*OK,[1, 0, 2, -3, 4, -9, -6, -5, -3, 1, -10, -6, -8, 12, 12, 6, 9, -13, -14, 14, -18, 11, 20, 16, -16, 5, -7]);
ECSearch("24.2-f",(-2*w + 16)*OK,[-1, 0, 2, -3, 4, -9, -6, -5, 3, -1, 10, 6, -8, 12, -12, -6, -9, 13, 14, -14, 18, -11, -20, 16, -16, 5, -7]);
ECSearch("24.2-g",(-2*w + 16)*OK,[3, -2, 0, -1, 6, 7, -2, -3, 7, 9, -6, 8, 0, -8, 6, 6, 3, 13, 2, 6, -4, 17, -4, -10, 16, 5, -19]);
ECSearch("24.2-h",(-2*w + 16)*OK,[1, -2, 2, -1, -2, 7, 6, -3, -3, 3, -2, -2, -4, 14, 4, 4, -15, 7, 4, -18, 0, -9, 12, 8, -4, 13, 13]);
ECSearch("24.2-i",(-2*w + 16)*OK,[-1, -2, -2, -5, 2, -1, -2, 1, -5, -7, 10, -10, -4, -10, 0, -12, -9, 1, -4, -6, -12, 9, -12, 4, -20, 5, 13]);
ECSearch("24.2-j",(-2*w + 16)*OK,[1, -4, -2, 1, 0, -9, 10, 7, -3, -3, 6, 6, -8, 4, -8, 14, -15, -13, 10, 14, -14, -13, -20, -12, 0, 5, -15]);
ECSearch("25.2-a",(336*w + 2483)*OK,[0, 0, 3, 0, 1, -4, 7, 7, -10, 10, 0, 0, 0, 0, -1, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, -17, -2, -11, -20]);
ECSearch("25.2-b",(336*w + 2483)*OK,[0, 0, 0, 0, 4, -1, 4, -11, -1, -11, 0, 0, 0, 0, -13, -13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 19, 19, -11, 1]);
ECSearch("25.2-c",(336*w + 2483)*OK,[0, 0, -3, 0, -5, 5, -11, 4, 11, 1, 0, 0, 0, 0, 14, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2, -17, 22, 19]);
ECSearch("25.3-a",(-336*w + 2819)*OK,[0, 0, 3, 0, -4, 1, 7, 7, 10, -10, 0, 0, 0, 0, 14, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2, -17, -11, 20]);
ECSearch("25.3-b",(-336*w + 2819)*OK,[0, 0, 0, 0, -1, 4, -11, 4, -11, -1, 0, 0, 0, 0, -13, -13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 19, 19, -11, -19]);
ECSearch("25.3-c",(-336*w + 2819)*OK,[0, 0, -3, 0, 5, -5, 4, -11, 1, 11, 0, 0, 0, 0, -1, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, -17, -2, 22, -1]);
ECSearch("28.1-a",(4*w - 34)*OK,[-2, 3, 3, -4, 2, -10, -1, -7, -6, 12, -9, 9, -13, 11, -6, 6, -6, -15, 3, 9, -3, 18, 0, -7, 11, 17, -16]);
ECSearch("28.1-b",(4*w - 34)*OK,[2, 0, 2, -2, -4, -8, 6, 4, -2, 12, 6, -10, -14, 14, 12, -8, -4, 4, 14, -6, 2, -18, 8, 16, 10, 6, 16]);
ECSearch("28.1-c",(4*w - 34)*OK,[2, 0, -2, -2, -4, -8, 6, 4, 2, -12, -6, 10, -14, 14, -12, 8, 4, -4, -14, 6, -2, 18, -8, 16, 10, 6, 16]);
ECSearch("28.1-d",(4*w - 34)*OK,[-2, -3, -3, -4, 2, -10, -1, -7, 6, -12, 9, -9, -13, 11, 6, -6, 6, 15, -3, -9, 3, -18, 0, -7, 11, 17, -16]);
ECSearch("28.3-a",(159*w - 1334)*OK,[0, -2, 3, 0, 2, -1, -7, -10, 2, 12, 9, 6, -12, -10, -7, -6, 3, 18, 6, 0, 0, -15, 9, 18, -10, 2, -4, -1]);
ECSearch("28.3-b",(159*w - 1334)*OK,[0, -2, -3, 0, 2, -1, -7, -10, 2, -12, -9, -6, 12, -10, -7, 6, -3, -18, -6, 0, 0, 15, -9, -18, -10, 2, -4, -1]);
ECSearch("28.2-a",(-4*w - 30)*OK,[-2, 3, 3, -4, -10, 2, -7, -1, 12, -6, 9, -9, 11, -13, 6, -6, -6, 3, -15, -3, 9, 0, 18, 11, -7, 17, 2]);
ECSearch("28.2-b",(-4*w - 30)*OK,[2, 2, 0, -2, -8, -4, 4, 6, 12, -2, -10, 6, 14, -14, -8, 12, -4, 14, 4, 2, -6, 8, -18, 10, 16, 6, -6]);
ECSearch("28.2-c",(-4*w - 30)*OK,[2, -2, 0, -2, -8, -4, 4, 6, -12, 2, 10, -6, 14, -14, 8, -12, 4, -14, -4, -2, 6, -8, 18, 10, 16, 6, -6]);
ECSearch("28.2-d",(-4*w - 30)*OK,[-2, -3, -3, -4, -10, 2, -7, -1, -12, 6, -9, 9, 11, -13, -6, 6, 6, -3, 15, 3, -9, 0, -18, 11, -7, 17, 2]);
ECSearch("28.6-a",(-159*w - 1175)*OK,[0, -2, 0, 3, 2, -7, -1, 2, -10, 9, 12, -12, 6, -7, -10, 3, -6, 18, 0, 6, -15, 0, 18, 9, 2, -10, -4, 14]);
ECSearch("28.6-b",(-159*w - 1175)*OK,[0, -2, 0, -3, 2, -7, -1, 2, -10, -9, -12, 12, -6, -7, -10, -3, 6, -18, 0, -6, 15, 0, -18, -9, 2, -10, -4, 14]);
ECSearch("30.1-a",(-277*w - 2047)*OK,[1, 4, 4, 4, 4, 6, 2, -2, -2, -4, -12, -2, 2, -10, -2, 0, 4, -6, -6, -10, 6, -18, 2, -8, 14, -10, 20]);
ECSearch("30.1-b",(-277*w - 2047)*OK,[2, 3, 1, -2, -2, 0, -4, -5, -3, 13, -9, -1, -9, 5, -3, -2, 6, -3, -16, -15, -8, -4, -4, 2, -4, 12, 7]);
ECSearch("30.1-c",(-277*w - 2047)*OK,[0, 1, 1, 0, 4, 6, 0, 9, -3, -1, -3, -9, -13, -9, -3, 4, 14, -15, 8, 17, 0, -4, 8, -14, 0, -16, 7]);
ECSearch("30.1-d",(-277*w - 2047)*OK,[0, -1, 1, 0, 4, 6, 0, 9, 3, 1, 3, 9, -13, -9, 3, -4, -14, 15, -8, -17, 0, 4, -8, -14, 0, -16, 7]);
ECSearch("30.1-e",(-277*w - 2047)*OK,[-2, -3, 1, -2, -2, 0, -4, -5, 3, -13, 9, 1, -9, 5, 3, 2, -6, 3, 16, 15, 8, 4, 4, 2, -4, 12, 7]);
ECSearch("30.1-f",(-277*w - 2047)*OK,[-1, -4, 4, 4, 4, 6, 2, -2, 2, 4, 12, 2, 2, -10, 2, 0, -4, 6, 6, 10, -6, 18, -2, -8, 14, -10, 20]);
ECSearch("30.4-a",(-277*w + 2324)*OK,[1, 4, 4, 4, 6, 4, -2, 2, -4, -2, -2, -12, -10, 2, 0, -2, 4, -6, -6, 6, -10, 2, -18, 14, -8, -10, -16]);
ECSearch("30.4-b",(-277*w + 2324)*OK,[2, 3, -2, 1, 0, -2, -5, -4, 13, -3, -1, -9, 5, -9, -2, -3, 6, -16, -3, -8, -15, -4, -4, -4, 2, 12, -4]);
ECSearch("30.4-c",(-277*w + 2324)*OK,[0, 1, 0, 1, 6, 4, 9, 0, -1, -3, -9, -3, -9, -13, 4, -3, 14, 8, -15, 0, 17, 8, -4, 0, -14, -16, 8]);
ECSearch("30.4-d",(-277*w + 2324)*OK,[0, -1, 0, 1, 6, 4, 9, 0, 1, 3, 9, 3, -9, -13, -4, 3, -14, -8, 15, 0, -17, -8, 4, 0, -14, -16, 8]);
ECSearch("30.4-e",(-277*w + 2324)*OK,[-2, -3, -2, 1, 0, -2, -5, -4, -13, 3, 1, 9, 5, -9, 2, 3, -6, 16, 3, 8, 15, 4, 4, -4, 2, 12, -4]);
ECSearch("30.4-f",(-277*w + 2324)*OK,[-1, -4, 4, 4, 6, 4, -2, 2, 4, 2, 2, 12, -10, 2, 0, 2, -4, 6, 6, -6, 10, -2, 18, 14, -8, -10, -16]);
