print "Field 2.2.105.1";
Qx<x> := PolynomialRing(RationalField());
K<w> := NumberField(x^2 - x - 26);
OK := Integers(K);
Plist := [];
Append(~Plist,(2)*OK+(w)*OK);
Append(~Plist,(2)*OK+(w + 1)*OK);
Append(~Plist,(3)*OK+(w + 1)*OK);
Append(~Plist,(-2*w - 9)*OK);
Append(~Plist,(7)*OK+(w + 3)*OK);
Append(~Plist,(13)*OK+(w)*OK);
Append(~Plist,(13)*OK+(w + 12)*OK);
Append(~Plist,(23)*OK+(w + 8)*OK);
Append(~Plist,(23)*OK+(w + 14)*OK);
Append(~Plist,(-2*w + 9)*OK);
Append(~Plist,(2*w + 7)*OK);
Append(~Plist,(53)*OK+(w + 11)*OK);
Append(~Plist,(53)*OK+(w + 41)*OK);
Append(~Plist,(-4*w - 17)*OK);
Append(~Plist,(4*w - 21)*OK);
Append(~Plist,(73)*OK+(w + 27)*OK);
Append(~Plist,(73)*OK+(w + 45)*OK);
Append(~Plist,(6*w + 29)*OK);
Append(~Plist,(6*w - 35)*OK);
Append(~Plist,(-2*w + 5)*OK);
Append(~Plist,(2*w + 3)*OK);
Append(~Plist,(97)*OK+(w + 34)*OK);
Append(~Plist,(97)*OK+(w + 62)*OK);
Append(~Plist,(-2*w + 3)*OK);
Append(~Plist,(-2*w - 1)*OK);
Append(~Plist,(103)*OK+(w + 32)*OK);
Append(~Plist,(103)*OK+(w + 70)*OK);
Append(~Plist,(107)*OK+(w + 15)*OK);
Append(~Plist,(107)*OK+(w + 91)*OK);
Append(~Plist,(-4*w + 25)*OK);
Append(~Plist,(-4*w - 21)*OK);
Append(~Plist,(113)*OK+(w + 30)*OK);
Append(~Plist,(113)*OK+(w + 82)*OK);
Append(~Plist,(11)*OK);
Append(~Plist,(-4*w + 19)*OK);
Append(~Plist,(4*w + 15)*OK);
Append(~Plist,(137)*OK+(w + 33)*OK);
Append(~Plist,(137)*OK+(w + 103)*OK);
Append(~Plist,(-2*w + 17)*OK);
Append(~Plist,(2*w + 15)*OK);
Append(~Plist,(157)*OK+(w + 66)*OK);
Append(~Plist,(157)*OK+(w + 90)*OK);
Append(~Plist,(197)*OK+(w + 20)*OK);
Append(~Plist,(197)*OK+(w + 176)*OK);
Append(~Plist,(-6*w + 37)*OK);
Append(~Plist,(-6*w - 31)*OK);
Append(~Plist,(223)*OK+(w + 47)*OK);
Append(~Plist,(223)*OK+(w + 175)*OK);
Append(~Plist,(233)*OK+(w + 86)*OK);
Append(~Plist,(233)*OK+(w + 146)*OK);
Append(~Plist,(-4*w + 15)*OK);
Append(~Plist,(4*w + 11)*OK);
Append(~Plist,(263)*OK+(w + 23)*OK);
Append(~Plist,(263)*OK+(w + 239)*OK);
Append(~Plist,(-6*w + 29)*OK);
Append(~Plist,(6*w + 23)*OK);
Append(~Plist,(283)*OK+(w + 58)*OK);
Append(~Plist,(283)*OK+(w + 224)*OK);
Append(~Plist,(17)*OK);
Append(~Plist,(307)*OK+(w + 121)*OK);
Append(~Plist,(307)*OK+(w + 185)*OK);
Append(~Plist,(-8*w - 33)*OK);
Append(~Plist,(8*w - 41)*OK);
Append(~Plist,(313)*OK+(w + 61)*OK);
Append(~Plist,(313)*OK+(w + 251)*OK);
Append(~Plist,(317)*OK+(w + 115)*OK);
Append(~Plist,(317)*OK+(w + 201)*OK);
Append(~Plist,(-14*w - 67)*OK);
Append(~Plist,(14*w - 81)*OK);
Append(~Plist,(347)*OK+(w + 105)*OK);
Append(~Plist,(347)*OK+(w + 241)*OK);
Append(~Plist,(19)*OK);
Append(~Plist,(367)*OK+(w + 101)*OK);
Append(~Plist,(367)*OK+(w + 265)*OK);
Append(~Plist,(-2*w + 23)*OK);
Append(~Plist,(2*w + 21)*OK);
Append(~Plist,(397)*OK+(w + 180)*OK);
Append(~Plist,(397)*OK+(w + 216)*OK);
Append(~Plist,(-4*w + 3)*OK);
Append(~Plist,(4*w - 1)*OK);
Append(~Plist,(-4*w - 27)*OK);
Append(~Plist,(4*w - 31)*OK);
Append(~Plist,(433)*OK+(w + 188)*OK);
Append(~Plist,(433)*OK+(w + 244)*OK);
Append(~Plist,(443)*OK+(w + 136)*OK);
Append(~Plist,(443)*OK+(w + 306)*OK);
Append(~Plist,(-6*w - 19)*OK);
Append(~Plist,(6*w - 25)*OK);
Append(~Plist,(-16*w - 71)*OK);
Append(~Plist,(-16*w + 87)*OK);
Append(~Plist,(-6*w - 35)*OK);
Append(~Plist,(6*w - 41)*OK);
Append(~Plist,(-10*w - 41)*OK);
Append(~Plist,(10*w - 51)*OK);
Append(~Plist,(14*w + 61)*OK);
Append(~Plist,(14*w - 75)*OK);
Append(~Plist,(523)*OK+(w + 72)*OK);
Append(~Plist,(523)*OK+(w + 450)*OK);
Append(~Plist,(-4*w + 33)*OK);
Append(~Plist,(4*w + 29)*OK);
effort := 400;
ECSearch := procedure(class_label, N, aplist);
print "Isogeny class ", class_label;
goodP := [P: P in Plist | Valuation(N,P) eq 0];
goodP := [goodP[i]: i in [1..#(aplist)]];
curves := EllipticCurveSearch(N,effort : Primes:=goodP, Traces:=aplist);
curves := [E: E in curves | &and[TraceOfFrobenius(E,goodP[i]) eq aplist[i] : i in [1..#(aplist)]]];
if #curves eq 0 then print "No curve found"; end if;
for E in curves do;
 a1,a2,a3,a4,a6:=Explode(aInvariants(E));
 printf "Curve [%o,%o,%o,%o,%o]\n",a1,a2,a3,a4,a6;
 end for;
end procedure;
SetColumns(0);

ECSearch("5.1-a",(-2*w - 9)*OK,[1, -1, 0, 0, 6, -6, 4, -4, -6, -6, -2, 2, -12, -12, 6, -6, -8, -8, -6, -6, 6, -6, -18, -18, 0, 0, 8, -8, 6]);
ECSearch("5.1-b",(-2*w - 9)*OK,[-1, 1, 0, 0, 6, -6, -4, 4, 6, 6, 2, -2, 12, 12, 6, -6, -8, -8, 6, 6, 6, -6, 18, 18, 0, 0, -8, 8, 6]);
ECSearch("5.1-c",(-2*w - 9)*OK,[1, -1, 0, 0, -6, 6, 4, -4, 6, 6, -2, 2, 12, 12, -6, 6, -8, -8, 6, 6, -6, 6, 18, 18, 0, 0, 8, -8, 6]);
ECSearch("5.1-d",(-2*w - 9)*OK,[-1, 1, 0, 0, -6, 6, -4, 4, -6, -6, 2, -2, -12, -12, -6, 6, -8, -8, -6, -6, -6, 6, -18, -18, 0, 0, -8, 8, 6]);
ECSearch("6.1-a",(-w + 5)*OK,[0, 3, -1, 5, -4, 0, -3, 12, 3, -9, 9, 0, 6, 2, 2, -10, 8, 6, 3, -10, -1, 12, -18, -4, -4, -12, -15, -7]);
ECSearch("6.1-b",(-w + 5)*OK,[0, -3, -1, 5, -4, 0, 3, -12, -3, 9, -9, 0, -6, 2, 2, -10, 8, -6, -3, -10, -1, -12, 18, -4, -4, 12, 15, -7]);
ECSearch("6.1-c",(-w + 5)*OK,[0, 3, 1, -5, 4, 0, 3, 12, 3, 9, -9, 0, 6, -2, -2, -10, 8, 6, 3, 10, 1, 12, -18, 4, 4, 12, 15, -7]);
ECSearch("6.1-d",(-w + 5)*OK,[0, -3, 1, -5, 4, 0, -3, -12, -3, -9, 9, 0, -6, -2, -2, -10, 8, -6, -3, 10, 1, -12, 18, 4, 4, -12, -15, -7]);
ECSearch("6.2-a",(-w - 4)*OK,[0, 3, -1, -4, 5, -3, 0, 3, 12, 9, -9, 6, 0, 2, 2, 8, -10, 3, 6, -1, -10, -18, 12, -4, -4, -15, -12, -16]);
ECSearch("6.2-b",(-w - 4)*OK,[0, -3, -1, -4, 5, 3, 0, -3, -12, -9, 9, -6, 0, 2, 2, 8, -10, -3, -6, -1, -10, 18, -12, -4, -4, 15, 12, -16]);
ECSearch("6.2-c",(-w - 4)*OK,[0, 3, 1, 4, -5, 3, 0, 3, 12, -9, 9, 6, 0, -2, -2, 8, -10, 3, 6, 1, 10, -18, 12, 4, 4, 15, 12, -16]);
ECSearch("6.2-d",(-w - 4)*OK,[0, -3, 1, 4, -5, -3, 0, -3, -12, 9, -9, -6, 0, -2, -2, 8, -10, -3, -6, 1, 10, 18, -12, 4, 4, -15, -12, -16]);
ECSearch("9.1-a",(3)*OK,[-1, 1, 0, 0, 0, 0, 8, -8, 0, 0, -10, 10, 0, 0, 0, 0, -8, -8, 0, 0, 0, 0, 0, 0, 0, 0, -20, 20, -18]);
ECSearch("9.1-b",(3)*OK,[1, -1, 0, 0, 0, 0, -8, 8, 0, 0, 10, -10, 0, 0, 0, 0, -8, -8, 0, 0, 0, 0, 0, 0, 0, 0, 20, -20, -18]);
ECSearch("15.1-a",(15)*OK+(w + 7)*OK,[-1, -1, 0, 2, 2, 0, 0, -10, -10, -10, -10, 4, 4, -10, -10, 0, 0, 6, 6, -2, -2, -6, -6, 16, 16, -12, -12, 14]);
ECSearch("15.1-b",(15)*OK+(w + 7)*OK,[1, 1, 0, 2, 2, 0, 0, 10, 10, 10, 10, -4, -4, -10, -10, 0, 0, -6, -6, -2, -2, 6, 6, 16, 16, 12, 12, 14]);
ECSearch("15.1-c",(15)*OK+(w + 7)*OK,[-1, -1, 0, -2, -2, 0, 0, 10, 10, -10, -10, -4, -4, 10, 10, 0, 0, -6, -6, 2, 2, 6, 6, -16, -16, -12, -12, 14]);
ECSearch("15.1-d",(15)*OK+(w + 7)*OK,[1, 1, 0, -2, -2, 0, 0, -10, -10, 10, 10, 4, 4, 10, 10, 0, 0, 6, 6, 2, 2, -6, -6, -16, -16, 12, 12, 14]);
ECSearch("16.4-a",(w + 6)*OK,[-1, 0, 2, 4, 6, -2, -8, 0, 6, 6, -10, -2, 12, 4, 10, 10, 8, 0, 14, -18, 10, -6, -6, 10, 4, 4, -12, -4, -2]);
ECSearch("16.4-b",(w + 6)*OK,[1, 0, 2, -4, -6, 2, 8, 0, 6, 6, 10, 2, 12, 4, -10, -10, 8, 0, 14, -18, -10, 6, -6, 10, -4, -4, 12, 4, -2]);
ECSearch("16.4-c",(w + 6)*OK,[-1, 0, -2, -4, -6, 2, -8, 0, -6, -6, -10, -2, -12, -4, -10, -10, 8, 0, -14, 18, -10, 6, 6, -10, -4, -4, -12, -4, -2]);
ECSearch("16.4-d",(w + 6)*OK,[1, 0, -2, 4, 6, -2, 8, 0, -6, -6, 10, 2, -12, -4, 10, 10, 8, 0, -14, 18, 10, -6, 6, -10, 4, 4, 12, 4, -2]);
ECSearch("16.5-a",(-w + 7)*OK,[-1, 0, 2, 4, -2, 6, 0, -8, 6, 6, -2, -10, 4, 12, 10, 10, 0, 8, -18, 14, -6, 10, 10, -6, 4, 4, -4, -12, 14]);
ECSearch("16.5-b",(-w + 7)*OK,[1, 0, 2, -4, 2, -6, 0, 8, 6, 6, 2, 10, 4, 12, -10, -10, 0, 8, -18, 14, 6, -10, 10, -6, -4, -4, 4, 12, 14]);
ECSearch("16.5-c",(-w + 7)*OK,[-1, 0, -2, -4, 2, -6, 0, -8, -6, -6, -2, -10, -4, -12, -10, -10, 0, 8, 18, -14, 6, -10, -10, 6, -4, -4, -4, -12, 14]);
ECSearch("16.5-d",(-w + 7)*OK,[1, 0, -2, 4, -2, 6, 0, 8, -6, -6, 2, 10, -4, -12, 10, 10, 0, 8, 18, -14, -6, 10, -10, 6, 4, 4, 4, 12, 14]);
ECSearch("20.1-a",(-4*w - 18)*OK,[0, 0, -2, 2, 4, -4, -10, -10, 2, -2, -4, -4, -2, 2, 8, 8, -10, -10, -18, 18, 2, 2, -16, 16, 0, 0, -10]);
ECSearch("20.1-b",(-4*w - 18)*OK,[0, 0, 2, -2, 4, -4, 10, 10, 2, -2, 4, 4, 2, -2, 8, 8, 10, 10, 18, -18, -2, -2, 16, -16, 0, 0, -10]);
ECSearch("20.1-c",(-4*w - 18)*OK,[0, 0, -2, 2, -4, 4, 10, 10, -2, 2, 4, 4, -2, 2, 8, 8, 10, 10, -18, 18, -2, -2, -16, 16, 0, 0, -10]);
ECSearch("20.1-d",(-4*w - 18)*OK,[0, 0, 2, -2, -4, 4, -10, -10, -2, 2, -4, -4, 2, -2, 8, 8, -10, -10, 18, -18, 2, 2, 16, -16, 0, 0, -10]);
ECSearch("21.1-a",(4*w + 19)*OK,[1, 1, 2, -2, -2, 0, 0, -2, -2, -6, -6, -12, -12, -6, -6, -16, -16, 14, 14, 18, 18, -14, -14, 8, 8, -4, -4, -18]);
ECSearch("21.1-b",(4*w + 19)*OK,[-1, -1, 2, 2, 2, 0, 0, -2, -2, 6, 6, -12, -12, 6, 6, -16, -16, 14, 14, -18, -18, -14, -14, -8, -8, 4, 4, -18]);
ECSearch("21.1-c",(4*w + 19)*OK,[1, 1, -2, 2, 2, 0, 0, 2, 2, -6, -6, 12, 12, 6, 6, -16, -16, -14, -14, -18, -18, 14, 14, -8, -8, -4, -4, -18]);
ECSearch("21.1-d",(4*w + 19)*OK,[-1, -1, -2, -2, -2, 0, 0, 2, 2, 6, 6, 12, 12, -6, -6, -16, -16, -14, -14, 18, 18, 14, 14, 8, 8, 4, 4, -18]);
ECSearch("24.1-a",(-2*w + 10)*OK,[-3, 3, 2, -1, -1, -2, -7, 4, 5, 7, -4, -8, -10, -4, -14, -2, -3, -12, 13, -14, -14, -10, 8, -10, -1, 16, 10]);
ECSearch("24.1-b",(-2*w + 10)*OK,[-3, -3, -2, 1, 1, 2, -7, 4, -5, -7, -4, -8, 10, 4, -14, -2, -3, -12, -13, 14, -14, -10, -8, 10, 1, -16, 10]);
ECSearch("24.1-c",(-2*w + 10)*OK,[3, 3, 2, -1, 1, 2, 7, -4, -5, -7, 4, 8, -10, -4, -14, -2, 3, 12, 13, -14, 14, 10, 8, -10, 1, -16, 10]);
ECSearch("24.1-d",(-2*w + 10)*OK,[3, -3, -2, 1, -1, -2, 7, -4, 5, 7, 4, 8, 10, 4, -14, -2, 3, 12, -13, 14, 14, 10, -8, 10, -1, 16, 10]);
ECSearch("24.2-a",(-2*w - 8)*OK,[-3, 3, -1, 2, -2, -1, 4, -7, 7, 5, -8, -4, -4, -10, -2, -14, -12, -3, -14, 13, -10, -14, -10, 8, 16, -1, 1]);
ECSearch("24.2-b",(-2*w - 8)*OK,[-3, -3, 1, -2, 2, 1, 4, -7, -7, -5, -8, -4, 4, 10, -2, -14, -12, -3, 14, -13, -10, -14, 10, -8, -16, 1, 1]);
ECSearch("24.2-c",(-2*w - 8)*OK,[3, 3, -1, 2, 2, 1, -4, 7, -7, -5, 8, 4, -4, -10, -2, -14, 12, 3, -14, 13, 10, 14, -10, 8, -16, 1, 1]);
ECSearch("24.2-d",(-2*w - 8)*OK,[3, -3, 1, -2, -2, -1, -4, 7, 7, 5, 8, 4, 4, 10, -2, -14, 12, 3, 14, -13, 10, 14, 10, -8, 16, -1, 1]);
ECSearch("26.1-a",(w)*OK,[-1, 2, 0, 2, 2, -8, -8, 8, -12, -2, 6, 12, 8, -2, 6, -12, -12, -12, 0, -6, 18, -8, -12, 6, 10, -4, -12, -14]);
ECSearch("26.1-b",(w)*OK,[1, 2, 0, 2, 2, 8, 8, -8, 12, 2, -6, -12, -8, -2, 6, -12, -12, 12, 0, -6, 18, 8, 12, 6, 10, 4, 12, -14]);
ECSearch("26.1-c",(w)*OK,[-1, -2, 0, -2, -2, -8, -8, -8, 12, -2, 6, -12, -8, 2, -6, -12, -12, 12, 0, 6, -18, 8, 12, -6, -10, -4, -12, -14]);
ECSearch("26.1-d",(w)*OK,[1, -2, 0, -2, -2, 8, 8, 8, -12, 2, -6, 12, 8, 2, -6, -12, -12, -12, 0, 6, -18, -8, -12, -6, -10, 4, 12, -14]);
ECSearch("26.4-a",(w - 1)*OK,[-1, 2, 0, 2, 2, -8, -8, -12, 8, 6, -2, 8, 12, 6, -2, -12, -12, 0, -12, 18, -6, -12, -8, 10, 6, -12, -4, -6]);
ECSearch("26.4-b",(w - 1)*OK,[1, 2, 0, 2, 2, 8, 8, 12, -8, -6, 2, -8, -12, 6, -2, -12, -12, 0, 12, 18, -6, 12, 8, 10, 6, 12, 4, -6]);
ECSearch("26.4-c",(w - 1)*OK,[-1, -2, 0, -2, -2, -8, -8, 12, -8, 6, -2, -8, -12, -6, 2, -12, -12, 0, 12, -18, 6, 12, 8, -10, -6, -12, -4, -6]);
ECSearch("26.4-d",(w - 1)*OK,[1, -2, 0, -2, -2, 8, 8, -12, 8, -6, 2, 8, 12, -6, 2, -12, -12, 0, -12, -18, 6, -12, -8, -10, -6, 12, 4, -6]);
ECSearch("28.1-a",(14)*OK+(2*w + 6)*OK,[2, 0, 4, 4, 0, 0, -6, -6, 6, 6, 6, 6, -2, -2, 8, 8, 6, 6, 10, 10, 0, 0, 4, 4, 12, 12, 2]);
ECSearch("28.1-b",(14)*OK+(2*w + 6)*OK,[-2, 0, -4, -4, 0, 0, -6, -6, -6, -6, 6, 6, 2, 2, 8, 8, 6, 6, -10, -10, 0, 0, -4, -4, -12, -12, 2]);
ECSearch("28.1-c",(14)*OK+(2*w + 6)*OK,[2, 0, 4, 4, 0, 0, 6, 6, -6, -6, -6, -6, -2, -2, 8, 8, -6, -6, 10, 10, 0, 0, 4, 4, -12, -12, 2]);
ECSearch("28.1-d",(14)*OK+(2*w + 6)*OK,[-2, 0, -4, -4, 0, 0, 6, 6, 6, 6, -6, -6, 2, 2, 8, 8, -6, -6, -10, -10, 0, 0, -4, -4, 12, 12, 2]);
ECSearch("30.1-a",(w + 7)*OK,[1, -4, -6, -2, 4, -4, 10, 2, 6, 2, 4, -4, 10, -10, -8, -16, -6, 10, -6, 14, 6, 6, 4, -12, -8, 0, -10]);
ECSearch("30.1-b",(w + 7)*OK,[-1, -4, -6, -2, -4, 4, -10, -2, -6, -2, -4, 4, 10, -10, -8, -16, 6, -10, -6, 14, -6, -6, 4, -12, 8, 0, -10]);
ECSearch("30.1-c",(w + 7)*OK,[1, 4, 6, 2, 4, -4, -10, -2, 6, 2, -4, 4, -10, 10, -8, -16, 6, -10, 6, -14, -6, -6, -4, 12, -8, 0, -10]);
ECSearch("30.1-d",(w + 7)*OK,[-1, 4, 6, 2, -4, 4, 10, 2, -6, -2, 4, -4, -10, 10, -8, -16, -6, 10, 6, -14, 6, 6, -4, 12, 8, 0, -10]);
ECSearch("30.2-a",(-w + 8)*OK,[1, -4, -2, -6, -4, 4, 2, 10, 2, 6, -4, 4, -10, 10, -16, -8, 10, -6, 14, -6, 6, 6, -12, 4, 0, -8, 14]);
ECSearch("30.2-b",(-w + 8)*OK,[-1, -4, -2, -6, 4, -4, -2, -10, -2, -6, 4, -4, -10, 10, -16, -8, -10, 6, 14, -6, -6, -6, -12, 4, 0, 8, 14]);
ECSearch("30.2-c",(-w + 8)*OK,[1, 4, 2, 6, -4, 4, -2, -10, 2, 6, 4, -4, 10, -10, -16, -8, -10, 6, -14, 6, -6, -6, 12, -4, 0, -8, 14]);
ECSearch("30.2-d",(-w + 8)*OK,[-1, 4, 2, 6, 4, -4, 2, 10, -2, -6, -4, 4, 10, -10, -16, -8, 10, -6, -14, 6, 6, 6, 12, -4, 0, 8, 14]);
ECSearch("35.1-a",(35)*OK+(w + 17)*OK,[0, 0, -1, -5, -5, 6, 6, -12, -12, -12, -12, 0, 0, -2, -2, -1, -1, -12, -12, 1, 1, 6, 6, -5, -5, -6, -6, -7]);
ECSearch("35.1-b",(35)*OK+(w + 17)*OK,[0, 0, 1, 5, 5, 6, 6, 12, 12, -12, -12, 0, 0, 2, 2, -1, -1, 12, 12, -1, -1, -6, -6, 5, 5, -6, -6, -7]);
ECSearch("35.1-c",(35)*OK+(w + 17)*OK,[0, 0, -1, -5, -5, -6, -6, 12, 12, 12, 12, 0, 0, -2, -2, -1, -1, 12, 12, 1, 1, -6, -6, -5, -5, 6, 6, -7]);
ECSearch("35.1-d",(35)*OK+(w + 17)*OK,[0, 0, 1, 5, 5, -6, -6, -12, -12, 12, 12, 0, 0, 2, 2, -1, -1, -12, -12, -1, -1, 6, 6, 5, 5, 6, 6, -7]);
ECSearch("36.1-a",(6)*OK,[0, 4, 4, 4, 0, 0, -12, 12, 6, -6, 12, -12, -8, -8, 8, 8, -12, 12, -8, -8, 0, 0, 4, 4, -12, 12, 14]);
ECSearch("36.1-b",(6)*OK,[0, -4, -4, -4, 0, 0, -12, 12, -6, 6, 12, -12, 8, 8, 8, 8, -12, 12, 8, 8, 0, 0, -4, -4, 12, -12, 14]);
ECSearch("36.1-c",(6)*OK,[-4, 0, 4, -4, 0, 0, 0, 0, -10, 10, -4, -4, 16, -16, 8, 8, 8, 8, 8, -8, -4, -4, -8, 8, 4, -4, 14]);
ECSearch("36.1-d",(6)*OK,[4, 0, -4, 4, 0, 0, 0, 0, -10, 10, 4, 4, -16, 16, 8, 8, -8, -8, -8, 8, 4, 4, 8, -8, 4, -4, 14]);
ECSearch("36.1-e",(6)*OK,[-4, 0, -4, 4, 0, 0, 0, 0, 10, -10, -4, -4, -16, 16, 8, 8, 8, 8, -8, 8, -4, -4, 8, -8, -4, 4, 14]);
ECSearch("36.1-f",(6)*OK,[0, 4, 4, 4, 0, 0, 12, -12, -6, 6, -12, 12, -8, -8, 8, 8, 12, -12, -8, -8, 0, 0, 4, 4, 12, -12, 14]);
ECSearch("36.1-g",(6)*OK,[4, 0, 4, -4, 0, 0, 0, 0, 10, -10, 4, 4, 16, -16, 8, 8, -8, -8, 8, -8, 4, 4, -8, 8, -4, 4, 14]);
ECSearch("36.1-h",(6)*OK,[0, -4, -4, -4, 0, 0, 12, -12, 6, -6, -12, 12, 8, 8, 8, 8, 12, -12, 8, 8, 0, 0, -4, -4, -12, 12, 14]);
ECSearch("36.2-a",(3*w + 15)*OK,[0, 0, -4, -7, 5, 0, 0, 0, 0, 0, 0, 0, 0, -10, -10, 17, -13, 0, 0, -19, 5, 0, 0, -13, -7, 0, 0, 17]);
ECSearch("36.2-b",(3*w + 15)*OK,[0, 0, 4, 7, -5, 0, 0, 0, 0, 0, 0, 0, 0, 10, 10, 17, -13, 0, 0, 19, -5, 0, 0, 13, 7, 0, 0, 17]);
ECSearch("36.3-a",(-3*w + 18)*OK,[0, 0, -4, 5, -7, 0, 0, 0, 0, 0, 0, 0, 0, -10, -10, -13, 17, 0, 0, 5, -19, 0, 0, -7, -13, 0, 0, -19]);
ECSearch("36.3-b",(-3*w + 18)*OK,[0, 0, 4, -5, 7, 0, 0, 0, 0, 0, 0, 0, 0, 10, 10, -13, 17, 0, 0, -5, 19, 0, 0, 7, 13, 0, 0, -19]);
