print "Field 2.2.393.1";
Qx<x> := PolynomialRing(RationalField());
K<w> := NumberField(x^2 - x - 98);
OK := Integers(K);
Plist := [];
Append(~Plist,(-17*w - 160)*OK);
Append(~Plist,(17*w - 177)*OK);
Append(~Plist,(842*w - 8767)*OK);
Append(~Plist,(-2*w + 21)*OK);
Append(~Plist,(2*w + 19)*OK);
Append(~Plist,(12*w + 113)*OK);
Append(~Plist,(12*w - 125)*OK);
Append(~Plist,(182*w - 1895)*OK);
Append(~Plist,(182*w + 1713)*OK);
Append(~Plist,(512*w + 4819)*OK);
Append(~Plist,(512*w - 5331)*OK);
Append(~Plist,(5)*OK);
Append(~Plist,(-22*w + 229)*OK);
Append(~Plist,(-22*w - 207)*OK);
Append(~Plist,(114*w + 1073)*OK);
Append(~Plist,(114*w - 1187)*OK);
Append(~Plist,(-8*w + 83)*OK);
Append(~Plist,(8*w + 75)*OK);
Append(~Plist,(1172*w + 11031)*OK);
Append(~Plist,(1172*w - 12203)*OK);
Append(~Plist,(216*w + 2033)*OK);
Append(~Plist,(216*w - 2249)*OK);
Append(~Plist,(2196*w + 20669)*OK);
Append(~Plist,(-2196*w + 22865)*OK);
Append(~Plist,(4*w + 39)*OK);
Append(~Plist,(-4*w + 43)*OK);
Append(~Plist,(11)*OK);
Append(~Plist,(5564*w + 52369)*OK);
Append(~Plist,(-2*w + 17)*OK);
Append(~Plist,(2*w + 15)*OK);
Append(~Plist,(-18*w + 187)*OK);
Append(~Plist,(-18*w - 169)*OK);
Append(~Plist,(1502*w + 14137)*OK);
Append(~Plist,(1502*w - 15639)*OK);
Append(~Plist,(-6*w - 55)*OK);
Append(~Plist,(-6*w + 61)*OK);
Append(~Plist,(-808*w + 8413)*OK);
Append(~Plist,(-808*w - 7605)*OK);
Append(~Plist,(-2*w + 15)*OK);
Append(~Plist,(2*w + 13)*OK);
Append(~Plist,(-70*w + 729)*OK);
Append(~Plist,(70*w + 659)*OK);
Append(~Plist,(284*w + 2673)*OK);
Append(~Plist,(284*w - 2957)*OK);
Append(~Plist,(-124*w + 1291)*OK);
Append(~Plist,(-124*w - 1167)*OK);
Append(~Plist,(42*w + 395)*OK);
Append(~Plist,(42*w - 437)*OK);
Append(~Plist,(-410*w - 3859)*OK);
Append(~Plist,(410*w - 4269)*OK);
Append(~Plist,(4*w - 45)*OK);
Append(~Plist,(-4*w - 41)*OK);
Append(~Plist,(3550*w + 33413)*OK);
Append(~Plist,(-3550*w + 36963)*OK);
Append(~Plist,(-2*w + 27)*OK);
Append(~Plist,(2*w + 25)*OK);
Append(~Plist,(-2*w + 11)*OK);
Append(~Plist,(2*w + 9)*OK);
Append(~Plist,(6*w + 59)*OK);
Append(~Plist,(-6*w + 65)*OK);
Append(~Plist,(-376*w + 3915)*OK);
Append(~Plist,(376*w + 3539)*OK);
Append(~Plist,(-4*w - 33)*OK);
Append(~Plist,(4*w - 37)*OK);
Append(~Plist,(-8*w - 73)*OK);
Append(~Plist,(-8*w + 81)*OK);
Append(~Plist,(19)*OK);
Append(~Plist,(774*w - 8059)*OK);
Append(~Plist,(-774*w - 7285)*OK);
Append(~Plist,(-30*w + 313)*OK);
Append(~Plist,(30*w + 283)*OK);
Append(~Plist,(-2*w + 3)*OK);
Append(~Plist,(-2*w - 1)*OK);
Append(~Plist,(-172*w + 1791)*OK);
Append(~Plist,(172*w + 1619)*OK);
Append(~Plist,(6*w - 59)*OK);
Append(~Plist,(6*w + 53)*OK);
Append(~Plist,(-40*w - 377)*OK);
Append(~Plist,(40*w - 417)*OK);
Append(~Plist,(100*w - 1041)*OK);
Append(~Plist,(-100*w - 941)*OK);
Append(~Plist,(-308*w - 2899)*OK);
Append(~Plist,(308*w - 3207)*OK);
Append(~Plist,(-274*w + 2853)*OK);
Append(~Plist,(274*w + 2579)*OK);
Append(~Plist,(52*w + 489)*OK);
Append(~Plist,(52*w - 541)*OK);
Append(~Plist,(6918*w + 65113)*OK);
Append(~Plist,(-6918*w + 72031)*OK);
Append(~Plist,(-6224*w - 58581)*OK);
Append(~Plist,(6224*w - 64805)*OK);
Append(~Plist,(-614*w + 6393)*OK);
Append(~Plist,(614*w + 5779)*OK);
Append(~Plist,(-192*w + 1999)*OK);
Append(~Plist,(-192*w - 1807)*OK);
Append(~Plist,(94*w - 979)*OK);
Append(~Plist,(94*w + 885)*OK);
Append(~Plist,(-20*w - 187)*OK);
Append(~Plist,(20*w - 207)*OK);
Append(~Plist,(-16*w + 165)*OK);
effort := 400;
ECSearch := procedure(class_label, N, aplist);
print "Isogeny class ", class_label;
goodP := [P: P in Plist | Valuation(N,P) eq 0];
goodP := [goodP[i]: i in [1..#(aplist)]];
curves := EllipticCurveSearch(N,effort : Primes:=goodP, Traces:=aplist);
curves := [E: E in curves | &and[TraceOfFrobenius(E,goodP[i]) eq aplist[i] : i in [1..#(aplist)]]];
if #curves eq 0 then print "No curve found"; end if;
for E in curves do;
 a1,a2,a3,a4,a6:=Explode(aInvariants(E));
 printf "Curve [%o,%o,%o,%o,%o]\n",a1,a2,a3,a4,a6;
 end for;
end procedure;
SetColumns(0);

ECSearch("9.1-a",(3)*OK,[-1, 2, -2, 1, 6, -6, 2, 2, 0, -6, 2, -1, 8, -2, 1, 3, 0, -6, 0, 11, -1, -11, 7, 13, 1, -1, -12, 2, 17]);
ECSearch("9.1-b",(3)*OK,[-2, 1, 1, -2, -6, 6, -2, -2, 6, 0, 2, -8, 1, 1, -2, 0, -3, 0, -6, 1, -11, -7, 11, 1, 13, -1, 12, -17, -2]);
ECSearch("9.1-c",(3)*OK,[2, -1, 1, -2, -6, 6, 2, 2, -6, 0, 2, 8, -1, 1, -2, 0, 3, 0, -6, -1, 11, 7, -11, 1, 13, -1, -12, 17, 2]);
ECSearch("9.1-d",(3)*OK,[1, -2, -2, 1, 6, -6, -2, -2, 0, 6, 2, 1, -8, -2, 1, -3, 0, -6, 0, -11, 1, 11, -7, 13, 1, -1, 12, -2, -17]);
