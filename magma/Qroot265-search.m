print "Field 2.2.265.1";
Qx<x> := PolynomialRing(RationalField());
K<w> := NumberField(x^2 - x - 66);
OK := Integers(K);
Plist := [];
Append(~Plist,(2)*OK+(w)*OK);
Append(~Plist,(2)*OK+(w + 1)*OK);
Append(~Plist,(3)*OK+(w)*OK);
Append(~Plist,(3)*OK+(w + 2)*OK);
Append(~Plist,(5)*OK+(w + 2)*OK);
Append(~Plist,(-14*w + 121)*OK);
Append(~Plist,(-14*w - 107)*OK);
Append(~Plist,(23)*OK+(w + 4)*OK);
Append(~Plist,(23)*OK+(w + 18)*OK);
Append(~Plist,(-4*w + 35)*OK);
Append(~Plist,(-4*w - 31)*OK);
Append(~Plist,(7)*OK);
Append(~Plist,(53)*OK+(w + 26)*OK);
Append(~Plist,(2*w - 19)*OK);
Append(~Plist,(-2*w - 17)*OK);
Append(~Plist,(67)*OK+(w + 29)*OK);
Append(~Plist,(67)*OK+(w + 37)*OK);
Append(~Plist,(73)*OK+(w + 25)*OK);
Append(~Plist,(73)*OK+(w + 47)*OK);
Append(~Plist,(83)*OK+(w + 39)*OK);
Append(~Plist,(83)*OK+(w + 43)*OK);
Append(~Plist,(30*w - 259)*OK);
Append(~Plist,(30*w + 229)*OK);
Append(~Plist,(103)*OK+(w + 16)*OK);
Append(~Plist,(103)*OK+(w + 86)*OK);
Append(~Plist,(127)*OK+(w + 48)*OK);
Append(~Plist,(127)*OK+(w + 78)*OK);
Append(~Plist,(-12*w + 103)*OK);
Append(~Plist,(12*w + 91)*OK);
Append(~Plist,(137)*OK+(w + 55)*OK);
Append(~Plist,(137)*OK+(w + 81)*OK);
Append(~Plist,(-18*w - 137)*OK);
Append(~Plist,(18*w - 155)*OK);
Append(~Plist,(157)*OK+(w + 19)*OK);
Append(~Plist,(157)*OK+(w + 137)*OK);
Append(~Plist,(167)*OK+(w + 45)*OK);
Append(~Plist,(167)*OK+(w + 121)*OK);
Append(~Plist,(13)*OK);
Append(~Plist,(173)*OK+(w + 72)*OK);
Append(~Plist,(173)*OK+(w + 100)*OK);
Append(~Plist,(193)*OK+(w + 59)*OK);
Append(~Plist,(193)*OK+(w + 133)*OK);
Append(~Plist,(-80*w - 611)*OK);
Append(~Plist,(-80*w + 691)*OK);
Append(~Plist,(52*w - 449)*OK);
Append(~Plist,(52*w + 397)*OK);
Append(~Plist,(-2*w + 7)*OK);
Append(~Plist,(2*w + 5)*OK);
Append(~Plist,(233)*OK+(w + 53)*OK);
Append(~Plist,(233)*OK+(w + 179)*OK);
Append(~Plist,(48*w + 367)*OK);
Append(~Plist,(48*w - 415)*OK);
Append(~Plist,(257)*OK+(w + 68)*OK);
Append(~Plist,(257)*OK+(w + 188)*OK);
Append(~Plist,(263)*OK+(w + 76)*OK);
Append(~Plist,(263)*OK+(w + 186)*OK);
Append(~Plist,(-6*w - 43)*OK);
Append(~Plist,(-6*w + 49)*OK);
Append(~Plist,(8*w + 59)*OK);
Append(~Plist,(-8*w + 67)*OK);
Append(~Plist,(277)*OK+(w + 94)*OK);
Append(~Plist,(277)*OK+(w + 182)*OK);
Append(~Plist,(32*w + 245)*OK);
Append(~Plist,(32*w - 277)*OK);
Append(~Plist,(283)*OK+(w + 92)*OK);
Append(~Plist,(283)*OK+(w + 190)*OK);
Append(~Plist,(17)*OK);
Append(~Plist,(-2*w + 25)*OK);
Append(~Plist,(2*w + 23)*OK);
Append(~Plist,(313)*OK+(w + 75)*OK);
Append(~Plist,(313)*OK+(w + 237)*OK);
Append(~Plist,(-4*w - 25)*OK);
Append(~Plist,(4*w - 29)*OK);
Append(~Plist,(337)*OK+(w + 82)*OK);
Append(~Plist,(337)*OK+(w + 254)*OK);
Append(~Plist,(353)*OK+(w + 88)*OK);
Append(~Plist,(353)*OK+(w + 264)*OK);
Append(~Plist,(19)*OK);
Append(~Plist,(373)*OK+(w + 28)*OK);
Append(~Plist,(373)*OK+(w + 344)*OK);
Append(~Plist,(383)*OK+(w + 107)*OK);
Append(~Plist,(383)*OK+(w + 275)*OK);
Append(~Plist,(397)*OK+(w + 69)*OK);
Append(~Plist,(397)*OK+(w + 327)*OK);
Append(~Plist,(34*w + 259)*OK);
Append(~Plist,(34*w - 293)*OK);
Append(~Plist,(10*w + 79)*OK);
Append(~Plist,(-10*w + 89)*OK);
Append(~Plist,(18*w - 157)*OK);
Append(~Plist,(-18*w - 139)*OK);
Append(~Plist,(443)*OK+(w + 160)*OK);
Append(~Plist,(443)*OK+(w + 282)*OK);
Append(~Plist,(6*w - 47)*OK);
Append(~Plist,(6*w + 41)*OK);
Append(~Plist,(457)*OK+(w + 74)*OK);
Append(~Plist,(457)*OK+(w + 382)*OK);
Append(~Plist,(-4*w + 41)*OK);
Append(~Plist,(4*w + 37)*OK);
Append(~Plist,(463)*OK+(w + 31)*OK);
Append(~Plist,(463)*OK+(w + 431)*OK);
effort := 400;
ECSearch := procedure(class_label, N, aplist);
print "Isogeny class ", class_label;
goodP := [P: P in Plist | Valuation(N,P) eq 0];
goodP := [goodP[i]: i in [1..#(aplist)]];
curves := EllipticCurveSearch(N,effort : Primes:=goodP, Traces:=aplist);
curves := [E: E in curves | &and[TraceOfFrobenius(E,goodP[i]) eq aplist[i] : i in [1..#(aplist)]]];
if #curves eq 0 then print "No curve found"; end if;
for E in curves do;
 a1,a2,a3,a4,a6:=Explode(aInvariants(E));
 printf "Curve [%o,%o,%o,%o,%o]\n",a1,a2,a3,a4,a6;
 end for;
end procedure;
SetColumns(0);

ECSearch("4.1-a",(2)*OK,[2, 2, 3, -3, -3, -3, -3, 0, 0, 14, 6, 3, 3, -2, -2, -2, -2, 0, 0, 3, 3, -8, -8, 7, 7, -12, -12, 12]);
ECSearch("4.1-b",(2)*OK,[-2, -2, -3, -3, -3, 3, 3, 0, 0, 14, -6, 3, 3, 2, 2, 2, 2, 0, 0, 3, 3, 8, 8, -7, -7, -12, -12, -12]);
ECSearch("6.1-a",(11*w + 84)*OK,[-1, 0, -2, 0, 4, -4, -8, -6, 10, 6, 2, 12, -4, -12, 8, 10, 2, 12, -4, 6, -6, 4, 0, 16, -16, -12, 12, 18]);
ECSearch("6.1-b",(11*w + 84)*OK,[1, 0, 2, 0, 4, 4, 8, -6, 10, 6, -2, 12, -4, 12, -8, -10, -2, -12, 4, 6, -6, -4, 0, -16, 16, -12, 12, -18]);
ECSearch("6.2-a",(-w - 8)*OK,[0, 2, 2, -5, -4, -3, 5, 7, -2, 2, 3, 5, -10, -4, -12, -1, 10, -6, -7, -9, 6, -6, -13, -19, -12, 7, -12, -9]);
ECSearch("6.2-b",(-w - 8)*OK,[0, -2, -2, -5, -4, 3, -5, 7, -2, 2, -3, 5, -10, 4, 12, 1, -10, 6, 7, -9, 6, 6, 13, 19, 12, 7, -12, 9]);
ECSearch("6.4-a",(-11*w + 95)*OK,[-1, 0, -2, 4, 0, -8, -4, 10, -6, 6, 2, -4, 12, 8, -12, 2, 10, -4, 12, -6, 6, 0, 4, -16, 16, 12, -12, 10]);
ECSearch("6.4-b",(-11*w + 95)*OK,[1, 0, 2, 4, 0, 8, 4, 10, -6, 6, -2, -4, 12, -8, 12, -2, -10, 4, -12, -6, 6, 0, -4, 16, -16, 12, -12, -10]);
ECSearch("6.3-a",(-w + 9)*OK,[0, 2, 2, -4, -5, 5, -3, -2, 7, 2, 3, -10, 5, -12, -4, 10, -1, -7, -6, 6, -9, -13, -6, -12, -19, -12, 7, 2]);
ECSearch("6.3-b",(-w + 9)*OK,[0, -2, -2, -4, -5, -5, 3, -2, 7, 2, -3, -10, 5, 12, 4, -10, 1, 7, 6, 6, -9, 13, 6, 12, 19, -12, 7, -2]);
ECSearch("9.1-a",(3)*OK,[1, -2, -1, 2, 5, 6, -3, 9, -3, -8, 13, 15, 6, -14, 13, -2, -2, -8, -11, 15, -6, 0, 0, -11, -20, 3, 12, 18]);
ECSearch("9.1-b",(3)*OK,[2, -1, 1, 5, 2, 3, -6, -3, 9, -8, -13, 6, 15, -13, 14, 2, 2, 11, 8, -6, 15, 0, 0, 20, 11, 12, 3, -12]);
ECSearch("9.1-c",(3)*OK,[-2, -2, -4, 2, 2, -6, -6, 0, 0, 10, 4, 0, 0, 13, 13, -11, -11, 4, 4, 0, 0, 9, 9, 13, 13, -18, -18, -12]);
ECSearch("9.1-d",(3)*OK,[-1, -1, -2, -4, -4, 0, 0, 6, 6, 10, 14, 12, 12, -4, -4, 2, 2, -4, -4, 18, 18, 0, 0, 8, 8, -12, -12, -6]);
ECSearch("9.1-e",(3)*OK,[1, 1, 2, -4, -4, 0, 0, 6, 6, 10, -14, 12, 12, 4, 4, -2, -2, 4, 4, 18, 18, 0, 0, -8, -8, -12, -12, 6]);
ECSearch("9.1-f",(3)*OK,[2, 2, 4, 2, 2, 6, 6, 0, 0, 10, -4, 0, 0, -13, -13, 11, 11, -4, -4, 0, 0, -9, -9, -13, -13, -18, -18, 12]);
ECSearch("9.1-g",(3)*OK,[-2, 1, -1, 5, 2, -3, 6, -3, 9, -8, 13, 6, 15, 13, -14, -2, -2, -11, -8, -6, 15, 0, 0, -20, -11, 12, 3, 12]);
ECSearch("9.1-h",(3)*OK,[-1, 2, 1, 2, 5, -6, 3, 9, -3, -8, -13, 15, 6, 14, -13, 2, 2, 8, 11, 15, -6, 0, 0, 11, 20, 3, 12, -18]);
ECSearch("9.2-a",(2*w + 15)*OK,[-1, 1, 1, 0, -2, 2, 1, -1, 3, -3, 14, 0, -10, 10, 4, 4, 12, 12, -9, 9, 6, -6, -5, -5, -15, -15, -16, 16, 18]);
ECSearch("9.2-b",(2*w + 15)*OK,[1, -1, -1, 0, -2, 2, -1, 1, 3, -3, 14, 0, -10, 10, -4, -4, -12, -12, 9, -9, 6, -6, 5, 5, 15, 15, -16, 16, -18]);
ECSearch("9.3-a",(2*w - 17)*OK,[1, -1, 1, 0, 2, -2, -1, 1, -3, 3, 14, 0, 10, -10, 4, 4, 12, 12, 9, -9, -6, 6, -5, -5, -15, -15, 16, -16, -18]);
ECSearch("9.3-b",(2*w - 17)*OK,[-1, 1, -1, 0, 2, -2, 1, -1, -3, 3, 14, 0, 10, -10, -4, -4, -12, -12, -9, 9, -6, 6, 5, 5, 15, 15, 16, -16, 18]);
ECSearch("12.1-a",(6)*OK+(2*w)*OK,[2, -3, -3, -1, 7, -5, 4, -6, 6, 10, 11, 1, 2, 0, 0, 10, 6, 10, 5, 7, -16, 0, 7, -11, 8, 12, -6]);
ECSearch("12.1-b",(6)*OK+(2*w)*OK,[1, -3, -3, -1, 2, -1, 4, 0, 9, 2, 8, 4, -2, -15, 12, 2, 6, 2, 11, -8, -14, 12, -1, -16, 14, -12, -12]);
ECSearch("12.1-c",(6)*OK+(2*w)*OK,[1, -1, -3, -3, -4, 1, -10, 0, -5, -4, -10, -10, 12, -3, 6, 6, -14, -14, -15, -10, -4, 6, 7, -8, -18, 22, 2]);
ECSearch("12.1-d",(6)*OK+(2*w)*OK,[-2, -2, 2, 4, -2, 0, 4, 4, -4, 0, -4, -4, -12, 10, -10, 10, 4, 0, 0, -18, -14, 0, -12, 16, -12, -8, -14]);
ECSearch("12.1-e",(6)*OK+(2*w)*OK,[-1, -1, 5, -5, 2, -3, 4, 4, 5, -6, -4, -4, -6, -1, -8, 2, 2, -18, 15, 0, 2, 12, 9, -16, 6, 16, -16]);
ECSearch("12.1-f",(6)*OK+(2*w)*OK,[1, 1, 5, -5, -2, 3, 4, 4, 5, 6, -4, -4, 6, 1, 8, -2, -2, 18, 15, 0, -2, -12, -9, 16, 6, 16, 16]);
ECSearch("12.1-g",(6)*OK+(2*w)*OK,[2, 2, 2, 4, 2, 0, 4, 4, -4, 0, -4, -4, 12, -10, 10, -10, -4, 0, 0, -18, 14, 0, 12, -16, -12, -8, 14]);
ECSearch("12.1-h",(6)*OK+(2*w)*OK,[-1, 1, -3, -3, 4, -1, -10, 0, -5, 4, -10, -10, -12, 3, -6, -6, 14, 14, -15, -10, 4, -6, -7, 8, -18, 22, -2]);
ECSearch("12.1-i",(6)*OK+(2*w)*OK,[-1, 3, -3, -1, -2, 1, 4, 0, 9, -2, 8, 4, 2, 15, -12, -2, -6, -2, 11, -8, 14, -12, 1, 16, 14, -12, 12]);
ECSearch("12.1-j",(6)*OK+(2*w)*OK,[-2, 3, -3, -1, -7, 5, 4, -6, 6, -10, 11, 1, -2, 0, 0, -10, -6, -10, 5, 7, 16, 0, -7, 11, 8, 12, 6]);
ECSearch("12.2-a",(6)*OK+(2*w + 4)*OK,[2, -3, -1, -3, -5, 7, -6, 4, 6, 10, 1, 11, 0, 2, 10, 0, 10, 6, 7, 5, 0, -16, -11, 7, 12, 8, -2]);
ECSearch("12.2-b",(6)*OK+(2*w + 4)*OK,[1, -3, -1, -3, -1, 2, 0, 4, 9, 2, 4, 8, -15, -2, 2, 12, 2, 6, -8, 11, 12, -14, -16, -1, -12, 14, 5]);
ECSearch("12.2-c",(6)*OK+(2*w + 4)*OK,[1, -1, -3, -3, 1, -4, 0, -10, -5, -4, -10, -10, -3, 12, 6, 6, -14, -14, -10, -15, 6, -4, -8, 7, 22, -18, 17]);
ECSearch("12.2-d",(6)*OK+(2*w + 4)*OK,[-2, -2, 4, 2, 0, -2, 4, 4, -4, 0, -4, -4, 10, -12, 10, -10, 0, 4, -18, 0, 0, -14, 16, -12, -8, -12, -18]);
ECSearch("12.2-e",(6)*OK+(2*w + 4)*OK,[-1, -1, -5, 5, -3, 2, 4, 4, 5, -6, -4, -4, -1, -6, 2, -8, -18, 2, 0, 15, 12, 2, -16, 9, 16, 6, -21]);
ECSearch("12.2-f",(6)*OK+(2*w + 4)*OK,[1, 1, -5, 5, 3, -2, 4, 4, 5, 6, -4, -4, 1, 6, -2, 8, 18, -2, 0, 15, -12, -2, 16, -9, 16, 6, 21]);
ECSearch("12.2-g",(6)*OK+(2*w + 4)*OK,[2, 2, 4, 2, 0, 2, 4, 4, -4, 0, -4, -4, -10, 12, -10, 10, 0, -4, -18, 0, 0, 14, -16, 12, -8, -12, 18]);
ECSearch("12.2-h",(6)*OK+(2*w + 4)*OK,[-1, 1, -3, -3, -1, 4, 0, -10, -5, 4, -10, -10, 3, -12, -6, -6, 14, 14, -10, -15, -6, 4, 8, -7, 22, -18, -17]);
ECSearch("12.2-i",(6)*OK+(2*w + 4)*OK,[-1, 3, -1, -3, 1, -2, 0, 4, 9, -2, 4, 8, 15, 2, -2, -12, -2, -6, -8, 11, -12, 14, 16, 1, -12, 14, -5]);
ECSearch("12.2-j",(6)*OK+(2*w + 4)*OK,[-2, 3, -1, -3, 5, -7, -6, 4, 6, -10, 1, 11, 0, -2, -10, 0, -10, -6, 7, 5, 0, 16, 11, -7, 12, 8, 2]);
ECSearch("15.1-a",(8*w + 61)*OK,[-2, 0, 1, 2, -4, 1, -3, 8, 5, -12, 0, -5, 8, 4, 13, 0, 11, -9, 4, -15, -4, -8, -12, 10, 13, -8, 11, 19]);
ECSearch("15.1-b",(8*w + 61)*OK,[2, 0, -1, 2, -4, -1, 3, 8, 5, -12, 0, -5, 8, -4, -13, 0, -11, 9, -4, -15, -4, 8, 12, -10, -13, -8, 11, -19]);
ECSearch("15.2-a",(-8*w + 69)*OK,[0, -2, 1, -4, 2, -3, 1, 5, 8, -12, 0, 8, -5, 13, 4, 11, 0, 4, -9, -4, -15, -12, -8, 13, 10, 11, -8, 11]);
ECSearch("15.2-b",(-8*w + 69)*OK,[0, 2, -1, -4, 2, 3, -1, 5, 8, -12, 0, 8, -5, -13, -4, -11, 0, -4, 9, -4, -15, 12, 8, -13, -10, 11, -8, -11]);
ECSearch("18.1-a",(6)*OK+(3*w)*OK,[-1, 2, -4, 4, 0, 0, 10, -6, -2, -6, -4, -4, -4, 12, -10, 6, 12, -12, -2, -10, 16, -16, -8, -16, -12, 4, -6]);
ECSearch("18.1-b",(6)*OK+(3*w)*OK,[0, 1, 4, 5, 6, 1, -5, -5, -4, -3, 5, 8, 10, -3, -14, -4, 0, 1, -3, -6, 12, -8, 19, 12, 1, 6, 18]);
ECSearch("18.1-c",(6)*OK+(3*w)*OK,[0, -1, 4, 5, -6, -1, -5, -5, -4, 3, 5, 8, -10, 3, 14, 4, 0, -1, -3, -6, -12, 8, -19, -12, 1, 6, -18]);
ECSearch("18.1-d",(6)*OK+(3*w)*OK,[1, -2, -4, 4, 0, 0, 10, -6, -2, 6, -4, -4, 4, -12, 10, -6, -12, 12, -2, -10, -16, 16, 8, 16, -12, 4, 6]);
ECSearch("18.3-a",(18)*OK+(w + 3)*OK,[1, -3, 3, -3, -1, -2, -3, -2, 10, 1, 0, 2, -2, -12, -11, 6, 10, 2, -4, -9, 0, -14, 16, -11, -8, 18, -18, 2]);
ECSearch("18.3-b",(18)*OK+(w + 3)*OK,[-1, -3, 0, 6, 2, 5, -9, 7, 1, -2, 0, -10, -14, -12, -4, 12, -4, -5, 1, 6, -6, -1, 11, 5, 17, 0, 0, -14]);
ECSearch("18.3-c",(18)*OK+(w + 3)*OK,[1, 0, 0, 0, -4, 4, 0, 4, 4, -8, -12, -4, 4, 12, -8, 12, 4, -4, -4, 0, -12, 4, -8, -8, -8, 12, 12, -22]);
ECSearch("18.3-d",(18)*OK+(w + 3)*OK,[-1, 0, 0, 0, -4, -4, 0, 4, 4, -8, 12, -4, 4, -12, 8, -12, -4, 4, 4, 0, -12, -4, 8, 8, 8, 12, 12, 22]);
ECSearch("18.3-e",(18)*OK+(w + 3)*OK,[1, 3, 0, 6, 2, -5, 9, 7, 1, -2, 0, -10, -14, 12, 4, -12, 4, 5, -1, 6, -6, 1, -11, -5, -17, 0, 0, 14]);
ECSearch("18.3-f",(18)*OK+(w + 3)*OK,[-1, 3, -3, -3, -1, 2, 3, -2, 10, 1, 0, 2, -2, 12, 11, -6, -10, -2, 4, -9, 0, 14, -16, 11, 8, 18, -18, -2]);
ECSearch("18.4-a",(18)*OK+(w + 5)*OK,[1, 1, 0, -6, -2, -5, 9, -7, -1, -2, 0, 10, 14, -12, -4, 12, -4, 5, -1, -6, 6, -1, 11, 5, 17, 0, 0, 14]);
ECSearch("18.4-b",(18)*OK+(w + 5)*OK,[-1, -1, 0, -6, -2, 5, -9, -7, -1, -2, 0, 10, 14, 12, 4, -12, 4, -5, 1, -6, 6, 1, -11, -5, -17, 0, 0, -14]);
ECSearch("18.2-a",(6)*OK+(3*w + 3)*OK,[-1, 2, 4, -4, 0, 0, -6, 10, -2, -6, -4, -4, 12, -4, 6, -10, -12, 12, -10, -2, -16, 16, -16, -8, 4, -12, -6]);
ECSearch("18.2-b",(6)*OK+(3*w + 3)*OK,[0, 1, 5, 4, 1, 6, -5, -5, -4, -3, 8, 5, -3, 10, -4, -14, 1, 0, -6, -3, -8, 12, 12, 19, 6, 1, 22]);
ECSearch("18.2-c",(6)*OK+(3*w + 3)*OK,[0, -1, 5, 4, -1, -6, -5, -5, -4, 3, 8, 5, 3, -10, 4, 14, -1, 0, -6, -3, 8, -12, -12, -19, 6, 1, -22]);
ECSearch("18.2-d",(6)*OK+(3*w + 3)*OK,[1, -2, 4, -4, 0, 0, -6, 10, -2, 6, -4, -4, -12, 4, -6, 10, 12, -12, -10, -2, 16, -16, 16, 8, 4, -12, 6]);
ECSearch("18.6-a",(18)*OK+(w + 14)*OK,[1, -3, 3, -1, -3, -3, -2, 10, -2, 1, 0, -2, 2, -11, -12, 10, 6, -4, 2, 0, -9, 16, -14, -8, -11, -18, 18, 5]);
ECSearch("18.6-b",(18)*OK+(w + 14)*OK,[-1, -3, 0, 2, 6, -9, 5, 1, 7, -2, 0, -14, -10, -4, -12, -4, 12, 1, -5, -6, 6, 11, -1, 17, 5, 0, 0, -2]);
ECSearch("18.6-c",(18)*OK+(w + 14)*OK,[1, 0, 0, -4, 0, 0, 4, 4, 4, -8, -12, 4, -4, -8, 12, 4, 12, -4, -4, -12, 0, -8, 4, -8, -8, 12, 12, -10]);
ECSearch("18.6-d",(18)*OK+(w + 14)*OK,[-1, 0, 0, -4, 0, 0, -4, 4, 4, -8, 12, 4, -4, 8, -12, -4, -12, 4, 4, -12, 0, 8, -4, 8, 8, 12, 12, 10]);
ECSearch("18.6-e",(18)*OK+(w + 14)*OK,[1, 3, 0, 2, 6, 9, -5, 1, 7, -2, 0, -14, -10, 4, 12, 4, -12, -1, 5, -6, 6, -11, 1, -17, -5, 0, 0, 2]);
ECSearch("18.6-f",(18)*OK+(w + 14)*OK,[-1, 3, -3, -1, -3, 3, 2, 10, -2, 1, 0, -2, 2, 11, 12, -10, -6, 4, -2, 0, -9, -16, 14, 8, 11, -18, 18, -5]);
ECSearch("18.5-a",(18)*OK+(w + 12)*OK,[1, 1, 0, -2, -6, 9, -5, -1, -7, -2, 0, 14, 10, -4, -12, -4, 12, -1, 5, 6, -6, 11, -1, 17, 5, 0, 0, 2]);
ECSearch("18.5-b",(18)*OK+(w + 12)*OK,[-1, -1, 0, -2, -6, -9, 5, -1, -7, -2, 0, 14, 10, 4, 12, 4, -12, 1, -5, 6, -6, -11, 1, -17, -5, 0, 0, -2]);
