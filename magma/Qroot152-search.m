print "Field 2.2.152.1";
Qx<x> := PolynomialRing(RationalField());
K<w> := NumberField(x^2 - 38);
OK := Integers(K);
Plist := [];
Append(~Plist,(-w - 6)*OK);
Append(~Plist,(3)*OK);
Append(~Plist,(-w + 7)*OK);
Append(~Plist,(w + 7)*OK);
Append(~Plist,(w + 5)*OK);
Append(~Plist,(w - 5)*OK);
Append(~Plist,(2*w - 13)*OK);
Append(~Plist,(2*w + 13)*OK);
Append(~Plist,(3*w - 19)*OK);
Append(~Plist,(5)*OK);
Append(~Plist,(w + 3)*OK);
Append(~Plist,(w - 3)*OK);
Append(~Plist,(-2*w + 11)*OK);
Append(~Plist,(-2*w - 11)*OK);
Append(~Plist,(w + 1)*OK);
Append(~Plist,(w - 1)*OK);
Append(~Plist,(w + 9)*OK);
Append(~Plist,(w - 9)*OK);
Append(~Plist,(7)*OK);
Append(~Plist,(-3*w + 17)*OK);
Append(~Plist,(-3*w - 17)*OK);
Append(~Plist,(-2*w + 9)*OK);
Append(~Plist,(2*w + 9)*OK);
Append(~Plist,(-2*w + 15)*OK);
Append(~Plist,(2*w + 15)*OK);
Append(~Plist,(-4*w + 23)*OK);
Append(~Plist,(-4*w - 23)*OK);
Append(~Plist,(w + 11)*OK);
Append(~Plist,(w - 11)*OK);
Append(~Plist,(-2*w + 7)*OK);
Append(~Plist,(2*w + 7)*OK);
Append(~Plist,(-5*w + 29)*OK);
Append(~Plist,(-5*w - 29)*OK);
Append(~Plist,(-2*w + 5)*OK);
Append(~Plist,(2*w + 5)*OK);
Append(~Plist,(w + 13)*OK);
Append(~Plist,(w - 13)*OK);
Append(~Plist,(-2*w + 17)*OK);
Append(~Plist,(2*w + 17)*OK);
Append(~Plist,(-5*w + 33)*OK);
Append(~Plist,(5*w + 33)*OK);
Append(~Plist,(-2*w + 1)*OK);
Append(~Plist,(-2*w - 1)*OK);
Append(~Plist,(-7*w - 45)*OK);
Append(~Plist,(7*w - 45)*OK);
Append(~Plist,(4*w + 21)*OK);
Append(~Plist,(-4*w + 21)*OK);
Append(~Plist,(-3*w - 13)*OK);
Append(~Plist,(3*w - 13)*OK);
Append(~Plist,(-7*w + 41)*OK);
Append(~Plist,(-7*w - 41)*OK);
Append(~Plist,(-8*w + 47)*OK);
Append(~Plist,(-8*w - 47)*OK);
Append(~Plist,(-4*w + 29)*OK);
Append(~Plist,(4*w + 29)*OK);
Append(~Plist,(w + 17)*OK);
Append(~Plist,(w - 17)*OK);
Append(~Plist,(-9*w + 53)*OK);
Append(~Plist,(-9*w - 53)*OK);
Append(~Plist,(-3*w + 25)*OK);
Append(~Plist,(3*w + 25)*OK);
Append(~Plist,(-3*w - 7)*OK);
Append(~Plist,(3*w - 7)*OK);
Append(~Plist,(-6*w - 41)*OK);
Append(~Plist,(6*w - 41)*OK);
Append(~Plist,(-3*w + 5)*OK);
Append(~Plist,(3*w + 5)*OK);
Append(~Plist,(7*w - 47)*OK);
Append(~Plist,(7*w + 47)*OK);
Append(~Plist,(-4*w - 31)*OK);
Append(~Plist,(4*w - 31)*OK);
Append(~Plist,(-11*w + 65)*OK);
Append(~Plist,(-11*w - 65)*OK);
Append(~Plist,(-4*w + 15)*OK);
Append(~Plist,(4*w + 15)*OK);
Append(~Plist,(5*w + 37)*OK);
Append(~Plist,(5*w - 37)*OK);
Append(~Plist,(5*w + 23)*OK);
Append(~Plist,(5*w - 23)*OK);
Append(~Plist,(-12*w + 71)*OK);
Append(~Plist,(-12*w - 71)*OK);
Append(~Plist,(-4*w - 13)*OK);
Append(~Plist,(4*w - 13)*OK);
Append(~Plist,(-11*w - 71)*OK);
Append(~Plist,(11*w - 71)*OK);
Append(~Plist,(12*w - 77)*OK);
Append(~Plist,(12*w + 77)*OK);
Append(~Plist,(-13*w - 83)*OK);
Append(~Plist,(-13*w + 83)*OK);
Append(~Plist,(-4*w + 11)*OK);
Append(~Plist,(4*w + 11)*OK);
Append(~Plist,(w + 23)*OK);
Append(~Plist,(w - 23)*OK);
Append(~Plist,(-3*w - 29)*OK);
Append(~Plist,(3*w - 29)*OK);
Append(~Plist,(-5*w - 21)*OK);
Append(~Plist,(5*w - 21)*OK);
Append(~Plist,(23)*OK);
Append(~Plist,(-5*w - 39)*OK);
Append(~Plist,(5*w - 39)*OK);
effort := 400;
ECSearch := procedure(class_label, N, aplist);
print "Isogeny class ", class_label;
goodP := [P: P in Plist | Valuation(N,P) eq 0];
goodP := [goodP[i]: i in [1..#(aplist)]];
curves := EllipticCurveSearch(N,effort : Primes:=goodP, Traces:=aplist);
curves := [E: E in curves | &and[TraceOfFrobenius(E,goodP[i]) eq aplist[i] : i in [1..#(aplist)]]];
if #curves eq 0 then print "No curve found"; end if;
for E in curves do;
 a1,a2,a3,a4,a6:=Explode(aInvariants(E));
 printf "Curve [%o,%o,%o,%o,%o]\n",a1,a2,a3,a4,a6;
 end for;
end procedure;
SetColumns(0);

ECSearch("1.1-a",(1)*OK,[0, -2, 6, 6, 0, 0, -6, -6, -2, 10, 0, 0, 0, 0, 0, 0, 10, 10, 14, 0, 0, 0, 0, -2, -2, 0, 0, -18, -18, 0]);
ECSearch("16.1-a",(4)*OK,[-2, -6, -6, 0, 0, -6, -6, 2, 10, 0, 0, 0, 0, 0, 0, -10, -10, 14, 0, 0, 0, 0, -2, -2, 0, 0, 18, 18, 0]);
ECSearch("19.1-a",(3*w - 19)*OK,[0, -5, 0, 0, -3, 3, 3, 3, 10, -9, 9, 6, -6, 6, -6, -8, -8, 5, 9, -9, 0, 0, -11, -11, -12, 12, 6, 6, 6]);
ECSearch("19.1-b",(3*w - 19)*OK,[0, -2, 3, 3, -4, -4, -3, -3, -1, 6, 6, -4, -4, 2, 2, -1, -1, -13, 12, 12, 6, 6, -7, -7, 8, 8, 12, 12, 14]);
ECSearch("19.1-c",(3*w - 19)*OK,[0, 3, 0, 0, -5, 5, -5, -5, -6, -7, 7, -10, 10, 2, -2, 4, 4, 13, -9, 9, -12, 12, -11, -11, -16, 16, 14, 14, 2]);
ECSearch("19.1-d",(3*w - 19)*OK,[0, -5, 0, 0, 3, -3, 3, 3, 10, 9, -9, -6, 6, -6, 6, -8, -8, 5, -9, 9, 0, 0, -11, -11, 12, -12, 6, 6, -6]);
ECSearch("19.1-e",(3*w - 19)*OK,[0, -2, 3, 3, 4, 4, -3, -3, -1, -6, -6, 4, 4, -2, -2, -1, -1, -13, -12, -12, -6, -6, -7, -7, -8, -8, 12, 12, -14]);
ECSearch("19.1-f",(3*w - 19)*OK,[0, 3, 0, 0, 5, -5, -5, -5, -6, 7, -7, 10, -10, -2, 2, 4, 4, 13, 9, -9, 12, -12, -11, -11, 16, -16, 14, 14, -2]);
ECSearch("22.1-a",(-w - 4)*OK,[-2, 0, 6, 0, -3, 0, -2, 1, -6, -3, -3, -6, 6, 12, 10, 10, 5, -6, 12, -6, -3, 7, -2, -12, 6, -9, 0, 0]);
ECSearch("22.1-b",(-w - 4)*OK,[0, 2, 4, 4, 3, 8, -5, -4, -10, 10, 2, 2, 8, -7, -11, -1, 10, -6, -6, -3, 12, 9, 4, 5, 10, -16, 4, -6]);
ECSearch("22.1-c",(-w - 4)*OK,[-2, 0, -6, 0, -3, 0, -2, 1, 6, 3, 3, 6, -6, -12, 10, 10, 5, 6, -12, 6, 3, 7, -2, 12, -6, -9, 0, 0]);
ECSearch("22.1-d",(-w - 4)*OK,[0, 2, -4, -4, 3, 8, -5, -4, 10, -10, -2, -2, -8, 7, -11, -1, 10, 6, 6, 3, -12, 9, 4, -5, -10, -16, 4, 6]);
ECSearch("22.2-a",(w - 4)*OK,[-2, 0, 0, 6, 0, -3, -2, 1, -3, -6, -6, -3, 12, 6, 10, 10, 5, 12, -6, -3, -6, -2, 7, 6, -12, 0, -9, -9]);
ECSearch("22.2-b",(w - 4)*OK,[0, 2, 4, 4, 8, 3, -5, -4, 10, -10, 2, 2, -7, 8, -1, -11, 10, -6, -6, 12, -3, 4, 9, 10, 5, 4, -16, 4]);
ECSearch("22.2-c",(w - 4)*OK,[-2, 0, 0, -6, 0, -3, -2, 1, 3, 6, 6, 3, -12, -6, 10, 10, 5, -12, 6, 3, 6, -2, 7, -6, 12, 0, -9, 9]);
ECSearch("22.2-d",(w - 4)*OK,[0, 2, -4, -4, 8, 3, -5, -4, -10, 10, -2, -2, 7, -8, -1, -11, 10, 6, 6, -12, 3, 4, 9, -10, -5, 4, -16, -4]);
ECSearch("26.1-a",(w + 8)*OK,[-2, 2, -2, 5, -6, -4, 2, -2, 0, -8, -3, 7, -8, -7, 12, 8, -11, -3, -1, -2, -14, 8, 13, 16, 4, 2, -12, 7]);
ECSearch("26.1-b",(w + 8)*OK,[2, -2, -6, 1, -2, 0, 2, 2, 4, 0, -3, -5, -4, 5, -8, 8, 1, 1, -9, 2, -6, 12, -11, -16, 12, -14, -8, -13]);
ECSearch("26.1-c",(w + 8)*OK,[2, -2, -6, -1, -2, 0, 2, 2, -4, 0, 3, 5, 4, -5, -8, 8, 1, -1, 9, -2, 6, 12, -11, 16, -12, -14, -8, 13]);
ECSearch("26.1-d",(w + 8)*OK,[-2, 2, -2, -5, -6, -4, 2, -2, 0, 8, 3, -7, 8, 7, 12, 8, -11, 3, 1, 2, 14, 8, 13, -16, -4, 2, -12, -7]);
ECSearch("26.2-a",(w - 8)*OK,[-2, -2, 2, 5, -4, -6, 2, -2, -8, 0, 7, -3, -7, -8, 8, 12, -11, -1, -3, -14, -2, 13, 8, 4, 16, -12, 2, 10]);
ECSearch("26.2-b",(w - 8)*OK,[2, -6, -2, 1, 0, -2, 2, 2, 0, 4, -5, -3, 5, -4, 8, -8, 1, -9, 1, -6, 2, -11, 12, 12, -16, -8, -14, -10]);
ECSearch("26.2-c",(w - 8)*OK,[2, -6, -2, -1, 0, -2, 2, 2, 0, -4, 5, 3, -5, 4, 8, -8, 1, 9, -1, 6, -2, -11, 12, -12, 16, -8, -14, 10]);
ECSearch("26.2-d",(w - 8)*OK,[-2, -2, 2, -5, -4, -6, 2, -2, 8, 0, -7, 3, 7, 8, 8, 12, -11, 1, 3, 14, 2, 13, 8, -4, -16, -12, 2, -10]);
ECSearch("32.1-a",(-4*w - 24)*OK,[-5, -4, 4, 3, 3, 3, 3, 0, 10, -1, -1, -4, 4, 6, 6, 0, 0, -5, -1, -1, -12, 12, 3, 3, -12, 12, 8, -8, 0]);
ECSearch("32.1-b",(-4*w - 24)*OK,[-5, -4, 4, -3, -3, 3, 3, 0, 10, 1, 1, 4, -4, -6, -6, 0, 0, -5, 1, 1, 12, -12, 3, 3, 12, -12, 8, -8, 0]);
ECSearch("32.1-c",(-4*w - 24)*OK,[-6, 0, 0, 6, 6, 2, 2, 0, -6, -10, -10, 0, 0, -2, -2, 0, 0, -14, 14, 14, 0, 0, -6, -6, 0, 0, 0, 0, 0]);
ECSearch("32.1-d",(-4*w - 24)*OK,[-6, 0, 0, -6, -6, 2, 2, 0, -6, 10, 10, 0, 0, 2, 2, 0, 0, -14, -14, -14, 0, 0, -6, -6, 0, 0, 0, 0, 0]);
ECSearch("32.1-e",(-4*w - 24)*OK,[-5, 4, -4, 3, 3, 3, 3, 0, 10, -1, -1, 4, -4, 6, 6, 0, 0, -5, -1, -1, 12, -12, 3, 3, 12, -12, -8, 8, 0]);
ECSearch("32.1-f",(-4*w - 24)*OK,[-5, 4, -4, -3, -3, 3, 3, 0, 10, 1, 1, -4, 4, -6, -6, 0, 0, -5, 1, 1, -12, 12, 3, 3, -12, 12, -8, 8, 0]);
ECSearch("34.1-a",(w + 2)*OK,[2, 4, -2, 4, 4, 2, -8, 6, 6, -8, 0, -4, 6, 4, 6, -10, -6, -12, 12, 0, 12, -2, 2, 8, 0, -12, 0, 4]);
ECSearch("34.1-b",(w + 2)*OK,[2, 4, -2, -4, -4, 2, -8, 6, -6, 8, 0, 4, -6, -4, 6, -10, -6, 12, -12, 0, -12, -2, 2, -8, 0, -12, 0, -4]);
ECSearch("34.2-a",(w - 2)*OK,[2, -2, 4, 4, 4, 2, -8, 6, -8, 6, -4, 0, 4, 6, -10, 6, -6, 12, -12, 12, 0, 2, -2, 0, 8, 0, -12, 8]);
ECSearch("34.2-b",(w - 2)*OK,[2, -2, 4, -4, -4, 2, -8, 6, 8, -6, 4, 0, -4, -6, -10, 6, -6, -12, 12, -12, 0, 2, -2, 0, -8, 0, -12, -8]);
ECSearch("37.1-a",(w + 1)*OK,[0, 1, -2, 0, -1, -3, 3, -3, 6, -6, -3, -1, 4, 4, -10, -8, 4, -11, 11, 7, 8, 12, 1, 9, -10, 10, 0, 10, -8]);
ECSearch("37.1-b",(w + 1)*OK,[-1, 1, 0, 2, -5, -3, 7, -7, -6, 6, -3, 3, 10, 4, -10, 2, 4, 1, 3, -13, -12, 0, 13, -3, 10, 10, 6, -14, -4]);
ECSearch("37.1-c",(w + 1)*OK,[0, 1, -6, 0, 5, -1, 3, -3, 2, 2, -9, -3, -4, -4, 2, -4, 8, 5, 9, -3, 12, 0, -7, -7, 2, 14, 12, -6, -4]);
ECSearch("37.1-d",(w + 1)*OK,[0, 1, -6, 0, -5, 1, 3, -3, 2, 2, 9, 3, 4, 4, -2, -4, 8, 5, -9, 3, -12, 0, -7, -7, -2, -14, 12, -6, 4]);
ECSearch("37.1-e",(w + 1)*OK,[1, 1, 0, 2, 5, 3, 7, -7, -6, 6, 3, -3, -10, -4, 10, 2, 4, 1, -3, 13, 12, 0, 13, -3, -10, -10, 6, -14, 4]);
ECSearch("37.1-f",(w + 1)*OK,[0, 1, -2, 0, 1, 3, 3, -3, 6, -6, 3, 1, -4, -4, 10, -8, 4, -11, -11, -7, -8, -12, 1, 9, 10, -10, 0, 10, 8]);
ECSearch("37.2-a",(w - 1)*OK,[0, 1, 0, -2, -3, -1, -3, 3, 6, -6, -1, -3, 4, 4, -10, 4, -8, -11, 7, 11, 12, 8, 9, 1, 10, -10, 10, 0, -16]);
ECSearch("37.2-b",(w - 1)*OK,[-1, 1, 2, 0, -3, -5, -7, 7, -6, 6, 3, -3, 4, 10, -10, 4, 2, 1, -13, 3, 0, -12, -3, 13, 10, 10, -14, 6, -16]);
ECSearch("37.2-c",(w - 1)*OK,[0, 1, 0, -6, -1, 5, -3, 3, 2, 2, -3, -9, -4, -4, 2, 8, -4, 5, -3, 9, 0, 12, -7, -7, 14, 2, -6, 12, -4]);
ECSearch("37.2-d",(w - 1)*OK,[0, 1, 0, -6, 1, -5, -3, 3, 2, 2, 3, 9, 4, 4, -2, 8, -4, 5, 3, -9, 0, -12, -7, -7, -14, -2, -6, 12, 4]);
ECSearch("37.2-e",(w - 1)*OK,[1, 1, 2, 0, 3, 5, -7, 7, -6, 6, -3, 3, -4, -10, 10, 4, 2, 1, 13, -3, 0, 12, -3, 13, -10, -10, -14, 6, 16]);
ECSearch("37.2-f",(w - 1)*OK,[0, 1, 0, -2, 3, 1, -3, 3, 6, -6, 1, 3, -4, -4, 10, 4, -8, -11, -7, -11, -12, -8, 9, 1, -10, 10, 10, 0, 16]);
ECSearch("38.1-a",(w)*OK,[-5, -6, -6, 5, 5, 3, 3, -10, 9, 9, -4, -4, 2, 2, 8, 8, -13, -3, -3, -6, -6, -7, -7, -10, -10, -6, -6, 14]);
ECSearch("38.1-b",(w)*OK,[-5, -6, -6, -5, -5, 3, 3, -10, -9, -9, 4, 4, -2, -2, 8, 8, -13, 3, 3, 6, 6, -7, -7, 10, 10, -6, -6, -14]);
ECSearch("38.1-c",(w)*OK,[-5, 2, 2, 1, 1, 3, 3, 6, 5, 5, 8, 8, 2, 2, 4, 4, -5, 1, 1, -2, -2, 9, 9, 10, 10, -6, -6, 6]);
ECSearch("38.1-d",(w)*OK,[-5, 2, 2, -1, -1, 3, 3, 6, -5, -5, -8, -8, -2, -2, 4, 4, -5, -1, -1, 2, 2, 9, 9, -10, -10, -6, -6, -6]);
