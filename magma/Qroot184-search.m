print "Field 2.2.184.1";
Qx<x> := PolynomialRing(RationalField());
K<w> := NumberField(x^2 - 46);
OK := Integers(K);
Plist := [];
Append(~Plist,(23*w - 156)*OK);
Append(~Plist,(w + 7)*OK);
Append(~Plist,(-w + 7)*OK);
Append(~Plist,(9*w - 61)*OK);
Append(~Plist,(-9*w - 61)*OK);
Append(~Plist,(-4*w + 27)*OK);
Append(~Plist,(-4*w - 27)*OK);
Append(~Plist,(-78*w - 529)*OK);
Append(~Plist,(w + 3)*OK);
Append(~Plist,(w - 3)*OK);
Append(~Plist,(-2*w + 15)*OK);
Append(~Plist,(-2*w - 15)*OK);
Append(~Plist,(-3*w - 19)*OK);
Append(~Plist,(3*w - 19)*OK);
Append(~Plist,(-11*w + 75)*OK);
Append(~Plist,(-11*w - 75)*OK);
Append(~Plist,(-5*w + 33)*OK);
Append(~Plist,(-5*w - 33)*OK);
Append(~Plist,(-24*w - 163)*OK);
Append(~Plist,(24*w - 163)*OK);
Append(~Plist,(50*w + 339)*OK);
Append(~Plist,(50*w - 339)*OK);
Append(~Plist,(-2*w + 9)*OK);
Append(~Plist,(2*w + 9)*OK);
Append(~Plist,(73*w - 495)*OK);
Append(~Plist,(-73*w - 495)*OK);
Append(~Plist,(11)*OK);
Append(~Plist,(-65*w - 441)*OK);
Append(~Plist,(65*w - 441)*OK);
Append(~Plist,(129*w - 875)*OK);
Append(~Plist,(129*w + 875)*OK);
Append(~Plist,(-15*w + 101)*OK);
Append(~Plist,(15*w + 101)*OK);
Append(~Plist,(119*w + 807)*OK);
Append(~Plist,(-119*w + 807)*OK);
Append(~Plist,(21*w - 143)*OK);
Append(~Plist,(21*w + 143)*OK);
Append(~Plist,(13)*OK);
Append(~Plist,(w + 15)*OK);
Append(~Plist,(w - 15)*OK);
Append(~Plist,(35*w + 237)*OK);
Append(~Plist,(-35*w + 237)*OK);
Append(~Plist,(-30*w + 203)*OK);
Append(~Plist,(-30*w - 203)*OK);
Append(~Plist,(-6*w + 43)*OK);
Append(~Plist,(-6*w - 43)*OK);
Append(~Plist,(188*w + 1275)*OK);
Append(~Plist,(-188*w + 1275)*OK);
Append(~Plist,(-3*w + 25)*OK);
Append(~Plist,(3*w + 25)*OK);
Append(~Plist,(-7*w + 45)*OK);
Append(~Plist,(7*w + 45)*OK);
Append(~Plist,(26*w - 177)*OK);
Append(~Plist,(26*w + 177)*OK);
Append(~Plist,(-2*w + 21)*OK);
Append(~Plist,(2*w + 21)*OK);
Append(~Plist,(18*w + 121)*OK);
Append(~Plist,(18*w - 121)*OK);
Append(~Plist,(17)*OK);
Append(~Plist,(-3*w + 11)*OK);
Append(~Plist,(3*w + 11)*OK);
Append(~Plist,(-93*w - 631)*OK);
Append(~Plist,(93*w - 631)*OK);
Append(~Plist,(-75*w + 509)*OK);
Append(~Plist,(75*w + 509)*OK);
Append(~Plist,(7*w + 51)*OK);
Append(~Plist,(-7*w + 51)*OK);
Append(~Plist,(-4*w + 33)*OK);
Append(~Plist,(4*w + 33)*OK);
Append(~Plist,(-48*w - 325)*OK);
Append(~Plist,(-48*w + 325)*OK);
Append(~Plist,(19)*OK);
Append(~Plist,(-14*w + 93)*OK);
Append(~Plist,(14*w + 93)*OK);
Append(~Plist,(43*w - 291)*OK);
Append(~Plist,(43*w + 291)*OK);
Append(~Plist,(12*w - 79)*OK);
Append(~Plist,(12*w + 79)*OK);
Append(~Plist,(-3*w + 5)*OK);
Append(~Plist,(3*w + 5)*OK);
Append(~Plist,(36*w - 245)*OK);
Append(~Plist,(36*w + 245)*OK);
Append(~Plist,(-5*w + 27)*OK);
Append(~Plist,(-5*w - 27)*OK);
Append(~Plist,(-6*w + 35)*OK);
Append(~Plist,(6*w + 35)*OK);
Append(~Plist,(-49*w - 333)*OK);
Append(~Plist,(-49*w + 333)*OK);
Append(~Plist,(80*w + 543)*OK);
Append(~Plist,(80*w - 543)*OK);
Append(~Plist,(-132*w + 895)*OK);
Append(~Plist,(132*w + 895)*OK);
Append(~Plist,(-25*w + 171)*OK);
Append(~Plist,(25*w + 171)*OK);
Append(~Plist,(9*w + 65)*OK);
Append(~Plist,(-9*w + 65)*OK);
Append(~Plist,(252*w - 1709)*OK);
Append(~Plist,(-252*w - 1709)*OK);
Append(~Plist,(-3*w + 31)*OK);
Append(~Plist,(3*w + 31)*OK);
effort := 400;
ECSearch := procedure(class_label, N, aplist);
print "Isogeny class ", class_label;
goodP := [P: P in Plist | Valuation(N,P) eq 0];
goodP := [goodP[i]: i in [1..#(aplist)]];
curves := EllipticCurveSearch(N,effort : Primes:=goodP, Traces:=aplist);
curves := [E: E in curves | &and[TraceOfFrobenius(E,goodP[i]) eq aplist[i] : i in [1..#(aplist)]]];
if #curves eq 0 then print "No curve found"; end if;
for E in curves do;
 a1,a2,a3,a4,a6:=Explode(aInvariants(E));
 printf "Curve [%o,%o,%o,%o,%o]\n",a1,a2,a3,a4,a6;
 end for;
end procedure;
SetColumns(0);

ECSearch("2.1-a",(23*w - 156)*OK,[3, -2, 3, -2, 0, 5, -4, 2, -8, 11, 1, 2, -3, 8, 3, -6, -11, 8, -2, -1, -11, 6, -4, 17, -8, 8, -8, -13, -15]);
ECSearch("2.1-b",(23*w - 156)*OK,[-2, 3, 2, -3, -5, 0, 4, 8, -2, 1, 11, 3, -2, 3, 8, 11, 6, -2, 8, 11, 1, 4, -6, 8, -17, 8, -13, -8, 10]);
ECSearch("2.1-c",(23*w - 156)*OK,[-2, 3, -2, 3, 5, 0, -4, -8, 2, 1, 11, -3, 2, 3, 8, -11, -6, -2, 8, -11, -1, -4, 6, -8, 17, 8, -13, -8, 10]);
ECSearch("2.1-d",(23*w - 156)*OK,[3, -2, -3, 2, 0, -5, 4, -2, 8, 11, 1, -2, 3, 8, 3, 6, 11, 8, -2, 1, 11, -6, 4, -17, 8, 8, -8, -13, -15]);
ECSearch("4.1-a",(2)*OK,[1, -3, -4, 0, 4, 0, 4, -4, -8, -11, 5, 12, 4, 0, 8, -4, 12, 1, -7, -4, 4, 16, -12, 8, -8, -10, -13, 7, -11]);
ECSearch("4.1-b",(2)*OK,[-3, 1, 0, 4, 0, -4, -4, 8, 4, 5, -11, -4, -12, 8, 0, -12, 4, -7, 1, -4, 4, 12, -16, 8, -8, -10, 7, -13, 9]);
ECSearch("4.1-c",(2)*OK,[1, -3, 4, 0, -4, 0, -4, 4, 8, -11, 5, -12, -4, 0, 8, 4, -12, 1, -7, 4, -4, -16, 12, -8, 8, -10, -13, 7, -11]);
ECSearch("4.1-d",(2)*OK,[-3, 1, 0, -4, 0, 4, 4, -8, -4, 5, -11, 4, 12, 8, 0, 12, -4, -7, 1, 4, -4, -12, 16, -8, 8, -10, 7, -13, 9]);
ECSearch("6.1-a",(-5*w - 34)*OK,[0, 0, 2, 0, -2, -2, 10, -10, 2, -2, -8, -6, -4, -12, 12, 8, -10, -2, -14, -4, -6, 4, 10, 2, -10, 4, 8, -12]);
ECSearch("6.1-b",(-5*w - 34)*OK,[0, 0, -2, 0, 2, 2, -10, 10, 2, -2, 8, 6, -4, -12, -12, -8, -10, -2, 14, 4, 6, -4, -10, -2, -10, 4, 8, -12]);
ECSearch("6.2-a",(5*w - 34)*OK,[0, 2, 0, -2, 0, -2, -10, 10, -2, 2, -6, -8, -12, -4, 8, 12, -2, -10, -4, -14, 4, -6, 2, 10, -10, 8, 4, 16]);
ECSearch("6.2-b",(5*w - 34)*OK,[0, -2, 0, 2, 0, 2, 10, -10, -2, 2, 6, 8, -12, -4, -8, -12, -2, -10, 4, 14, -4, 6, -2, -10, -10, 8, 4, 16]);
ECSearch("8.1-a",(46*w - 312)*OK,[1, 1, 2, -2, -2, 2, 0, -2, 2, 1, 1, 12, -12, -12, -12, 8, -8, 5, 5, 4, -4, -14, 14, 16, -16, -14, -1, -1, -19]);
ECSearch("8.1-b",(46*w - 312)*OK,[1, 1, -2, 2, 2, -2, 0, 2, -2, 1, 1, -12, 12, -12, -12, -8, 8, 5, 5, -4, 4, 14, -14, -16, 16, -14, -1, -1, -19]);
ECSearch("9.1-a",(3)*OK,[1, -4, 4, 4, -4, 0, 8, -8, 6, 6, -4, 4, -4, -4, -8, 8, 6, 6, -4, 4, -4, 4, 16, -16, 22, -12, -12, -4]);
ECSearch("9.1-b",(3)*OK,[1, 4, -4, -4, 4, 0, -8, 8, 6, 6, 4, -4, -4, -4, 8, -8, 6, 6, 4, -4, 4, -4, -16, 16, 22, -12, -12, -4]);
ECSearch("9.2-a",(14*w + 95)*OK,[0, 2, 0, 0, 0, 0, 0, 0, 0, -6, 6, 0, 0, -6, 6, 0, 0, -2, -2, 0, 0, 0, 0, 0, 0, -14, 18, -18, -22]);
ECSearch("9.3-a",(-14*w + 95)*OK,[0, 2, 0, 0, 0, 0, 0, 0, 0, 6, -6, 0, 0, 6, -6, 0, 0, -2, -2, 0, 0, 0, 0, 0, 0, -14, -18, 18, -22]);
ECSearch("10.1-a",(w - 6)*OK,[1, 0, -4, 1, 3, 7, -10, 1, 4, -4, -6, 4, -3, 8, -7, -12, 4, 5, 8, -11, -14, 12, -10, -11, 5, -13, 1, -5]);
ECSearch("10.1-b",(w - 6)*OK,[-1, 2, -3, 0, 3, 0, 6, 0, -9, -3, 6, 3, 0, -9, 6, 3, 16, -2, -3, 3, 6, 0, -9, 12, 4, -12, 15, 5]);
ECSearch("10.1-c",(w - 6)*OK,[1, 0, -1, 4, -3, -2, -10, 4, -11, 11, 6, 1, 12, -7, 2, -3, 4, -10, 17, 1, 4, 18, 5, -14, -10, 2, 1, -5]);
ECSearch("10.1-d",(w - 6)*OK,[1, 0, 1, -4, 3, 2, 10, -4, -11, 11, -6, -1, 12, -7, -2, 3, 4, -10, -17, -1, -4, -18, -5, 14, -10, 2, 1, -5]);
ECSearch("10.1-e",(w - 6)*OK,[-1, 2, 3, 0, -3, 0, -6, 0, -9, -3, -6, -3, 0, -9, -6, -3, 16, -2, 3, -3, -6, 0, 9, -12, 4, -12, 15, 5]);
ECSearch("10.1-f",(w - 6)*OK,[1, 0, 4, -1, -3, -7, 10, -1, 4, -4, 6, -4, -3, 8, 7, 12, 4, 5, -8, 11, 14, -12, 10, 11, 5, -13, 1, -5]);
ECSearch("10.2-a",(-w - 6)*OK,[0, 1, -4, 3, 1, 7, 1, -10, -4, 4, 4, -6, 8, -3, -12, -7, 5, 4, -11, 8, 12, -14, -11, -10, 5, 1, -13, 15]);
ECSearch("10.2-b",(-w - 6)*OK,[2, -1, -3, 3, 0, 0, 0, 6, -3, -9, 3, 6, -9, 0, 3, 6, -2, 16, 3, -3, 0, 6, 12, -9, 4, 15, -12, 14]);
ECSearch("10.2-c",(-w - 6)*OK,[0, 1, -1, -3, 4, -2, 4, -10, 11, -11, 1, 6, -7, 12, -3, 2, -10, 4, 1, 17, 18, 4, -14, 5, -10, 1, 2, 0]);
ECSearch("10.2-d",(-w - 6)*OK,[0, 1, 1, 3, -4, 2, -4, 10, 11, -11, -1, -6, -7, 12, 3, -2, -10, 4, -1, -17, -18, -4, 14, -5, -10, 1, 2, 0]);
ECSearch("10.2-e",(-w - 6)*OK,[2, -1, 3, -3, 0, 0, 0, -6, -3, -9, -3, -6, -9, 0, -3, -6, -2, 16, -3, 3, 0, -6, -12, 9, 4, 15, -12, 14]);
ECSearch("10.2-f",(-w - 6)*OK,[0, 1, 4, -3, -1, -7, -1, 10, -4, 4, -4, 6, 8, -3, 12, 7, 5, 4, 11, -8, -12, 14, 11, 10, 5, 1, -13, 15]);
ECSearch("14.1-a",(3*w + 20)*OK,[-1, 0, -1, 4, -1, 6, -2, -2, 9, 5, -4, -3, -14, 9, -6, 15, 8, -12, -9, 5, 8, -6, -11, -20, 2, 16, -15, -3]);
ECSearch("14.1-b",(3*w + 20)*OK,[-1, 0, 1, -4, 1, -6, 2, 2, 9, 5, 4, 3, -14, 9, 6, -15, 8, -12, 9, -5, -8, 6, 11, 20, 2, 16, -15, -3]);
ECSearch("14.2-a",(3*w - 20)*OK,[0, -1, 4, -1, -1, 6, -2, -2, 5, 9, -3, -4, 9, -14, 15, -6, -12, 8, 5, -9, -6, 8, -20, -11, 2, -15, 16, 8]);
ECSearch("14.2-b",(3*w - 20)*OK,[0, -1, -4, 1, 1, -6, 2, 2, 5, 9, 3, 4, 9, -14, -15, 6, -12, 8, -5, 9, 6, -8, 20, 11, 2, -15, 16, 8]);
ECSearch("15.2-a",(-32*w + 217)*OK,[0, -1, -3, 0, 3, 9, 6, -9, -3, 12, 6, -6, 9, 0, 6, -6, 16, 7, 6, 12, -3, 0, 18, -15, 4, 12, -15, 23]);
ECSearch("15.2-b",(-32*w + 217)*OK,[0, -1, 3, 0, -3, -9, -6, 9, -3, 12, -6, 6, 9, 0, -6, 6, 16, 7, -6, -12, 3, 0, -18, 15, 4, 12, -15, 23]);
ECSearch("15.3-a",(32*w + 217)*OK,[0, -1, -3, 3, 0, 9, -9, 6, 12, -3, -6, 6, 0, 9, -6, 6, 7, 16, 12, 6, 0, -3, -15, 18, 4, -15, 12, -13]);
ECSearch("15.3-b",(32*w + 217)*OK,[0, -1, 3, -3, 0, -9, 9, -6, 12, -3, 6, -6, 0, 9, 6, -6, 7, 16, -12, -6, 0, 3, 15, -18, 4, -15, 12, -13]);
ECSearch("16.1-a",(4)*OK,[3, -1, 0, -4, 0, -4, -4, -8, -4, 5, -11, 4, 12, -8, 0, 12, -4, -7, 1, -4, 4, 12, -16, -8, 8, -10, -7, 13, -9]);
ECSearch("16.1-b",(4)*OK,[2, -3, -2, 3, -5, 0, 4, -8, 2, 1, 11, -3, 2, -3, -8, -11, -6, -2, 8, 11, 1, 4, -6, -8, 17, 8, 13, 8, -10]);
ECSearch("16.1-c",(4)*OK,[-1, 3, -4, 0, -4, 0, -4, -4, -8, -11, 5, 12, 4, 0, -8, -4, 12, 1, -7, 4, -4, -16, 12, 8, -8, -10, 13, -7, 11]);
ECSearch("16.1-d",(4)*OK,[-3, 2, -3, 2, 0, 5, -4, -2, 8, 11, 1, -2, 3, -8, -3, 6, 11, 8, -2, -1, -11, 6, -4, -17, 8, 8, 8, 13, 15]);
ECSearch("16.1-e",(4)*OK,[-1, -1, 2, -2, 2, -2, 0, -2, 2, 1, 1, 12, -12, 12, 12, 8, -8, 5, 5, -4, 4, 14, -14, 16, -16, -14, 1, 1, 19]);
ECSearch("16.1-f",(4)*OK,[-1, 3, 4, 0, 4, 0, 4, 4, 8, -11, 5, -12, -4, 0, -8, 4, -12, 1, -7, -4, 4, 16, -12, -8, 8, -10, 13, -7, 11]);
ECSearch("16.1-g",(4)*OK,[-3, 2, 3, -2, 0, -5, 4, 2, -8, 11, 1, 2, -3, -8, -3, -6, -11, 8, -2, 1, 11, -6, 4, 17, -8, 8, 8, 13, 15]);
ECSearch("16.1-h",(4)*OK,[-1, -1, -2, 2, -2, 2, 0, 2, -2, 1, 1, -12, 12, 12, 12, -8, 8, 5, 5, 4, -4, -14, 14, -16, 16, -14, 1, 1, 19]);
ECSearch("16.1-i",(4)*OK,[3, -1, 0, 4, 0, 4, 4, 8, 4, 5, -11, -4, -12, -8, 0, -12, 4, -7, 1, 4, -4, -12, 16, 8, -8, -10, -7, 13, -9]);
ECSearch("16.1-j",(4)*OK,[2, -3, 2, -3, 5, 0, -4, 8, -2, 1, 11, 3, -2, -3, -8, 11, 6, -2, 8, -11, -1, -4, 6, 8, -17, 8, 13, 8, -10]);
ECSearch("18.2-a",(-w - 8)*OK,[-1, -3, 0, 0, 3, -6, -6, 0, 3, 9, 12, 3, 6, 3, 6, -9, -2, -2, -15, 3, 0, 12, -9, -6, 4, 6, 15, 5]);
ECSearch("18.2-b",(-w - 8)*OK,[-1, 3, 0, 0, -3, 6, 6, 0, 3, 9, -12, -3, 6, 3, -6, 9, -2, -2, 15, -3, 0, -12, 9, 6, 4, 6, 15, 5]);
ECSearch("18.3-a",(w - 8)*OK,[-1, 0, -3, 3, 0, -6, 0, -6, 9, 3, 3, 12, 3, 6, -9, 6, -2, -2, 3, -15, 12, 0, -6, -9, 4, 15, 6, 14]);
ECSearch("18.3-b",(w - 8)*OK,[-1, 0, 3, -3, 0, 6, 0, 6, 9, 3, -3, -12, 3, 6, 9, -6, -2, -2, -3, 15, -12, 0, 6, 9, 4, 15, 6, 14]);
ECSearch("21.1-a",(-55*w + 373)*OK,[1, 0, 4, 2, 2, 2, 2, -2, 2, 6, -12, 2, -12, 12, 0, 4, 6, 6, -10, 12, 6, -4, -14, 2, 6, 12, 0, -20]);
ECSearch("21.1-b",(-55*w + 373)*OK,[1, 0, -4, -2, -2, -2, -2, 2, 2, 6, 12, -2, -12, 12, 0, -4, 6, 6, 10, -12, -6, 4, 14, -2, 6, 12, 0, -20]);
ECSearch("21.4-a",(-55*w - 373)*OK,[1, 0, 2, 4, 2, 2, -2, 2, 6, 2, 2, -12, 12, -12, 4, 0, 6, 6, 12, -10, -4, 6, 2, -14, 6, 0, 12, 8]);
ECSearch("21.4-b",(-55*w - 373)*OK,[1, 0, -2, -4, -2, -2, 2, -2, 6, 2, -2, 12, 12, -12, -4, 0, 6, 6, -12, 10, 4, -6, -2, 14, 6, 0, 12, 8]);
ECSearch("24.1-a",(-10*w - 68)*OK,[0, 2, -2, 2, 0, 6, 4, -6, -10, 6, 0, 0, 0, -4, -12, -2, 10, 6, 4, 14, -14, 8, 8, 10, -2, 20, -12, 4]);
ECSearch("24.1-b",(-10*w - 68)*OK,[0, -2, 2, -2, 0, -6, -4, 6, -10, 6, 0, 0, 0, -4, 12, 2, 10, 6, -4, -14, 14, -8, -8, -10, -2, 20, -12, 4]);
ECSearch("24.2-a",(10*w - 68)*OK,[0, -2, 2, 0, 2, 6, -6, 4, 6, -10, 0, 0, -4, 0, -2, -12, 6, 10, 14, 4, 8, -14, 10, 8, -2, -12, 20, -4]);
ECSearch("24.2-b",(10*w - 68)*OK,[0, 2, -2, 0, -2, -6, 6, -4, 6, -10, 0, 0, -4, 0, 2, 12, 6, 10, -14, -4, -8, 14, -10, -8, -2, -12, 20, -4]);
ECSearch("25.1-a",(5)*OK,[0, 2, 2, -3, 3, 0, -3, 3, -9, -9, 3, -3, -9, -9, -6, 6, -2, -2, -6, 6, -12, 12, -12, 12, -14, 12, 12, 5]);
ECSearch("25.1-b",(5)*OK,[0, 2, 2, 3, -3, 0, 3, -3, -9, -9, -3, 3, -9, -9, 6, -6, -2, -2, 6, -6, 12, -12, 12, -12, -14, 12, 12, 5]);
ECSearch("25.2-a",(6*w + 41)*OK,[0, -2, 2, 0, 0, 0, 0, 0, 0, -6, -6, 0, 0, 6, 6, 0, 0, -2, 2, 0, 0, 0, 0, 0, 0, 14, 18, 18, 22]);
ECSearch("25.3-a",(-6*w + 41)*OK,[0, 2, -2, 0, 0, 0, 0, 0, 0, -6, -6, 0, 0, 6, 6, 0, 0, 2, -2, 0, 0, 0, 0, 0, 0, 14, 18, 18, 22]);
ECSearch("28.1-a",(-8*w + 54)*OK,[2, 0, -4, -2, -4, 0, -2, 10, 6, 2, 8, 0, -2, -12, -12, -6, 14, 6, 0, 8, 8, 0, 16, -20, -10, 10, 0, 6]);
ECSearch("28.1-b",(-8*w + 54)*OK,[1, 1, 0, 0, -4, 0, -4, -4, 9, -3, 0, 12, 0, 0, 8, 8, 5, -7, 8, -4, -4, -4, 20, -4, -10, -21, 3, 5]);
ECSearch("28.1-c",(-8*w + 54)*OK,[1, 1, 0, 4, 0, -4, -4, -8, -7, -3, 12, 8, 0, 0, -4, -4, -11, 9, -12, -8, 0, 4, 4, 12, 6, -5, 3, -11]);
ECSearch("28.1-d",(-8*w + 54)*OK,[-2, 0, -2, 0, 0, -4, -8, -4, -2, -10, -6, 2, -6, -4, -2, -12, -2, 2, -8, -4, 20, 0, -14, -10, 2, -10, 16, -14]);
ECSearch("28.1-e",(-8*w + 54)*OK,[-2, 0, 2, 0, 0, 4, 8, 4, -2, -10, 6, -2, -6, -4, 2, 12, -2, 2, 8, 4, -20, 0, 14, 10, 2, -10, 16, -14]);
ECSearch("28.1-f",(-8*w + 54)*OK,[1, 1, 0, -4, 0, 4, 4, 8, -7, -3, -12, -8, 0, 0, 4, 4, -11, 9, 12, 8, 0, -4, -4, -12, 6, -5, 3, -11]);
ECSearch("28.1-g",(-8*w + 54)*OK,[1, 1, 0, 0, 4, 0, 4, 4, 9, -3, 0, -12, 0, 0, -8, -8, 5, -7, -8, 4, 4, 4, -20, 4, -10, -21, 3, 5]);
ECSearch("28.1-h",(-8*w + 54)*OK,[2, 0, 4, 2, 4, 0, 2, -10, 6, 2, -8, 0, -2, -12, 12, 6, 14, 6, 0, -8, -8, 0, -16, 20, -10, 10, 0, 6]);
ECSearch("28.2-a",(-8*w - 54)*OK,[0, 2, -2, -4, -4, 0, 10, -2, 2, 6, 0, 8, -12, -2, -6, -12, 6, 14, 8, 0, 0, 8, -20, 16, -10, 0, 10, 20]);
ECSearch("28.2-b",(-8*w - 54)*OK,[1, 1, 0, 0, -4, 0, -4, -4, -3, 9, 12, 0, 0, 0, 8, 8, -7, 5, -4, 8, -4, -4, -4, 20, -10, 3, -21, -19]);
ECSearch("28.2-c",(-8*w - 54)*OK,[1, 1, 4, 0, 0, -4, -8, -4, -3, -7, 8, 12, 0, 0, -4, -4, 9, -11, -8, -12, 4, 0, 12, 4, 6, 3, -5, 13]);
ECSearch("28.2-d",(-8*w - 54)*OK,[0, -2, 0, -2, 0, -4, -4, -8, -10, -2, 2, -6, -4, -6, -12, -2, 2, -2, -4, -8, 0, 20, -10, -14, 2, 16, -10, 12]);
ECSearch("28.2-e",(-8*w - 54)*OK,[0, -2, 0, 2, 0, 4, 4, 8, -10, -2, -2, 6, -4, -6, 12, 2, 2, -2, 4, 8, 0, -20, 10, 14, 2, 16, -10, 12]);
ECSearch("28.2-f",(-8*w - 54)*OK,[1, 1, -4, 0, 0, 4, 8, 4, -3, -7, -8, -12, 0, 0, 4, 4, 9, -11, 8, 12, -4, 0, -12, -4, 6, 3, -5, 13]);
ECSearch("28.2-g",(-8*w - 54)*OK,[1, 1, 0, 0, 4, 0, 4, 4, -3, 9, -12, 0, 0, 0, -8, -8, -7, 5, 4, -8, 4, 4, 4, -20, -10, 3, -21, -19]);
ECSearch("28.2-h",(-8*w - 54)*OK,[0, 2, 2, 4, 4, 0, -10, 2, 2, 6, 0, -8, -12, -2, 6, 12, 6, 14, -8, 0, 0, -8, 20, -16, -10, 0, 10, 20]);
ECSearch("30.1-a",(w + 4)*OK,[2, 2, 0, -2, 0, -4, -10, 6, 2, 6, -12, 10, -4, 6, -12, -4, -2, -8, 8, -4, 0, 6, 2, -16, 8, 0, 20]);
ECSearch("30.1-b",(w + 4)*OK,[-3, 1, 2, 3, -1, 10, 5, -11, -10, 6, -10, -9, -10, -2, 12, -8, -7, 4, 14, -13, -12, 10, -13, 2, -4, 1, 7]);
ECSearch("30.1-c",(w + 4)*OK,[-3, -1, -2, -3, 1, -10, -5, -11, -10, -6, 10, -9, -10, 2, -12, -8, -7, -4, -14, 13, 12, -10, 13, 2, -4, 1, 7]);
ECSearch("30.1-d",(w + 4)*OK,[2, -2, 0, 2, 0, 4, 10, 6, 2, -6, 12, 10, -4, -6, 12, -4, -2, 8, -8, 4, 0, -6, -2, -16, 8, 0, 20]);
ECSearch("30.2-a",(13*w - 88)*OK,[3, -4, 1, 5, 9, 10, 9, -6, 12, 2, 0, -7, -4, 7, 2, -14, -1, 10, 1, 6, -6, 4, -7, 1, -7, -9, 3]);
ECSearch("30.2-b",(13*w - 88)*OK,[2, -3, 3, 0, 6, 9, -3, -6, -9, -9, -6, 9, 9, 6, 15, 7, -2, 3, 12, -9, 12, 12, 3, 13, 0, 18, -13]);
ECSearch("30.2-c",(13*w - 88)*OK,[0, -2, 2, 4, -6, -4, -6, 6, 6, 4, 0, 8, -4, 8, 10, -14, -10, -16, -10, 6, 0, 8, -14, -2, -4, 12, -12]);
ECSearch("30.2-d",(13*w - 88)*OK,[-3, -1, 4, 5, -6, -2, 12, 9, -9, -10, 9, -4, 5, -14, 5, 4, -10, 13, 1, 0, 6, -11, -10, -14, -10, -3, -9]);
ECSearch("30.2-e",(13*w - 88)*OK,[1, -3, -4, -1, 6, 2, -4, 9, 3, 6, -9, 0, -3, -10, -1, 8, -10, -1, -1, 8, -10, 11, 2, 14, 6, 9, -1]);
ECSearch("30.2-f",(13*w - 88)*OK,[-2, -1, -1, 0, 6, -5, 1, -6, 7, 3, 10, -7, -9, -2, 13, 1, -6, 15, 4, -11, -4, -4, 7, 11, 8, -14, 13]);
ECSearch("30.2-g",(13*w - 88)*OK,[1, 1, 4, 3, 6, 2, -4, 9, -5, 6, -13, 8, -3, 14, -13, 16, 6, 3, 11, -16, -2, -17, 2, 14, 14, 1, 7]);
ECSearch("30.2-h",(13*w - 88)*OK,[1, -1, -4, -3, -6, -2, 4, 9, -5, -6, 13, 8, -3, -14, 13, 16, 6, -3, -11, 16, 2, 17, -2, 14, 14, 1, 7]);
ECSearch("30.2-i",(13*w - 88)*OK,[-2, 1, 1, 0, -6, 5, -1, -6, 7, -3, -10, -7, -9, 2, -13, 1, -6, -15, -4, 11, 4, 4, -7, 11, 8, -14, 13]);
ECSearch("30.2-j",(13*w - 88)*OK,[1, 3, 4, 1, -6, -2, 4, 9, 3, -6, 9, 0, -3, 10, 1, 8, -10, 1, 1, -8, 10, -11, -2, 14, 6, 9, -1]);
ECSearch("30.2-k",(13*w - 88)*OK,[-3, 1, -4, -5, 6, 2, -12, 9, -9, 10, -9, -4, 5, 14, -5, 4, -10, -13, -1, 0, -6, 11, 10, -14, -10, -3, -9]);
ECSearch("30.2-l",(13*w - 88)*OK,[0, 2, -2, -4, 6, 4, 6, 6, 6, -4, 0, 8, -4, -8, -10, -14, -10, 16, 10, -6, 0, -8, 14, -2, -4, 12, -12]);
ECSearch("30.2-m",(13*w - 88)*OK,[2, 3, -3, 0, -6, -9, 3, -6, -9, 9, 6, 9, 9, -6, -15, 7, -2, -3, -12, 9, -12, -12, -3, 13, 0, 18, -13]);
ECSearch("30.2-n",(13*w - 88)*OK,[3, 4, -1, -5, -9, -10, -9, -6, 12, -2, 0, -7, -4, -7, -2, -14, -1, -10, -1, -6, 6, -4, 7, 1, -7, -9, 3]);
ECSearch("30.4-a",(-w + 4)*OK,[2, 2, -2, 0, 0, -10, -4, 2, 6, -12, 6, -4, 10, -12, 6, -2, -4, 8, -8, 0, -4, 2, 6, -16, 0, 8, -6]);
ECSearch("30.4-b",(-w + 4)*OK,[-3, 1, 3, 2, -1, 5, 10, -10, -11, -10, 6, -10, -9, 12, -2, -7, -8, 14, 4, -12, -13, -13, 10, 2, 1, -4, 9]);
ECSearch("30.4-c",(-w + 4)*OK,[-3, -1, -3, -2, 1, -5, -10, -10, -11, 10, -6, -10, -9, -12, 2, -7, -8, -14, -4, 12, 13, 13, -10, 2, 1, -4, 9]);
ECSearch("30.4-d",(-w + 4)*OK,[2, -2, 2, 0, 0, 10, 4, 2, 6, 12, -6, -4, 10, 12, -6, -2, -4, -8, 8, 0, 4, -2, -6, -16, 0, 8, -6]);
ECSearch("30.3-a",(-13*w - 88)*OK,[3, -4, 5, 1, 9, 9, 10, 12, -6, 0, 2, -4, -7, 2, 7, -1, -14, 1, 10, -6, 6, -7, 4, 1, -9, -7, -23]);
ECSearch("30.3-b",(-13*w - 88)*OK,[2, -3, 0, 3, 6, -3, 9, -9, -6, -6, -9, 9, 9, 15, 6, -2, 7, 12, 3, 12, -9, 3, 12, 13, 18, 0, -4]);
ECSearch("30.3-c",(-13*w - 88)*OK,[0, -2, 4, 2, -6, -6, -4, 6, 6, 0, 4, -4, 8, 10, 8, -10, -14, -10, -16, 0, 6, -14, 8, -2, 12, -4, 4]);
ECSearch("30.3-d",(-13*w - 88)*OK,[-3, -1, 5, 4, -6, 12, -2, -9, 9, 9, -10, 5, -4, 5, -14, -10, 4, 1, 13, 6, 0, -10, -11, -14, -3, -10, 4]);
ECSearch("30.3-e",(-13*w - 88)*OK,[1, -3, -1, -4, 6, -4, 2, 3, 9, -9, 6, -3, 0, -1, -10, -10, 8, -1, -1, -10, 8, 2, 11, 14, 9, 6, -16]);
ECSearch("30.3-f",(-13*w - 88)*OK,[-2, -1, 0, -1, 6, 1, -5, 7, -6, 10, 3, -9, -7, 13, -2, -6, 1, 4, 15, -4, -11, 7, -4, 11, -14, 8, -8]);
ECSearch("30.3-g",(-13*w - 88)*OK,[1, 1, 3, 4, 6, -4, 2, -5, 9, -13, 6, -3, 8, -13, 14, 6, 16, 11, 3, -2, -16, 2, -17, 14, 1, 14, 16]);
ECSearch("30.3-h",(-13*w - 88)*OK,[1, -1, -3, -4, -6, 4, -2, -5, 9, 13, -6, -3, 8, 13, -14, 6, 16, -11, -3, 2, 16, -2, 17, 14, 1, 14, 16]);
ECSearch("30.3-i",(-13*w - 88)*OK,[-2, 1, 0, 1, -6, -1, 5, 7, -6, -10, -3, -9, -7, -13, 2, -6, 1, -4, -15, 4, 11, -7, 4, 11, -14, 8, -8]);
ECSearch("30.3-j",(-13*w - 88)*OK,[1, 3, 1, 4, -6, 4, -2, 3, 9, 9, -6, -3, 0, 1, 10, -10, 8, 1, 1, 10, -8, -2, -11, 14, 9, 6, -16]);
ECSearch("30.3-k",(-13*w - 88)*OK,[-3, 1, -5, -4, 6, -12, 2, -9, 9, -9, 10, 5, -4, -5, 14, -10, 4, -1, -13, -6, 0, 10, 11, -14, -3, -10, 4]);
ECSearch("30.3-l",(-13*w - 88)*OK,[0, 2, -4, -2, 6, 6, 4, 6, 6, 0, -4, -4, 8, -10, -8, -10, -14, 10, 16, 0, -6, 14, -8, -2, 12, -4, 4]);
ECSearch("30.3-m",(-13*w - 88)*OK,[2, 3, 0, -3, -6, 3, -9, -9, -6, 6, 9, 9, 9, -15, -6, -2, 7, -12, -3, -12, 9, -3, -12, 13, 18, 0, -4]);
ECSearch("30.3-n",(-13*w - 88)*OK,[3, 4, -5, -1, -9, -9, -10, 12, -6, 0, -2, -4, -7, -2, -7, -1, -14, -1, -10, 6, -6, 7, -4, 1, -9, -7, -23]);
ECSearch("32.1-a",(92*w - 624)*OK,[0, 0, -4, 4, 0, 0, 0, 12, -12, -10, -10, 4, -4, 0, 0, -12, 12, 6, 6, 0, 0, 0, 0, -20, 20, 22, 0, 0, 0]);
ECSearch("32.1-b",(92*w - 624)*OK,[0, 0, -2, -2, 0, 0, 0, -2, -2, 10, 10, 14, 14, 0, 0, -10, -10, -6, -6, 0, 0, 0, 0, 6, 6, -22, 0, 0, 0]);
ECSearch("32.1-c",(92*w - 624)*OK,[0, 0, 2, 2, 0, 0, 0, 2, 2, 10, 10, -14, -14, 0, 0, 10, 10, -6, -6, 0, 0, 0, 0, -6, -6, -22, 0, 0, 0]);
ECSearch("32.1-d",(92*w - 624)*OK,[0, 0, 4, -4, 0, 0, 0, -12, 12, -10, -10, -4, 4, 0, 0, 12, -12, 6, 6, 0, 0, 0, 0, 20, -20, 22, 0, 0, 0]);
