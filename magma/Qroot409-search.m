print "Field 2.2.409.1";
Qx<x> := PolynomialRing(RationalField());
K<w> := NumberField(x^2 - x - 102);
OK := Integers(K);
Plist := [];
Append(~Plist,(219*w - 2324)*OK);
Append(~Plist,(219*w + 2105)*OK);
Append(~Plist,(11066*w + 106365)*OK);
Append(~Plist,(11066*w - 117431)*OK);
Append(~Plist,(-18*w - 173)*OK);
Append(~Plist,(-18*w + 191)*OK);
Append(~Plist,(-8*w + 85)*OK);
Append(~Plist,(-8*w - 77)*OK);
Append(~Plist,(-286*w + 3035)*OK);
Append(~Plist,(286*w + 2749)*OK);
Append(~Plist,(1600*w + 15379)*OK);
Append(~Plist,(-1600*w + 16979)*OK);
Append(~Plist,(7)*OK);
Append(~Plist,(116*w - 1231)*OK);
Append(~Plist,(-116*w - 1115)*OK);
Append(~Plist,(-126240*w + 1339643)*OK);
Append(~Plist,(-126240*w - 1213403)*OK);
Append(~Plist,(12*w - 127)*OK);
Append(~Plist,(12*w + 115)*OK);
Append(~Plist,(285678*w + 2745901)*OK);
Append(~Plist,(-285678*w + 3031579)*OK);
Append(~Plist,(6990*w - 74177)*OK);
Append(~Plist,(-6990*w - 67187)*OK);
Append(~Plist,(37712*w + 362483)*OK);
Append(~Plist,(37712*w - 400195)*OK);
Append(~Plist,(420*w + 4037)*OK);
Append(~Plist,(-420*w + 4457)*OK);
Append(~Plist,(11)*OK);
Append(~Plist,(59844*w + 575213)*OK);
Append(~Plist,(59844*w - 635057)*OK);
Append(~Plist,(20094*w + 193141)*OK);
Append(~Plist,(-20094*w + 213235)*OK);
Append(~Plist,(1028*w - 10909)*OK);
Append(~Plist,(-1028*w - 9881)*OK);
Append(~Plist,(6*w + 59)*OK);
Append(~Plist,(6*w - 65)*OK);
Append(~Plist,(-2*w + 25)*OK);
Append(~Plist,(2*w + 23)*OK);
Append(~Plist,(13)*OK);
Append(~Plist,(10*w - 107)*OK);
Append(~Plist,(10*w + 97)*OK);
Append(~Plist,(24170*w - 256489)*OK);
Append(~Plist,(24170*w + 232319)*OK);
Append(~Plist,(-38*w - 365)*OK);
Append(~Plist,(-38*w + 403)*OK);
Append(~Plist,(10628*w - 112783)*OK);
Append(~Plist,(10628*w + 102155)*OK);
Append(~Plist,(-15142*w - 145543)*OK);
Append(~Plist,(-15142*w + 160685)*OK);
Append(~Plist,(-5676*w - 54557)*OK);
Append(~Plist,(-5676*w + 60233)*OK);
Append(~Plist,(70*w + 673)*OK);
Append(~Plist,(70*w - 743)*OK);
Append(~Plist,(-224*w + 2377)*OK);
Append(~Plist,(-224*w - 2153)*OK);
Append(~Plist,(-894*w + 9487)*OK);
Append(~Plist,(-894*w - 8593)*OK);
Append(~Plist,(5238*w - 55585)*OK);
Append(~Plist,(5238*w + 50347)*OK);
Append(~Plist,(-178*w + 1889)*OK);
Append(~Plist,(-178*w - 1711)*OK);
Append(~Plist,(384*w - 4075)*OK);
Append(~Plist,(-384*w - 3691)*OK);
Append(~Plist,(-6*w - 55)*OK);
Append(~Plist,(6*w - 61)*OK);
Append(~Plist,(241414*w + 2320441)*OK);
Append(~Plist,(241414*w - 2561855)*OK);
Append(~Plist,(60*w - 637)*OK);
Append(~Plist,(-60*w - 577)*OK);
Append(~Plist,(-48*w - 461)*OK);
Append(~Plist,(-48*w + 509)*OK);
Append(~Plist,(19)*OK);
Append(~Plist,(-2*w + 7)*OK);
Append(~Plist,(-2*w - 5)*OK);
Append(~Plist,(-100*w - 961)*OK);
Append(~Plist,(-100*w + 1061)*OK);
Append(~Plist,(-4*w - 43)*OK);
Append(~Plist,(4*w - 47)*OK);
Append(~Plist,(-72948*w - 701167)*OK);
Append(~Plist,(-72948*w + 774115)*OK);
Append(~Plist,(-7866*w - 75607)*OK);
Append(~Plist,(-7866*w + 83473)*OK);
Append(~Plist,(-2*w + 1)*OK);
Append(~Plist,(-492*w - 4729)*OK);
Append(~Plist,(-492*w + 5221)*OK);
Append(~Plist,(626*w + 6017)*OK);
Append(~Plist,(-626*w + 6643)*OK);
Append(~Plist,(-11942*w + 126727)*OK);
Append(~Plist,(-11942*w - 114785)*OK);
Append(~Plist,(2610*w - 27697)*OK);
Append(~Plist,(2610*w + 25087)*OK);
Append(~Plist,(1332*w + 12803)*OK);
Append(~Plist,(1332*w - 14135)*OK);
Append(~Plist,(-86490*w + 917821)*OK);
Append(~Plist,(-86490*w - 831331)*OK);
Append(~Plist,(-3048*w - 29297)*OK);
Append(~Plist,(-3048*w + 32345)*OK);
Append(~Plist,(352074*w + 3384091)*OK);
Append(~Plist,(352074*w - 3736165)*OK);
Append(~Plist,(-2*w + 31)*OK);
effort := 400;
ECSearch := procedure(class_label, N, aplist);
print "Isogeny class ", class_label;
goodP := [P: P in Plist | Valuation(N,P) eq 0];
goodP := [goodP[i]: i in [1..#(aplist)]];
curves := EllipticCurveSearch(N,effort : Primes:=goodP, Traces:=aplist);
curves := [E: E in curves | &and[TraceOfFrobenius(E,goodP[i]) eq aplist[i] : i in [1..#(aplist)]]];
if #curves eq 0 then print "No curve found"; end if;
for E in curves do;
 a1,a2,a3,a4,a6:=Explode(aInvariants(E));
 printf "Curve [%o,%o,%o,%o,%o]\n",a1,a2,a3,a4,a6;
 end for;
end procedure;
SetColumns(0);

ECSearch("3.1-a",(11066*w + 106365)*OK,[1, 1, -2, 2, -4, 6, -6, 2, -4, 0, 6, -4, 0, 6, 12, 0, 14, -4, -16, -10, 6, -6, 16, -14, 6, -6, 2, -10, 20]);
ECSearch("3.2-a",(11066*w - 117431)*OK,[1, 1, -2, -4, 2, -6, 6, -4, 2, 6, 0, -4, 6, 0, 0, 12, -4, 14, -10, -16, -6, 6, -14, 16, -6, 6, 2, 20, -10]);
ECSearch("4.1-a",(2)*OK,[3, -2, -2, 3, 2, 2, -2, 8, -6, -6, -11, 0, 10, -3, -3, 11, 16, 14, -1, 13, -12, -5, -15, 3, -12, 10, -18, -3]);
ECSearch("4.1-b",(2)*OK,[-2, 3, 3, -2, 2, 2, 8, -2, -6, -6, -11, 10, 0, -3, -3, 16, 11, -1, 14, -12, 13, -15, -5, -12, 3, 10, -3, -18]);
ECSearch("6.1-a",(5*w + 48)*OK,[0, 1, -2, 2, 1, 0, -3, 1, 6, -7, 2, 4, 9, -14, 6, -15, -5, 10, -17, 3, 4, 8, -8, 10, -6, 15, 8, -15]);
ECSearch("6.1-b",(5*w + 48)*OK,[-1, -2, 2, 0, -2, -2, 6, -4, 4, -10, 12, 8, -2, -12, 0, -6, 16, 8, 6, -10, 2, 8, -14, 18, -6, -14, -2, 12]);
ECSearch("6.1-c",(5*w + 48)*OK,[2, 1, 2, 0, -5, -2, 3, -7, -2, 5, 6, -10, -11, 0, 6, 3, -11, 8, -3, -19, 14, 8, -8, -6, 6, -5, 4, -15]);
ECSearch("6.4-a",(-5*w + 53)*OK,[0, 1, 2, -2, 0, 1, 1, -3, -7, 6, 2, 9, 4, 6, -14, -5, -15, -17, 10, 4, 3, -8, 8, -6, 10, 15, -15, 8]);
ECSearch("6.4-b",(-5*w + 53)*OK,[-1, -2, 0, 2, -2, -2, -4, 6, -10, 4, 12, -2, 8, 0, -12, 16, -6, 6, 8, 2, -10, -14, 8, -6, 18, -14, 12, -2]);
ECSearch("6.4-c",(-5*w + 53)*OK,[2, 1, 0, 2, -2, -5, -7, 3, 5, -2, 6, -11, -10, 6, 0, -11, 3, -3, 8, 14, -19, -8, 8, 6, -6, -5, -15, 4]);
ECSearch("8.1-a",(438*w - 4648)*OK,[-1, 2, 0, -3, 0, 6, -6, -6, -12, 0, 5, 12, -6, 15, -9, -9, 6, 6, -9, 3, 6, 13, 19, 13, 4, -14, 12, -15]);
ECSearch("8.1-b",(438*w - 4648)*OK,[0, 0, 4, -2, 2, 2, 4, -8, -8, 4, 6, 0, 6, 10, -8, -2, 4, -14, -14, -10, 2, 4, -14, 14, 2, -4, 12, -12]);
ECSearch("8.2-a",(438*w + 4210)*OK,[2, -1, -3, 0, 6, 0, -6, -6, 0, -12, 5, -6, 12, -9, 15, 6, -9, -9, 6, 6, 3, 19, 13, 4, 13, -14, -15, 12]);
ECSearch("8.2-b",(438*w + 4210)*OK,[0, 0, -2, 4, 2, 2, -8, 4, 4, -8, 6, 6, 0, -8, 10, 4, -2, -14, -14, 2, -10, -14, 4, 2, 14, -4, -12, 12]);
ECSearch("9.1-a",(3)*OK,[2, -2, 0, 4, 0, -4, 2, 2, 12, 0, -2, 10, -2, 4, 0, -4, 8, -6, -6, 2, -6, -1, 7, -5, -13, 7, 14, 18]);
ECSearch("9.1-b",(3)*OK,[0, -1, -1, 3, 4, -2, -6, 5, -5, 2, -6, 2, -5, -6, -3, 12, 1, -13, -3, 2, 8, -4, 7, 15, -15, 10, -8, 3]);
ECSearch("9.1-c",(3)*OK,[-1, 0, 3, -1, -2, 4, 5, -6, 2, -5, -6, -5, 2, -3, -6, 1, 12, -3, -13, 8, 2, 7, -4, -15, 15, 10, 3, -8]);
ECSearch("9.1-d",(3)*OK,[-2, 2, 4, 0, -4, 0, 2, 2, 0, 12, -2, -2, 10, 0, 4, 8, -4, -6, -6, -6, 2, 7, -1, -13, -5, 7, 18, 14]);
ECSearch("9.2-a",(2*w - 21)*OK,[1, 2, -1, -2, 2, 3, 6, 1, 5, 12, -9, -4, -6, 3, 6, -12, 13, -7, -10, -5, -3, -6, -4, 8, 0, 0, 1, 4, 5]);
ECSearch("9.2-b",(2*w - 21)*OK,[1, -1, 2, -2, -4, 6, 6, -2, -4, 0, -6, -4, 0, -6, 12, 0, -14, -4, -16, 10, 6, 6, -16, 14, -6, 6, -2, 10, 20]);
ECSearch("9.2-c",(2*w - 21)*OK,[1, -2, 1, 2, 2, 3, -6, -1, 5, 12, 9, -4, -6, -3, 6, 12, -13, -7, -10, 5, -3, 6, 4, -8, 0, 0, -1, -4, 5]);
ECSearch("9.3-a",(2*w + 19)*OK,[2, 1, -1, 2, -2, 6, 3, 5, 1, -9, 12, -4, 3, -6, -12, 6, -7, 13, -5, -10, -6, -3, 8, -4, 0, 0, 1, 5, 4]);
ECSearch("9.3-b",(2*w + 19)*OK,[-1, 1, 2, -4, -2, 6, 6, -4, -2, -6, 0, -4, -6, 0, 0, 12, -4, -14, 10, -16, 6, 6, 14, -16, 6, -6, -2, 20, 10]);
ECSearch("9.3-c",(2*w + 19)*OK,[-2, 1, 1, 2, 2, -6, 3, 5, -1, 9, 12, -4, -3, -6, 12, 6, -7, -13, 5, -10, 6, -3, -8, 4, 0, 0, -1, 5, -4]);
