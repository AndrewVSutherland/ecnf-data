Data fields for an elliptic curve over a number field

K is a number field of degree d whose generator is specified in the
database.  In the case d=2, the generator is:

--either sqrt(m) with square-free m congruent to 2 or 3 (mod 4),
minimum polynomial x^2-m, discriminant 4m, label 2.2.D.1 (if m>0) or
2.0.D.1 (if m<0) where D=|4m|;

--or (1+sqrt(m))/2 with square-free m congruent to 1 (mod 4), minimum
polynomial x^2-x-(m-1)/4, discriminant m, label 2.2.D.1 (if m>0) or
2.0.D.1 (if m<0) where D=|m|.

In the sample, d=2 and m=-1 so the generator is i=sqrt(-1) and field
label 2.0.4.1.

Strings have been shown between quotes ('...') for clarity here, but
in the raw data files these would be omitted.  Fields whose values are
not known would be omitted from the database but are shown here with
'?'  in order to specify the field's name.  A Q-string is a string
with no spaces which represents a rational number (or integer),
e.g. '0', '1/2'.  Number field elements are represented by lists of d
Q-strings where d is the degree.  Points are represented by lists of 3
number field elements.

In the sample, the field is Q(i) (label "2.0.4.1"), the a-invariants
are [1+i,1+i,i,-1+i,-1], the conductor is the principal ideal (7+4i)
of norm 65.

field_label        '2.0.4.1'
degree             2
signature          [0, 1]
abs_disc           4
label              '2.0.4.1-[65,18,1]-a1'
short_label        '[65,18,1]-a1'
conductor_label    '[65,18,1]'
iso_label          'a'
conductor_ideal    '[65,18,1]'
conductor_norm     65
number             1
ainvs              [[['1'],['1']],[['1'],['1']],[['0'],['1']],[['-1'],['1']],[['-1'],['0']]]  (a list of 5 lists of d Q-strings)
jinv               [['-3306304/325'],['-732672/325']] (a list of d Q-strings)
cm                 0
Q_curve            False
base_change        False
rank               0
rank_bounds        ?
analytic_rank      0
gens               [] (a list of triples of lists of d Q-strings)
torsion_order      6
torsion_structure  [6]
torsion_gens       [[['0','-1'],['-1','-1'],['1','0']]] (a list of triples of lists of d Q-strings)
sha_an             ?

How things are stored in the actual database:

* A rational number a/b is stored as a string "a/b" with no embedded space
* If integral, just store "a"
* A K-element is a list of d rationals, i.e. a list of d Q-strings
* ainvs: list of 5 K-elements
* point: list of 3 K-elements
* gens:  list of points

How things are presented in the raw data file:

* ints and rationals as standard string representation (no space)
* K-elements: d integer or rational strings joind by ',' (no space)
* ainvs: 5 K-elements separated by space
* point: [x:y:z] where each of x,y,z is a K-element
* gens: points separated by space (the data field ngens precedes these
  to show how many follow)

============================================================
File 1: prefix "curves", 13 fields (see curves.test for the sample):

field_label conductor_label iso_label number conductor_ideal
     conductor_norm a1 a2 a3 a4 a6 cm Q_curve

2.0.4.1 [65,18,1] a 1 [65,18,1] 65 1,1 1,1 0,1 -1,1 -1,0 0 0

------------------------------------------------------------ File 2:
prefix "curve_data", 9+ngens fields where ngens is the 8th (see
curve_data.test for the sample):

field_label conductor_label iso_label number rank rank_bounds
      analytic_rank ngens gen_1 ... gen_n sha_an

2.0.4.1 [65,18,1] a 1 0 ? 0 0 ?
------------------------------------------------------------

Further files may be used later to supply additional data.  If so, the
additional files will have a different prefix and the first four
fields will be exactly as above (field_label, conductor_label,
iso_label, number).
